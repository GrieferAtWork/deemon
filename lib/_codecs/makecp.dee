

import * from deemon;

while (file.stdin.readline().strip() != "0_");

local codes = list(256,0);
local i = 0;
for (;;) {
	local line;
	if (!file.stdin.readline(true))
		break;
	do {
		line = file.stdin.readline(false);
	} while (line == " ");
	if (#line == 2 && line[1] == "_") {
		i = int(line[0],16) * 16;
		continue;
	}
	if (!line) line = "0";
	local code = int(line,16);
	if (i > 0xff) break;
	print file.stderr: "ENCODE({} = {})".format({ i.hex(), code.hex() });
	codes[i++] = code;
}

print "\
/* Copyright (c) 2018 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

global codec_page =";
local y = string.fromseq(codes);
print repr codes;
print repr y;
print repr y.segments(16);
for (local x: string.fromseq(codes).segments(16)) {
	print "\t\"",;
	for (local ch: x)
		print "\\u%.4X" % ch.ord(),;
	print "\"";
}
print ";";





