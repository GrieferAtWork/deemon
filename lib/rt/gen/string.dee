/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;
import ..hash as rtHash;

function DEFINE_STRING(name: string, value: string): File {
	local hash32 = rtHash.hash32(value);
	local hash64 = rtHash.hash64(value);
	if (int.SIZE_MAX > 0xffffffff) {
		assert value.operator hash() == hash64;
	} else {
		assert value.operator hash() == hash32;
	}
	return File.stdout
		<< "DEFINE_STRING_EX(" << name
		<< ", " << repr(value)
		<< ", " << hash32.hex()
		<< ", " << hash64.hex()
		<< ");\n";
}

function PRIVATE_DEFINE_STRING(name: string, value: string): File {
	File.stdout << "PRIVATE ";
	return DEFINE_STRING(name, value);
}

function INTERN_DEFINE_STRING(name: string, value: string): File {
	File.stdout << "INTERN ";
	return DEFINE_STRING(name, value);
}
