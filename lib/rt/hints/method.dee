/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;

@@Map TypeMethodIds to their internal ID.
@@e.g. @(TMH_BYNAME["seq_operator_iter"] == 3)
global final TMH_BYNAME: {string: int} = {
/*[[[deemon (print_TMH_BYNAME from "....src.deemon.method-hints.method-hints")();]]]*/
	"seq_operator_bool": 0,
	"seq_operator_sizeob": 1,
	"seq_operator_size": 2,
	"seq_operator_iter": 3,
	"seq_operator_foreach": 4,
	"seq_operator_foreach_pair": 5,
	"seq_operator_getitem": 6,
	"seq_operator_getitem_index": 7,
	"seq_operator_trygetitem": 8,
	"seq_operator_trygetitem_index": 9,
	"seq_operator_hasitem": 10,
	"seq_operator_hasitem_index": 11,
	"seq_operator_bounditem": 12,
	"seq_operator_bounditem_index": 13,
	"seq_operator_delitem": 14,
	"seq_operator_delitem_index": 15,
	"seq_operator_setitem": 16,
	"seq_operator_setitem_index": 17,
	"seq_operator_getrange": 18,
	"seq_operator_getrange_index": 19,
	"seq_operator_getrange_index_n": 20,
	"seq_operator_delrange": 21,
	"seq_operator_delrange_index": 22,
	"seq_operator_delrange_index_n": 23,
	"seq_operator_setrange": 24,
	"seq_operator_setrange_index": 25,
	"seq_operator_setrange_index_n": 26,
	"seq_operator_assign": 27,
	"seq_operator_hash": 28,
	"seq_operator_compare": 29,
	"seq_operator_compare_eq": 30,
	"seq_operator_trycompare_eq": 31,
	"seq_operator_eq": 32,
	"seq_operator_ne": 33,
	"seq_operator_lo": 34,
	"seq_operator_le": 35,
	"seq_operator_gr": 36,
	"seq_operator_ge": 37,
	"seq_operator_inplace_add": 38,
	"seq_operator_inplace_mul": 39,
	"seq_enumerate": 40,
	"seq_enumerate_index": 41,
	"seq_makeenumeration": 42,
	"seq_makeenumeration_with_range": 43,
	"seq_makeenumeration_with_intrange": 44,
	"seq_foreach_reverse": 45,
	"seq_enumerate_index_reverse": 46,
	"seq_unpack": 47,
	"seq_unpack_ex": 48,
	"seq_unpack_ub": 49,
	"seq_trygetfirst": 50,
	"seq_getfirst": 51,
	"seq_boundfirst": 52,
	"seq_delfirst": 53,
	"seq_setfirst": 54,
	"seq_trygetlast": 55,
	"seq_getlast": 56,
	"seq_boundlast": 57,
	"seq_dellast": 58,
	"seq_setlast": 59,
	"seq_cached": 60,
	"seq_frozen": 61,
	"seq_any": 62,
	"seq_any_with_key": 63,
	"seq_any_with_range": 64,
	"seq_any_with_range_and_key": 65,
	"seq_all": 66,
	"seq_all_with_key": 67,
	"seq_all_with_range": 68,
	"seq_all_with_range_and_key": 69,
	"seq_parity": 70,
	"seq_parity_with_key": 71,
	"seq_parity_with_range": 72,
	"seq_parity_with_range_and_key": 73,
	"seq_reduce": 74,
	"seq_reduce_with_init": 75,
	"seq_reduce_with_range": 76,
	"seq_reduce_with_range_and_init": 77,
	"seq_min": 78,
	"seq_min_with_key": 79,
	"seq_min_with_range": 80,
	"seq_min_with_range_and_key": 81,
	"seq_max": 82,
	"seq_max_with_key": 83,
	"seq_max_with_range": 84,
	"seq_max_with_range_and_key": 85,
	"seq_sum": 86,
	"seq_sum_with_range": 87,
	"seq_count": 88,
	"seq_count_with_key": 89,
	"seq_count_with_range": 90,
	"seq_count_with_range_and_key": 91,
	"seq_contains": 92,
	"seq_contains_with_key": 93,
	"seq_contains_with_range": 94,
	"seq_contains_with_range_and_key": 95,
	"seq_operator_contains": 96,
	"seq_locate": 97,
	"seq_locate_with_range": 98,
	"seq_rlocate": 99,
	"seq_rlocate_with_range": 100,
	"seq_startswith": 101,
	"seq_startswith_with_key": 102,
	"seq_startswith_with_range": 103,
	"seq_startswith_with_range_and_key": 104,
	"seq_endswith": 105,
	"seq_endswith_with_key": 106,
	"seq_endswith_with_range": 107,
	"seq_endswith_with_range_and_key": 108,
	"seq_find": 109,
	"seq_find_with_key": 110,
	"seq_rfind": 111,
	"seq_rfind_with_key": 112,
	"seq_erase": 113,
	"seq_insert": 114,
	"seq_insertall": 115,
	"seq_pushfront": 116,
	"seq_append": 117,
	"seq_extend": 118,
	"seq_xchitem_index": 119,
	"seq_clear": 120,
	"seq_pop": 121,
	"seq_remove": 122,
	"seq_remove_with_key": 123,
	"seq_rremove": 124,
	"seq_rremove_with_key": 125,
	"seq_removeall": 126,
	"seq_removeall_with_key": 127,
	"seq_removeif": 128,
	"seq_resize": 129,
	"seq_fill": 130,
	"seq_reverse": 131,
	"seq_reversed": 132,
	"seq_sort": 133,
	"seq_sort_with_key": 134,
	"seq_sorted": 135,
	"seq_sorted_with_key": 136,
	"seq_bfind": 137,
	"seq_bfind_with_key": 138,
	"seq_bposition": 139,
	"seq_bposition_with_key": 140,
	"seq_brange": 141,
	"seq_brange_with_key": 142,
	"set_operator_iter": 143,
	"set_operator_foreach": 144,
	"set_operator_sizeob": 145,
	"set_operator_size": 146,
	"set_operator_hash": 147,
	"set_operator_compare_eq": 148,
	"set_operator_trycompare_eq": 149,
	"set_operator_eq": 150,
	"set_operator_ne": 151,
	"set_operator_lo": 152,
	"set_operator_le": 153,
	"set_operator_gr": 154,
	"set_operator_ge": 155,
	"set_operator_inv": 156,
	"set_operator_add": 157,
	"set_operator_sub": 158,
	"set_operator_and": 159,
	"set_operator_xor": 160,
	"set_operator_inplace_add": 161,
	"set_operator_inplace_sub": 162,
	"set_operator_inplace_and": 163,
	"set_operator_inplace_xor": 164,
	"set_frozen": 165,
	"set_unify": 166,
	"set_insert": 167,
	"set_insertall": 168,
	"set_remove": 169,
	"set_removeall": 170,
	"set_pop": 171,
	"set_pop_with_default": 172,
	"map_operator_iter": 173,
	"map_operator_foreach_pair": 174,
	"map_operator_sizeob": 175,
	"map_operator_size": 176,
	"map_operator_getitem": 177,
	"map_operator_trygetitem": 178,
	"map_operator_getitem_index": 179,
	"map_operator_trygetitem_index": 180,
	"map_operator_getitem_string_hash": 181,
	"map_operator_trygetitem_string_hash": 182,
	"map_operator_getitem_string_len_hash": 183,
	"map_operator_trygetitem_string_len_hash": 184,
	"map_operator_bounditem": 185,
	"map_operator_bounditem_index": 186,
	"map_operator_bounditem_string_hash": 187,
	"map_operator_bounditem_string_len_hash": 188,
	"map_operator_hasitem": 189,
	"map_operator_hasitem_index": 190,
	"map_operator_hasitem_string_hash": 191,
	"map_operator_hasitem_string_len_hash": 192,
	"map_operator_delitem": 193,
	"map_operator_delitem_index": 194,
	"map_operator_delitem_string_hash": 195,
	"map_operator_delitem_string_len_hash": 196,
	"map_operator_setitem": 197,
	"map_operator_setitem_index": 198,
	"map_operator_setitem_string_hash": 199,
	"map_operator_setitem_string_len_hash": 200,
	"map_operator_contains": 201,
	"map_keys": 202,
	"map_iterkeys": 203,
	"map_values": 204,
	"map_itervalues": 205,
	"map_enumerate": 206,
	"map_enumerate_range": 207,
	"map_makeenumeration": 208,
	"map_makeenumeration_with_range": 209,
	"map_operator_compare_eq": 210,
	"map_operator_trycompare_eq": 211,
	"map_operator_eq": 212,
	"map_operator_ne": 213,
	"map_operator_lo": 214,
	"map_operator_le": 215,
	"map_operator_gr": 216,
	"map_operator_ge": 217,
	"map_operator_add": 218,
	"map_operator_sub": 219,
	"map_operator_and": 220,
	"map_operator_xor": 221,
	"map_operator_inplace_add": 222,
	"map_operator_inplace_sub": 223,
	"map_operator_inplace_and": 224,
	"map_operator_inplace_xor": 225,
	"map_frozen": 226,
	"map_setold": 227,
	"map_setold_ex": 228,
	"map_setnew": 229,
	"map_setnew_ex": 230,
	"map_setdefault": 231,
	"map_update": 232,
	"map_remove": 233,
	"map_removekeys": 234,
	"map_pop": 235,
	"map_pop_with_default": 236,
	"map_popitem": 237,
/*[[[end]]]*/
}.frozen;

@@Map TypeMethodHints to their name, given their ID
@@e.g. @(TMH_BYID[3] == "seq_operator_iter")
global final TMH_BYID: {int: string} = Mapping.frozen(
	for (local id, name: TMH_BYNAME) (name, id));
