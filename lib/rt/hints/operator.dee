/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;

@@Check if deemon was compiled with `CONFIG_CALLTUPLE_OPTIMIZATIONS` enabled.
local function test__CONFIG_CALLTUPLE_OPTIMIZATIONS(): bool {
	function getArgs(args...) -> args;
	local args = (10, 20);
	__asm__("" : "+X" (args));
	return args.id == getArgs(args...).id;
}

local final if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4 =
	test__CONFIG_CALLTUPLE_OPTIMIZATIONS() ? 0 : 4;

@@Map TypeNativeOperator to their internal ID.
@@e.g. @(TNO_BYNAME["call"] == 7)
global final TNO_BYNAME: {string: int} = {
/*[[[deemon (print_TNO_BYNAME from "....src.deemon.method-hints.method-hints")();]]]*/
	"assign": 0,
	"move_assign": 1,
	"str": 2,
	"print": 3,
	"repr": 4,
	"printrepr": 5,
	"bool": 6,
	"call": 7,
	"call_kw": 8,
	"thiscall": 9,
	"thiscall_kw": 10,
	"call_tuple": 11, /* #if defined(CONFIG_CALLTUPLE_OPTIMIZATIONS) */
	"call_tuple_kw": 12, /* #if defined(CONFIG_CALLTUPLE_OPTIMIZATIONS) */
	"thiscall_tuple": 13, /* #if defined(CONFIG_CALLTUPLE_OPTIMIZATIONS) */
	"thiscall_tuple_kw": 14, /* #if defined(CONFIG_CALLTUPLE_OPTIMIZATIONS) */
	"iter_next": 15 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"nextpair": 16 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"nextkey": 17 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"nextvalue": 18 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"advance": 19 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"int": 20 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"int32": 21 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"int64": 22 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"double": 23 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hash": 24 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"compare_eq": 25 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"compare": 26 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"trycompare_eq": 27 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"eq": 28 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"ne": 29 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"lo": 30 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"le": 31 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"gr": 32 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"ge": 33 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"iter": 34 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"foreach": 35 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"foreach_pair": 36 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"sizeob": 37 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"size": 38 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"size_fast": 39 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"contains": 40 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getitem_index_fast": 41 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getitem": 42 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getitem_index": 43 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getitem_string_hash": 44 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getitem_string_len_hash": 45 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"trygetitem": 46 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"trygetitem_index": 47 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"trygetitem_string_hash": 48 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"trygetitem_string_len_hash": 49 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"bounditem": 50 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"bounditem_index": 51 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"bounditem_string_hash": 52 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"bounditem_string_len_hash": 53 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasitem": 54 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasitem_index": 55 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasitem_string_hash": 56 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasitem_string_len_hash": 57 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delitem": 58 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delitem_index": 59 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delitem_string_hash": 60 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delitem_string_len_hash": 61 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setitem": 62 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setitem_index": 63 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setitem_string_hash": 64 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setitem_string_len_hash": 65 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getrange": 66 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getrange_index": 67 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getrange_index_n": 68 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delrange": 69 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delrange_index": 70 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delrange_index_n": 71 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setrange": 72 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setrange_index": 73 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setrange_index_n": 74 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inv": 75 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"pos": 76 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"neg": 77 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"add": 78 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_add": 79 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"sub": 80 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_sub": 81 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"mul": 82 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_mul": 83 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"div": 84 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_div": 85 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"mod": 86 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_mod": 87 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"shl": 88 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_shl": 89 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"shr": 90 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_shr": 91 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"and": 92 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_and": 93 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"or": 94 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_or": 95 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"xor": 96 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_xor": 97 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"pow": 98 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inplace_pow": 99 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"inc": 100 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"dec": 101 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"enter": 102 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"leave": 103 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getattr": 104 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getattr_string_hash": 105 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"getattr_string_len_hash": 106 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"boundattr": 107 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"boundattr_string_hash": 108 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"boundattr_string_len_hash": 109 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasattr": 110 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasattr_string_hash": 111 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"hasattr_string_len_hash": 112 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delattr": 113 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delattr_string_hash": 114 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"delattr_string_len_hash": 115 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setattr": 116 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setattr_string_hash": 117 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
	"setattr_string_len_hash": 118 - if__ndefined_CONFIG_CALLTUPLE_OPTIMIZATIONS___then__4,
/*[[[end]]]*/
}.frozen;

@@Map TypeNativeOperator to their name, given their ID
@@e.g. @(TNO_BYID[7] == "call")
global final TNO_BYID: {int: string} = Mapping.frozen(
	for (local id, name: TNO_BYNAME) (name, id));
