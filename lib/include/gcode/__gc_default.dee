/* Copyright (c) 2018-2023 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2023 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#pragma once
#include "../__stddef.dee"

/* I don't expect anyone to remember gcode, but
 * the files in this folder implement what little
 * of a standard library gcode actually had to offer. */

/* Looking back, gcode isn't really something I'm too proud of,
 * but it was still a part of my learning process and when
 * compared to what deemon is today, I think I've learned quite
 * a lot since then. */

/* So embracing that past and considering the fact that gcode
 * is kind of the spiritual ancestor to deemon, I decided to
 * include this kind-of backwards compatibility library. */

/* Of course there are some things we can't replicate
 * (like the wheird way assignment worked). But we're
 * not trying to go back. This is just for fun! */

#pragma push_macro(undef, "from", "import")
from "ctypes" import
#pragma pop_macro("from", "import")
	SInt8 = "int8_t",
	SInt16 = "int16_t",
	SInt32 = "int32_t",
	SInt64 = "int64_t",
	UInt8 = "uint8_t",
	UInt16 = "uint16_t",
	UInt32 = "uint32_t",
	UInt64 = "uint64_t",
	Float = "float",
	Currency = "float",
	Real48 = "float",
	Double = "double",
	Real = "double",
	Extended = "ldouble"
;

#define __len__    __size__
#define __name__   __FUNCTION__
#define __print__  print

#ifndef NULL
#define NULL none
#endif

/* Define keywords such that they more closely resemble gcode. */
#define if     if pack
#define then   /* nothing */
#define begin  {
#define end    }
#define repeat do
#define until  while pack !

#define trcdiv    /
#define truncdiv  /
#define div       /
#define truediv   /
#define mod       %
#define shl       <<
#define shr       >>
#define and       &
#define or        |
#define xor       ^
