/* Copyright (c) 2018-2024 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2024 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#pragma once
#include "__stddef.dee"

#pragma push_macro(undef, "from", "ctypes", "posix", "import")
from ctypes import
	__builtin_memcpy = "memcpy",
	__builtin_mempcpy = "mempcpy",
	__builtin_memccpy = "memccpy",
	__builtin_rawmemchr = "rawmemchr",
	__builtin_memmove = "memmove",
	__builtin_memcmp = "memcmp",
	__builtin_strcoll = "strcmp",
	__builtin_strcmp = "strcmp",
	__builtin_strncmp = "strncmp",
	//__builtin_strxfrm = "strxfrm",
	__builtin_strcpy = "strcpy",
	__builtin_strncpy = "strncpy",
	__builtin_stpcpy = "stpcpy",
	__builtin_stpncpy = "stpncpy",
	__builtin_strcat = "strcat",
	__builtin_memchr = "memchr",
	__builtin_memrchr = "memrchr",
	__builtin_strchr = "strchr",
	__builtin_strchrnul = "strchrnul",
	__builtin_strcasestr = "strcasestr",
	__builtin_strcasecmp = "strcasecmp",
	__builtin_strncasecmp = "strncasecmp",
	__builtin_memmem = "memmem",
	__builtin_strcspn = "strcspn",
	__builtin_strpbrk = "strpbrk",
	__builtin_strrchr = "strrchr",
	__builtin_strspn = "strspn",
	__builtin_strstr = "strstr",
	__builtin_strtok = "strtok",
	__builtin_strlen = "strlen",
	__builtin_strnlen = "strnlen",
	__builtin_strdup = "strdup",
	__builtin_strndup = "strdup", /* strdup() is overloaded to accept 1/2 arguments! */
	__builtin_strncat = "strncat",
	__builtin_memset = "memset"
;
from posix import
	__builtin_strerror = "strerror"
;
#pragma pop_macro("from", "ctypes", "posix", "import")
