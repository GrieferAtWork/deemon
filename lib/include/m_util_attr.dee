/* Copyright (c) 2019 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

final global ENUM_ATTR_FLAG_NONE           = 0;
final global ENUM_ATTR_FLAG_PERMISSION_GET = 1;
final global ENUM_ATTR_FLAG_PERMISSION_DEL = 2;
final global ENUM_ATTR_FLAG_PERMISSION_SET = 4;

@@You really don't want to use this one any more...
@@The reworked version is soooo much better!
final function enumattr(self, callback: callable from deemon) {
	import deemon_enumattr = enumattr from deemon;
	for (local attr: deemon_enumattr(self)) {
		local flags = ENUM_ATTR_FLAG_NONE;
		if (attr.canget) flags |= ENUM_ATTR_FLAG_PERMISSION_GET;
		if (attr.candel) flags |= ENUM_ATTR_FLAG_PERMISSION_DEL;
		if (attr.canset) flags |= ENUM_ATTR_FLAG_PERMISSION_SET;
		callback(attr.decl,self,attr.name,flags,attr.attrtype);
	}
}
