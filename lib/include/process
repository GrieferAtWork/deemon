/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#pragma once
#include "__stddef.dee"

#pragma push_macro(undef, "from", "deemon", "import", "ipc", "class", "this", "super")
from deemon import process_id = "int", process_return = "int";

#pragma warning(push, "-Wno-quality")
class process: Process from ipc {
#pragma warning(pop)
	this(exe_or_cmdline_or_pid, argv?, envp?)
		: super(({
			local superArgs;
			/* It used to be that deemon would implicitly re-include the program
			 * name by inserting it into the argument list at the first position.
			 *
			 * This has since changed, such that now you have to specify the full
			 * argument list (including needing to specify the program name twice)
			 *
			 * For backwards compatibility, we do this automatically here. */
			if (envp is bound) {
				superArgs = (exe_or_cmdline_or_pid, (exe_or_cmdline_or_pid, argv...), envp);
			} else if (argv is bound) {
				superArgs = (exe_or_cmdline_or_pid, (exe_or_cmdline_or_pid, argv...));
			} else {
				superArgs = (exe_or_cmdline_or_pid,);
			}
			superArgs;
		})...)
	{}
}
#pragma pop_macro("from", "deemon", "import", "ipc", "class", "this", "super")
