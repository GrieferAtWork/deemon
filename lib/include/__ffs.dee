/* Copyright (c) 2019 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#pragma once
#include "__stddef.dee"

#define __deemon_ffs_m_8(i)\
	(((i)&1ui8)?1:((i)&(1ui8<<1))?2:((i)&(1ui8<<2))?3:((i)&(1ui8<<3))?4:\
	((i)&(1ui8<<4))?5:((i)&(1ui8<<5))?6:((i)&(1ui8<<6))?7:((i)&(1ui8<<7))?8:0)
#define __deemon_ffs_m_16(i)\
	(((i)&1ui16)?1:((i)&(1ui16<<1))?2:((i)&(1ui16<<2))?3:((i)&(1ui16<<3))?4:\
	((i)&(1ui16<<4))?5:((i)&(1ui16<<5))?6:((i)&(1ui16<<6))?7:((i)&(1ui16<<7))?8:\
	((i)&(1ui16<<8))?9:((i)&(1ui16<<9))?10:((i)&(1ui16<<10))?11:((i)&(1ui16<<11))?12:\
	((i)&(1ui16<<12))?13:((i)&(1ui16<<13))?14:((i)&(1ui16<<14))?15:((i)&(1ui16<<15))?16:0)
#define __deemon_ffs_m_32(i)\
	(((i)&1ui32)?1:((i)&(1ui32<<1))?2:((i)&(1ui32<<2))?3:((i)&(1ui32<<3))?4:\
	((i)&(1ui32<<4))?5:((i)&(1ui32<<5))?6:((i)&(1ui32<<6))?7:((i)&(1ui32<<7))?8:\
	((i)&(1ui32<<8))?9:((i)&(1ui32<<9))?10:((i)&(1ui32<<10))?11:((i)&(1ui32<<11))?12:\
	((i)&(1ui32<<12))?13:((i)&(1ui32<<13))?14:((i)&(1ui32<<14))?15:((i)&(1ui32<<15))?16:\
	((i)&(1ui32<<16))?17:((i)&(1ui32<<17))?18:((i)&(1ui32<<18))?19:((i)&(1ui32<<19))?20:\
	((i)&(1ui32<<20))?21:((i)&(1ui32<<21))?22:((i)&(1ui32<<22))?23:((i)&(1ui32<<23))?24:\
	((i)&(1ui32<<24))?25:((i)&(1ui32<<25))?26:((i)&(1ui32<<26))?27:((i)&(1ui32<<27))?28:\
	((i)&(1ui32<<28))?29:((i)&(1ui32<<29))?30:((i)&(1ui32<<30))?31:((i)&(1ui32<<31))?32:0)
#define __deemon_ffs_m_64(i)\
	(((i)&1ui64)?1:((i)&(1ui64<<1))?2:((i)&(1ui64<<2))?3:((i)&(1ui64<<3))?4:\
	((i)&(1ui64<<4))?5:((i)&(1ui64<<5))?6:((i)&(1ui64<<6))?7:((i)&(1ui64<<7))?8:\
	((i)&(1ui64<<8))?9:((i)&(1ui64<<9))?10:((i)&(1ui64<<10))?11:((i)&(1ui64<<11))?12:\
	((i)&(1ui64<<12))?13:((i)&(1ui64<<13))?14:((i)&(1ui64<<14))?15:((i)&(1ui64<<15))?16:\
	((i)&(1ui64<<16))?17:((i)&(1ui64<<17))?18:((i)&(1ui64<<18))?19:((i)&(1ui64<<19))?20:\
	((i)&(1ui64<<20))?21:((i)&(1ui64<<21))?22:((i)&(1ui64<<22))?23:((i)&(1ui64<<23))?24:\
	((i)&(1ui64<<24))?25:((i)&(1ui64<<25))?26:((i)&(1ui64<<26))?27:((i)&(1ui64<<27))?28:\
	((i)&(1ui64<<28))?29:((i)&(1ui64<<29))?30:((i)&(1ui64<<30))?31:((i)&(1ui64<<31))?32:\
	((i)&(1ui64<<32))?33:((i)&(1ui64<<33))?34:((i)&(1ui64<<34))?35:((i)&(1ui64<<35))?36:\
	((i)&(1ui64<<36))?37:((i)&(1ui64<<37))?38:((i)&(1ui64<<38))?39:((i)&(1ui64<<39))?40:\
	((i)&(1ui64<<40))?41:((i)&(1ui64<<41))?42:((i)&(1ui64<<42))?43:((i)&(1ui64<<43))?44:\
	((i)&(1ui64<<44))?45:((i)&(1ui64<<45))?46:((i)&(1ui64<<46))?47:((i)&(1ui64<<47))?48:\
	((i)&(1ui64<<48))?49:((i)&(1ui64<<49))?50:((i)&(1ui64<<50))?51:((i)&(1ui64<<51))?52:\
	((i)&(1ui64<<52))?53:((i)&(1ui64<<53))?54:((i)&(1ui64<<54))?55:((i)&(1ui64<<55))?56:\
	((i)&(1ui64<<56))?57:((i)&(1ui64<<57))?58:((i)&(1ui64<<58))?59:((i)&(1ui64<<59))?60:\
	((i)&(1ui64<<60))?61:((i)&(1ui64<<61))?62:((i)&(1ui64<<62))?63:((i)&(1ui64<<63))?64:0)
#define __deemon_ffs_f(i,n)\
({\
	local __i=(i);\
	local __r=0;\
	for (local __p=0;__p<n;++__p){\
		if (__i&(__CAT2(1ui,n)<<__p)){\
			__r = __p+1;\
			break;\
		}\
	}\
	__r;\
})

#if __has_builtin(__builtin_choose_expr) && __has_builtin(__builtin_constant_p)
#define __deemon_ffs(i,n) \
	__builtin_choose_expr(__builtin_constant_p(i), \
	                      __CAT2(__deemon_ffs_m_,n)(i), \
	                      __deemon_ffs_f(i,n))
#else
#define __deemon_ffs(i,n) __deemon_ffs_f(i,n)
#endif

#define __ffs8(i)  __deemon_ffs(__int8(i),8)
#define __ffs16(i) __deemon_ffs(__int16(i),16)
#define __ffs32(i) __deemon_ffs(__int32(i),32)
#define __ffs64(i) __deemon_ffs(__int64(i),64)
#define __ffs(i)   __deemon_ffs(int(i),__TPP_EVAL(__SIZEOF_INT__*8))
#define __ffsl(i)  __deemon_ffs(long(i),__TPP_EVAL(__SIZEOF_LONG__*8))
#define __ffsll(i) __deemon_ffs(long long(i),__TPP_EVAL(__SIZEOF_LLONG__*8))
