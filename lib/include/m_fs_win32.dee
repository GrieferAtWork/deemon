/* Copyright (c) 2019 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
import fs;
final local w32 = try import("win32") catch (...) none;

final global hardlink = fs.link;
final global modulename = w32.GetModuleFileName;
final global wmodulename = w32.GetModuleFileName;
final global _dlldirectory = w32.GetDllDirectory;
final global _wdlldirectory = w32.GetDllDirectory;
final global _systemdirectory = w32.GetSystemDirectory;
final global _wsystemdirectory = w32.GetSystemDirectory;
final global _windowsdirectory = w32.GetWindowsDirectory;
final global _wwindowsdirectory = w32.GetWindowsDirectory;
final global _systemwindowsdirectory = w32.GetSystemWindowsDirectory;
final global _wsystemwindowsdirectory = w32.GetSystemWindowsDirectory;
final global _syswow64directory = w32.GetSystemWow64Directory;
final global _wsyswow64directory = w32.GetSystemWow64Directory;
final function drives() -> w32.GetLogicalDriveStrings().rstrip("\0").split("\0");
final global wdrives = drives;




