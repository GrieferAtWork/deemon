/* Copyright (c) 2018-2022 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2022 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
import fs;
final local w32 = try import("win32") catch (...) none;
#define W32_IMPORT(name) (try w32.name catch (...) none)

final global hardlink = fs.link;
final global modulename = W32_IMPORT(GetModuleFileName);
final global wmodulename = W32_IMPORT(GetModuleFileName);
final global _dlldirectory = W32_IMPORT(GetDllDirectory);
final global _wdlldirectory = W32_IMPORT(GetDllDirectory);
final global _systemdirectory = W32_IMPORT(GetSystemDirectory);
final global _wsystemdirectory = W32_IMPORT(GetSystemDirectory);
final global _windowsdirectory = W32_IMPORT(GetWindowsDirectory);
final global _wwindowsdirectory = W32_IMPORT(GetWindowsDirectory);
final global _systemwindowsdirectory = W32_IMPORT(GetSystemWindowsDirectory);
final global _wsystemwindowsdirectory = W32_IMPORT(GetSystemWindowsDirectory);
final global _syswow64directory = W32_IMPORT(GetSystemWow64Directory);
final global _wsyswow64directory = W32_IMPORT(GetSystemWow64Directory);
final global function drives() -> W32_IMPORT(GetLogicalDriveStrings)().rstrip("\0").split("\0");
final global wdrives = drives;

