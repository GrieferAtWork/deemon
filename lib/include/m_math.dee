/* Copyright (c) 2019 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
import math;
import util;
import int, float from deemon;

final global sin = math.sin;
final global cos = math.cos;
final global tan = math.tan;
final global sincos = math.sincos;
final global asin = math.asin;
final global acos = math.acos;
final global atan = math.atan;
final global atan2 = math.atan2;
final global asincos = math.asincos;
final global sinh = math.sinh;
final global cosh = math.cosh;
final global tanh = math.tanh;
final global sincosh = math.sincosh;
final global asinh = math.asinh;
final global acosh = math.acosh;
final global atanh = math.atanh;
final global asincosh = math.asincosh;
final global exp = math.exp;
final global frexp = math.frexp;
final global log = math.log;
final global log10 = math.log10;
final global modf = math.modf;
final global exp2 = math.exp2;
final global expm1 = math.expm1;
final global ilogb = math.ilogb;
final global log1p = math.log1p;
final global log2 = math.log2;
final global logb = math.logb;
final global scalbn = math.scalbn;
final global scalbi32n = math.scalbn;
final global pow = math.pow;
final global sqrt = math.sqrt;
final global cbrt = math.cbrt;
final global hypot = math.hypot;
final global erf = math.erf;
final global tgamma = math.tgamma;
final global lgamma = math.lgamma;
final function ceilf(x) -> (float)util.ceil(x);
final function floorf(x) -> (float)util.floor(x);
final function roundf(x) -> (float)util.round(x);
final function truncf(x) -> (float)(int)x;
final global i32round = util.round;
final global i64round = util.round;
final global lround = util.round;
final global llround = util.round;
final global fmod = math.fmod;
#if 1
final function rint(x) -> (float)util.round(x);
final global i32rint = util.round;
final global i64rint = util.round;
final global lrint = util.round;
final global llrint = util.round;
final global nearbyint = util.round;
#else
final global rint = math.rint;
final function i32rint(x) -> (int)math.rint(x);
final function i64rint(x) -> (int)math.rint(x);
final function lrint(x) -> (int)math.rint(x);
final function llrint(x) -> (int)math.rint(x);
final global nearbyint = math.nearbyint;
#endif
final global remainder = math.remainder;
final global remquo = math.remquo;
final global copysign = math.copysign;
final global nextafter = math.nextafter;
final global nexttoward = math.nextafter;
final global fdim = math.fdim;
final global isfinite = math.isfinite;
final global isinf = math.isinf;
final global isnan = math.isnan;
final global isnormal = math.isnormal;
final global signbit = math.signbit;
final global isgreater = math.isgreater;
final global isgreaterequal = math.isgreaterequal;
final global isless = math.isless;
final global islessequal = math.islessequal;
final global islessgreater = math.islessgreater;
final global isunordered = math.isunordered;
final global min = util.min;
final global max = util.max;
final global abs = util.abs;
final global sqr = util.sqr;
final global ceil = util.ceil;
final global floor = util.floor;
final global round = util.round;
