/* Copyright (c) 2018-2022 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2022 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#pragma once
#include "__stddef.dee"

#pragma push_macro(undef, "final", "function", "none", "import", "ShLib", "from", "ctypes", "__stack", "local", "operator", "if", "is", "return")
final function __builtin_extern(__f, __n, __t = none) {
	import ShLib from ctypes;
	__stack local __res = ShLib(__f).operator . (__n);
	if (__t !is none)
		__res = __t(__res);
	return __res;
}
#pragma pop_macro("final", "function", "none", "import", "ShLib", "from", "ctypes", "__stack", "local", "operator", "if", "is", "return")


