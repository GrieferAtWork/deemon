/* Copyright (c) 2018 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
/* WARNING: Autogenerated file "constants.def" */
#ifdef FILE_READ_DATA
#define LIBWIN32_FILE_READ_DATA_DEF \
	 { "FILE_READ_DATA", (DeeObject *)&libwin32_FILE_READ_DATA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_READ_DATA >= 0
#if FILE_READ_DATA == 0
#define libwin32_FILE_READ_DATA DeeInt_Zero
#elif FILE_READ_DATA == 1
#define libwin32_FILE_READ_DATA DeeInt_One
#elif FILE_READ_DATA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#else
DEFINE_UINT75(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#endif
#else /*  FILE_READ_DATA >= 0 */
#if FILE_READ_DATA == -1
#define libwin32_FILE_READ_DATA DeeInt_MinusOne
#elif FILE_READ_DATA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#elif FILE_READ_DATA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#else
DEFINE_INT75(libwin32_FILE_READ_DATA,FILE_READ_DATA);
#endif
#endif /*  FILE_READ_DATA < 0 */
#else /* FILE_READ_DATA */
#define LIBWIN32_FILE_READ_DATA_DEF /* nothing */
#endif /* !FILE_READ_DATA */
#ifdef FILE_LIST_DIRECTORY
#define LIBWIN32_FILE_LIST_DIRECTORY_DEF \
	 { "FILE_LIST_DIRECTORY", (DeeObject *)&libwin32_FILE_LIST_DIRECTORY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_LIST_DIRECTORY >= 0
#if FILE_LIST_DIRECTORY == 0
#define libwin32_FILE_LIST_DIRECTORY DeeInt_Zero
#elif FILE_LIST_DIRECTORY == 1
#define libwin32_FILE_LIST_DIRECTORY DeeInt_One
#elif FILE_LIST_DIRECTORY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#else
DEFINE_UINT75(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#endif
#else /*  FILE_LIST_DIRECTORY >= 0 */
#if FILE_LIST_DIRECTORY == -1
#define libwin32_FILE_LIST_DIRECTORY DeeInt_MinusOne
#elif FILE_LIST_DIRECTORY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#elif FILE_LIST_DIRECTORY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#else
DEFINE_INT75(libwin32_FILE_LIST_DIRECTORY,FILE_LIST_DIRECTORY);
#endif
#endif /*  FILE_LIST_DIRECTORY < 0 */
#else /* FILE_LIST_DIRECTORY */
#define LIBWIN32_FILE_LIST_DIRECTORY_DEF /* nothing */
#endif /* !FILE_LIST_DIRECTORY */
#ifdef FILE_WRITE_DATA
#define LIBWIN32_FILE_WRITE_DATA_DEF \
	 { "FILE_WRITE_DATA", (DeeObject *)&libwin32_FILE_WRITE_DATA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_WRITE_DATA >= 0
#if FILE_WRITE_DATA == 0
#define libwin32_FILE_WRITE_DATA DeeInt_Zero
#elif FILE_WRITE_DATA == 1
#define libwin32_FILE_WRITE_DATA DeeInt_One
#elif FILE_WRITE_DATA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#else
DEFINE_UINT75(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#endif
#else /*  FILE_WRITE_DATA >= 0 */
#if FILE_WRITE_DATA == -1
#define libwin32_FILE_WRITE_DATA DeeInt_MinusOne
#elif FILE_WRITE_DATA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#elif FILE_WRITE_DATA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#else
DEFINE_INT75(libwin32_FILE_WRITE_DATA,FILE_WRITE_DATA);
#endif
#endif /*  FILE_WRITE_DATA < 0 */
#else /* FILE_WRITE_DATA */
#define LIBWIN32_FILE_WRITE_DATA_DEF /* nothing */
#endif /* !FILE_WRITE_DATA */
#ifdef FILE_ADD_FILE
#define LIBWIN32_FILE_ADD_FILE_DEF \
	 { "FILE_ADD_FILE", (DeeObject *)&libwin32_FILE_ADD_FILE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ADD_FILE >= 0
#if FILE_ADD_FILE == 0
#define libwin32_FILE_ADD_FILE DeeInt_Zero
#elif FILE_ADD_FILE == 1
#define libwin32_FILE_ADD_FILE DeeInt_One
#elif FILE_ADD_FILE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#else
DEFINE_UINT75(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#endif
#else /*  FILE_ADD_FILE >= 0 */
#if FILE_ADD_FILE == -1
#define libwin32_FILE_ADD_FILE DeeInt_MinusOne
#elif FILE_ADD_FILE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#elif FILE_ADD_FILE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#else
DEFINE_INT75(libwin32_FILE_ADD_FILE,FILE_ADD_FILE);
#endif
#endif /*  FILE_ADD_FILE < 0 */
#else /* FILE_ADD_FILE */
#define LIBWIN32_FILE_ADD_FILE_DEF /* nothing */
#endif /* !FILE_ADD_FILE */
#ifdef FILE_APPEND_DATA
#define LIBWIN32_FILE_APPEND_DATA_DEF \
	 { "FILE_APPEND_DATA", (DeeObject *)&libwin32_FILE_APPEND_DATA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_APPEND_DATA >= 0
#if FILE_APPEND_DATA == 0
#define libwin32_FILE_APPEND_DATA DeeInt_Zero
#elif FILE_APPEND_DATA == 1
#define libwin32_FILE_APPEND_DATA DeeInt_One
#elif FILE_APPEND_DATA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#else
DEFINE_UINT75(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#endif
#else /*  FILE_APPEND_DATA >= 0 */
#if FILE_APPEND_DATA == -1
#define libwin32_FILE_APPEND_DATA DeeInt_MinusOne
#elif FILE_APPEND_DATA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#elif FILE_APPEND_DATA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#else
DEFINE_INT75(libwin32_FILE_APPEND_DATA,FILE_APPEND_DATA);
#endif
#endif /*  FILE_APPEND_DATA < 0 */
#else /* FILE_APPEND_DATA */
#define LIBWIN32_FILE_APPEND_DATA_DEF /* nothing */
#endif /* !FILE_APPEND_DATA */
#ifdef FILE_ADD_SUBDIRECTORY
#define LIBWIN32_FILE_ADD_SUBDIRECTORY_DEF \
	 { "FILE_ADD_SUBDIRECTORY", (DeeObject *)&libwin32_FILE_ADD_SUBDIRECTORY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ADD_SUBDIRECTORY >= 0
#if FILE_ADD_SUBDIRECTORY == 0
#define libwin32_FILE_ADD_SUBDIRECTORY DeeInt_Zero
#elif FILE_ADD_SUBDIRECTORY == 1
#define libwin32_FILE_ADD_SUBDIRECTORY DeeInt_One
#elif FILE_ADD_SUBDIRECTORY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#else
DEFINE_UINT75(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#endif
#else /*  FILE_ADD_SUBDIRECTORY >= 0 */
#if FILE_ADD_SUBDIRECTORY == -1
#define libwin32_FILE_ADD_SUBDIRECTORY DeeInt_MinusOne
#elif FILE_ADD_SUBDIRECTORY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#elif FILE_ADD_SUBDIRECTORY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#else
DEFINE_INT75(libwin32_FILE_ADD_SUBDIRECTORY,FILE_ADD_SUBDIRECTORY);
#endif
#endif /*  FILE_ADD_SUBDIRECTORY < 0 */
#else /* FILE_ADD_SUBDIRECTORY */
#define LIBWIN32_FILE_ADD_SUBDIRECTORY_DEF /* nothing */
#endif /* !FILE_ADD_SUBDIRECTORY */
#ifdef FILE_CREATE_PIPE_INSTANCE
#define LIBWIN32_FILE_CREATE_PIPE_INSTANCE_DEF \
	 { "FILE_CREATE_PIPE_INSTANCE", (DeeObject *)&libwin32_FILE_CREATE_PIPE_INSTANCE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_CREATE_PIPE_INSTANCE >= 0
#if FILE_CREATE_PIPE_INSTANCE == 0
#define libwin32_FILE_CREATE_PIPE_INSTANCE DeeInt_Zero
#elif FILE_CREATE_PIPE_INSTANCE == 1
#define libwin32_FILE_CREATE_PIPE_INSTANCE DeeInt_One
#elif FILE_CREATE_PIPE_INSTANCE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#else
DEFINE_UINT75(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#endif
#else /*  FILE_CREATE_PIPE_INSTANCE >= 0 */
#if FILE_CREATE_PIPE_INSTANCE == -1
#define libwin32_FILE_CREATE_PIPE_INSTANCE DeeInt_MinusOne
#elif FILE_CREATE_PIPE_INSTANCE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#elif FILE_CREATE_PIPE_INSTANCE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#else
DEFINE_INT75(libwin32_FILE_CREATE_PIPE_INSTANCE,FILE_CREATE_PIPE_INSTANCE);
#endif
#endif /*  FILE_CREATE_PIPE_INSTANCE < 0 */
#else /* FILE_CREATE_PIPE_INSTANCE */
#define LIBWIN32_FILE_CREATE_PIPE_INSTANCE_DEF /* nothing */
#endif /* !FILE_CREATE_PIPE_INSTANCE */
#ifdef FILE_READ_EA
#define LIBWIN32_FILE_READ_EA_DEF \
	 { "FILE_READ_EA", (DeeObject *)&libwin32_FILE_READ_EA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_READ_EA >= 0
#if FILE_READ_EA == 0
#define libwin32_FILE_READ_EA DeeInt_Zero
#elif FILE_READ_EA == 1
#define libwin32_FILE_READ_EA DeeInt_One
#elif FILE_READ_EA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_READ_EA,FILE_READ_EA);
#else
DEFINE_UINT75(libwin32_FILE_READ_EA,FILE_READ_EA);
#endif
#else /*  FILE_READ_EA >= 0 */
#if FILE_READ_EA == -1
#define libwin32_FILE_READ_EA DeeInt_MinusOne
#elif FILE_READ_EA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_READ_EA,FILE_READ_EA);
#elif FILE_READ_EA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_READ_EA,FILE_READ_EA);
#else
DEFINE_INT75(libwin32_FILE_READ_EA,FILE_READ_EA);
#endif
#endif /*  FILE_READ_EA < 0 */
#else /* FILE_READ_EA */
#define LIBWIN32_FILE_READ_EA_DEF /* nothing */
#endif /* !FILE_READ_EA */
#ifdef FILE_WRITE_EA
#define LIBWIN32_FILE_WRITE_EA_DEF \
	 { "FILE_WRITE_EA", (DeeObject *)&libwin32_FILE_WRITE_EA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_WRITE_EA >= 0
#if FILE_WRITE_EA == 0
#define libwin32_FILE_WRITE_EA DeeInt_Zero
#elif FILE_WRITE_EA == 1
#define libwin32_FILE_WRITE_EA DeeInt_One
#elif FILE_WRITE_EA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#else
DEFINE_UINT75(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#endif
#else /*  FILE_WRITE_EA >= 0 */
#if FILE_WRITE_EA == -1
#define libwin32_FILE_WRITE_EA DeeInt_MinusOne
#elif FILE_WRITE_EA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#elif FILE_WRITE_EA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#else
DEFINE_INT75(libwin32_FILE_WRITE_EA,FILE_WRITE_EA);
#endif
#endif /*  FILE_WRITE_EA < 0 */
#else /* FILE_WRITE_EA */
#define LIBWIN32_FILE_WRITE_EA_DEF /* nothing */
#endif /* !FILE_WRITE_EA */
#ifdef FILE_EXECUTE
#define LIBWIN32_FILE_EXECUTE_DEF \
	 { "FILE_EXECUTE", (DeeObject *)&libwin32_FILE_EXECUTE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_EXECUTE >= 0
#if FILE_EXECUTE == 0
#define libwin32_FILE_EXECUTE DeeInt_Zero
#elif FILE_EXECUTE == 1
#define libwin32_FILE_EXECUTE DeeInt_One
#elif FILE_EXECUTE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#else
DEFINE_UINT75(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#endif
#else /*  FILE_EXECUTE >= 0 */
#if FILE_EXECUTE == -1
#define libwin32_FILE_EXECUTE DeeInt_MinusOne
#elif FILE_EXECUTE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#elif FILE_EXECUTE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#else
DEFINE_INT75(libwin32_FILE_EXECUTE,FILE_EXECUTE);
#endif
#endif /*  FILE_EXECUTE < 0 */
#else /* FILE_EXECUTE */
#define LIBWIN32_FILE_EXECUTE_DEF /* nothing */
#endif /* !FILE_EXECUTE */
#ifdef FILE_TRAVERSE
#define LIBWIN32_FILE_TRAVERSE_DEF \
	 { "FILE_TRAVERSE", (DeeObject *)&libwin32_FILE_TRAVERSE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TRAVERSE >= 0
#if FILE_TRAVERSE == 0
#define libwin32_FILE_TRAVERSE DeeInt_Zero
#elif FILE_TRAVERSE == 1
#define libwin32_FILE_TRAVERSE DeeInt_One
#elif FILE_TRAVERSE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#else
DEFINE_UINT75(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#endif
#else /*  FILE_TRAVERSE >= 0 */
#if FILE_TRAVERSE == -1
#define libwin32_FILE_TRAVERSE DeeInt_MinusOne
#elif FILE_TRAVERSE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#elif FILE_TRAVERSE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#else
DEFINE_INT75(libwin32_FILE_TRAVERSE,FILE_TRAVERSE);
#endif
#endif /*  FILE_TRAVERSE < 0 */
#else /* FILE_TRAVERSE */
#define LIBWIN32_FILE_TRAVERSE_DEF /* nothing */
#endif /* !FILE_TRAVERSE */
#ifdef FILE_DELETE_CHILD
#define LIBWIN32_FILE_DELETE_CHILD_DEF \
	 { "FILE_DELETE_CHILD", (DeeObject *)&libwin32_FILE_DELETE_CHILD, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_DELETE_CHILD >= 0
#if FILE_DELETE_CHILD == 0
#define libwin32_FILE_DELETE_CHILD DeeInt_Zero
#elif FILE_DELETE_CHILD == 1
#define libwin32_FILE_DELETE_CHILD DeeInt_One
#elif FILE_DELETE_CHILD <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#else
DEFINE_UINT75(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#endif
#else /*  FILE_DELETE_CHILD >= 0 */
#if FILE_DELETE_CHILD == -1
#define libwin32_FILE_DELETE_CHILD DeeInt_MinusOne
#elif FILE_DELETE_CHILD >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#elif FILE_DELETE_CHILD >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#else
DEFINE_INT75(libwin32_FILE_DELETE_CHILD,FILE_DELETE_CHILD);
#endif
#endif /*  FILE_DELETE_CHILD < 0 */
#else /* FILE_DELETE_CHILD */
#define LIBWIN32_FILE_DELETE_CHILD_DEF /* nothing */
#endif /* !FILE_DELETE_CHILD */
#ifdef FILE_READ_ATTRIBUTES
#define LIBWIN32_FILE_READ_ATTRIBUTES_DEF \
	 { "FILE_READ_ATTRIBUTES", (DeeObject *)&libwin32_FILE_READ_ATTRIBUTES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_READ_ATTRIBUTES >= 0
#if FILE_READ_ATTRIBUTES == 0
#define libwin32_FILE_READ_ATTRIBUTES DeeInt_Zero
#elif FILE_READ_ATTRIBUTES == 1
#define libwin32_FILE_READ_ATTRIBUTES DeeInt_One
#elif FILE_READ_ATTRIBUTES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#else
DEFINE_UINT75(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#endif
#else /*  FILE_READ_ATTRIBUTES >= 0 */
#if FILE_READ_ATTRIBUTES == -1
#define libwin32_FILE_READ_ATTRIBUTES DeeInt_MinusOne
#elif FILE_READ_ATTRIBUTES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#elif FILE_READ_ATTRIBUTES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#else
DEFINE_INT75(libwin32_FILE_READ_ATTRIBUTES,FILE_READ_ATTRIBUTES);
#endif
#endif /*  FILE_READ_ATTRIBUTES < 0 */
#else /* FILE_READ_ATTRIBUTES */
#define LIBWIN32_FILE_READ_ATTRIBUTES_DEF /* nothing */
#endif /* !FILE_READ_ATTRIBUTES */
#ifdef FILE_WRITE_ATTRIBUTES
#define LIBWIN32_FILE_WRITE_ATTRIBUTES_DEF \
	 { "FILE_WRITE_ATTRIBUTES", (DeeObject *)&libwin32_FILE_WRITE_ATTRIBUTES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_WRITE_ATTRIBUTES >= 0
#if FILE_WRITE_ATTRIBUTES == 0
#define libwin32_FILE_WRITE_ATTRIBUTES DeeInt_Zero
#elif FILE_WRITE_ATTRIBUTES == 1
#define libwin32_FILE_WRITE_ATTRIBUTES DeeInt_One
#elif FILE_WRITE_ATTRIBUTES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#else
DEFINE_UINT75(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#endif
#else /*  FILE_WRITE_ATTRIBUTES >= 0 */
#if FILE_WRITE_ATTRIBUTES == -1
#define libwin32_FILE_WRITE_ATTRIBUTES DeeInt_MinusOne
#elif FILE_WRITE_ATTRIBUTES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#elif FILE_WRITE_ATTRIBUTES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#else
DEFINE_INT75(libwin32_FILE_WRITE_ATTRIBUTES,FILE_WRITE_ATTRIBUTES);
#endif
#endif /*  FILE_WRITE_ATTRIBUTES < 0 */
#else /* FILE_WRITE_ATTRIBUTES */
#define LIBWIN32_FILE_WRITE_ATTRIBUTES_DEF /* nothing */
#endif /* !FILE_WRITE_ATTRIBUTES */
#ifdef FILE_ALL_ACCESS
#define LIBWIN32_FILE_ALL_ACCESS_DEF \
	 { "FILE_ALL_ACCESS", (DeeObject *)&libwin32_FILE_ALL_ACCESS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ALL_ACCESS >= 0
#if FILE_ALL_ACCESS == 0
#define libwin32_FILE_ALL_ACCESS DeeInt_Zero
#elif FILE_ALL_ACCESS == 1
#define libwin32_FILE_ALL_ACCESS DeeInt_One
#elif FILE_ALL_ACCESS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#else
DEFINE_UINT75(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#endif
#else /*  FILE_ALL_ACCESS >= 0 */
#if FILE_ALL_ACCESS == -1
#define libwin32_FILE_ALL_ACCESS DeeInt_MinusOne
#elif FILE_ALL_ACCESS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#elif FILE_ALL_ACCESS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#else
DEFINE_INT75(libwin32_FILE_ALL_ACCESS,FILE_ALL_ACCESS);
#endif
#endif /*  FILE_ALL_ACCESS < 0 */
#else /* FILE_ALL_ACCESS */
#define LIBWIN32_FILE_ALL_ACCESS_DEF /* nothing */
#endif /* !FILE_ALL_ACCESS */
#ifdef FILE_GENERIC_READ
#define LIBWIN32_FILE_GENERIC_READ_DEF \
	 { "FILE_GENERIC_READ", (DeeObject *)&libwin32_FILE_GENERIC_READ, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_GENERIC_READ >= 0
#if FILE_GENERIC_READ == 0
#define libwin32_FILE_GENERIC_READ DeeInt_Zero
#elif FILE_GENERIC_READ == 1
#define libwin32_FILE_GENERIC_READ DeeInt_One
#elif FILE_GENERIC_READ <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#else
DEFINE_UINT75(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#endif
#else /*  FILE_GENERIC_READ >= 0 */
#if FILE_GENERIC_READ == -1
#define libwin32_FILE_GENERIC_READ DeeInt_MinusOne
#elif FILE_GENERIC_READ >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#elif FILE_GENERIC_READ >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#else
DEFINE_INT75(libwin32_FILE_GENERIC_READ,FILE_GENERIC_READ);
#endif
#endif /*  FILE_GENERIC_READ < 0 */
#else /* FILE_GENERIC_READ */
#define LIBWIN32_FILE_GENERIC_READ_DEF /* nothing */
#endif /* !FILE_GENERIC_READ */
#ifdef FILE_GENERIC_WRITE
#define LIBWIN32_FILE_GENERIC_WRITE_DEF \
	 { "FILE_GENERIC_WRITE", (DeeObject *)&libwin32_FILE_GENERIC_WRITE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_GENERIC_WRITE >= 0
#if FILE_GENERIC_WRITE == 0
#define libwin32_FILE_GENERIC_WRITE DeeInt_Zero
#elif FILE_GENERIC_WRITE == 1
#define libwin32_FILE_GENERIC_WRITE DeeInt_One
#elif FILE_GENERIC_WRITE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#else
DEFINE_UINT75(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#endif
#else /*  FILE_GENERIC_WRITE >= 0 */
#if FILE_GENERIC_WRITE == -1
#define libwin32_FILE_GENERIC_WRITE DeeInt_MinusOne
#elif FILE_GENERIC_WRITE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#elif FILE_GENERIC_WRITE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#else
DEFINE_INT75(libwin32_FILE_GENERIC_WRITE,FILE_GENERIC_WRITE);
#endif
#endif /*  FILE_GENERIC_WRITE < 0 */
#else /* FILE_GENERIC_WRITE */
#define LIBWIN32_FILE_GENERIC_WRITE_DEF /* nothing */
#endif /* !FILE_GENERIC_WRITE */
#ifdef FILE_GENERIC_EXECUTE
#define LIBWIN32_FILE_GENERIC_EXECUTE_DEF \
	 { "FILE_GENERIC_EXECUTE", (DeeObject *)&libwin32_FILE_GENERIC_EXECUTE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_GENERIC_EXECUTE >= 0
#if FILE_GENERIC_EXECUTE == 0
#define libwin32_FILE_GENERIC_EXECUTE DeeInt_Zero
#elif FILE_GENERIC_EXECUTE == 1
#define libwin32_FILE_GENERIC_EXECUTE DeeInt_One
#elif FILE_GENERIC_EXECUTE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#else
DEFINE_UINT75(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#endif
#else /*  FILE_GENERIC_EXECUTE >= 0 */
#if FILE_GENERIC_EXECUTE == -1
#define libwin32_FILE_GENERIC_EXECUTE DeeInt_MinusOne
#elif FILE_GENERIC_EXECUTE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#elif FILE_GENERIC_EXECUTE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#else
DEFINE_INT75(libwin32_FILE_GENERIC_EXECUTE,FILE_GENERIC_EXECUTE);
#endif
#endif /*  FILE_GENERIC_EXECUTE < 0 */
#else /* FILE_GENERIC_EXECUTE */
#define LIBWIN32_FILE_GENERIC_EXECUTE_DEF /* nothing */
#endif /* !FILE_GENERIC_EXECUTE */
#ifdef FILE_SHARE_READ
#define LIBWIN32_FILE_SHARE_READ_DEF \
	 { "FILE_SHARE_READ", (DeeObject *)&libwin32_FILE_SHARE_READ, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SHARE_READ >= 0
#if FILE_SHARE_READ == 0
#define libwin32_FILE_SHARE_READ DeeInt_Zero
#elif FILE_SHARE_READ == 1
#define libwin32_FILE_SHARE_READ DeeInt_One
#elif FILE_SHARE_READ <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#else
DEFINE_UINT75(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#endif
#else /*  FILE_SHARE_READ >= 0 */
#if FILE_SHARE_READ == -1
#define libwin32_FILE_SHARE_READ DeeInt_MinusOne
#elif FILE_SHARE_READ >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#elif FILE_SHARE_READ >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#else
DEFINE_INT75(libwin32_FILE_SHARE_READ,FILE_SHARE_READ);
#endif
#endif /*  FILE_SHARE_READ < 0 */
#else /* FILE_SHARE_READ */
#define LIBWIN32_FILE_SHARE_READ_DEF /* nothing */
#endif /* !FILE_SHARE_READ */
#ifdef FILE_SHARE_WRITE
#define LIBWIN32_FILE_SHARE_WRITE_DEF \
	 { "FILE_SHARE_WRITE", (DeeObject *)&libwin32_FILE_SHARE_WRITE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SHARE_WRITE >= 0
#if FILE_SHARE_WRITE == 0
#define libwin32_FILE_SHARE_WRITE DeeInt_Zero
#elif FILE_SHARE_WRITE == 1
#define libwin32_FILE_SHARE_WRITE DeeInt_One
#elif FILE_SHARE_WRITE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#else
DEFINE_UINT75(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#endif
#else /*  FILE_SHARE_WRITE >= 0 */
#if FILE_SHARE_WRITE == -1
#define libwin32_FILE_SHARE_WRITE DeeInt_MinusOne
#elif FILE_SHARE_WRITE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#elif FILE_SHARE_WRITE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#else
DEFINE_INT75(libwin32_FILE_SHARE_WRITE,FILE_SHARE_WRITE);
#endif
#endif /*  FILE_SHARE_WRITE < 0 */
#else /* FILE_SHARE_WRITE */
#define LIBWIN32_FILE_SHARE_WRITE_DEF /* nothing */
#endif /* !FILE_SHARE_WRITE */
#ifdef FILE_SHARE_DELETE
#define LIBWIN32_FILE_SHARE_DELETE_DEF \
	 { "FILE_SHARE_DELETE", (DeeObject *)&libwin32_FILE_SHARE_DELETE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SHARE_DELETE >= 0
#if FILE_SHARE_DELETE == 0
#define libwin32_FILE_SHARE_DELETE DeeInt_Zero
#elif FILE_SHARE_DELETE == 1
#define libwin32_FILE_SHARE_DELETE DeeInt_One
#elif FILE_SHARE_DELETE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#else
DEFINE_UINT75(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#endif
#else /*  FILE_SHARE_DELETE >= 0 */
#if FILE_SHARE_DELETE == -1
#define libwin32_FILE_SHARE_DELETE DeeInt_MinusOne
#elif FILE_SHARE_DELETE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#elif FILE_SHARE_DELETE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#else
DEFINE_INT75(libwin32_FILE_SHARE_DELETE,FILE_SHARE_DELETE);
#endif
#endif /*  FILE_SHARE_DELETE < 0 */
#else /* FILE_SHARE_DELETE */
#define LIBWIN32_FILE_SHARE_DELETE_DEF /* nothing */
#endif /* !FILE_SHARE_DELETE */
#ifdef FILE_ATTRIBUTE_READONLY
#define LIBWIN32_FILE_ATTRIBUTE_READONLY_DEF \
	 { "FILE_ATTRIBUTE_READONLY", (DeeObject *)&libwin32_FILE_ATTRIBUTE_READONLY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_READONLY >= 0
#if FILE_ATTRIBUTE_READONLY == 0
#define libwin32_FILE_ATTRIBUTE_READONLY DeeInt_Zero
#elif FILE_ATTRIBUTE_READONLY == 1
#define libwin32_FILE_ATTRIBUTE_READONLY DeeInt_One
#elif FILE_ATTRIBUTE_READONLY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#endif
#else /*  FILE_ATTRIBUTE_READONLY >= 0 */
#if FILE_ATTRIBUTE_READONLY == -1
#define libwin32_FILE_ATTRIBUTE_READONLY DeeInt_MinusOne
#elif FILE_ATTRIBUTE_READONLY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#elif FILE_ATTRIBUTE_READONLY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_READONLY,FILE_ATTRIBUTE_READONLY);
#endif
#endif /*  FILE_ATTRIBUTE_READONLY < 0 */
#else /* FILE_ATTRIBUTE_READONLY */
#define LIBWIN32_FILE_ATTRIBUTE_READONLY_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_READONLY */
#ifdef FILE_ATTRIBUTE_HIDDEN
#define LIBWIN32_FILE_ATTRIBUTE_HIDDEN_DEF \
	 { "FILE_ATTRIBUTE_HIDDEN", (DeeObject *)&libwin32_FILE_ATTRIBUTE_HIDDEN, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_HIDDEN >= 0
#if FILE_ATTRIBUTE_HIDDEN == 0
#define libwin32_FILE_ATTRIBUTE_HIDDEN DeeInt_Zero
#elif FILE_ATTRIBUTE_HIDDEN == 1
#define libwin32_FILE_ATTRIBUTE_HIDDEN DeeInt_One
#elif FILE_ATTRIBUTE_HIDDEN <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#endif
#else /*  FILE_ATTRIBUTE_HIDDEN >= 0 */
#if FILE_ATTRIBUTE_HIDDEN == -1
#define libwin32_FILE_ATTRIBUTE_HIDDEN DeeInt_MinusOne
#elif FILE_ATTRIBUTE_HIDDEN >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#elif FILE_ATTRIBUTE_HIDDEN >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_HIDDEN,FILE_ATTRIBUTE_HIDDEN);
#endif
#endif /*  FILE_ATTRIBUTE_HIDDEN < 0 */
#else /* FILE_ATTRIBUTE_HIDDEN */
#define LIBWIN32_FILE_ATTRIBUTE_HIDDEN_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_HIDDEN */
#ifdef FILE_ATTRIBUTE_SYSTEM
#define LIBWIN32_FILE_ATTRIBUTE_SYSTEM_DEF \
	 { "FILE_ATTRIBUTE_SYSTEM", (DeeObject *)&libwin32_FILE_ATTRIBUTE_SYSTEM, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_SYSTEM >= 0
#if FILE_ATTRIBUTE_SYSTEM == 0
#define libwin32_FILE_ATTRIBUTE_SYSTEM DeeInt_Zero
#elif FILE_ATTRIBUTE_SYSTEM == 1
#define libwin32_FILE_ATTRIBUTE_SYSTEM DeeInt_One
#elif FILE_ATTRIBUTE_SYSTEM <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#endif
#else /*  FILE_ATTRIBUTE_SYSTEM >= 0 */
#if FILE_ATTRIBUTE_SYSTEM == -1
#define libwin32_FILE_ATTRIBUTE_SYSTEM DeeInt_MinusOne
#elif FILE_ATTRIBUTE_SYSTEM >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#elif FILE_ATTRIBUTE_SYSTEM >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_SYSTEM,FILE_ATTRIBUTE_SYSTEM);
#endif
#endif /*  FILE_ATTRIBUTE_SYSTEM < 0 */
#else /* FILE_ATTRIBUTE_SYSTEM */
#define LIBWIN32_FILE_ATTRIBUTE_SYSTEM_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_SYSTEM */
#ifdef FILE_ATTRIBUTE_DIRECTORY
#define LIBWIN32_FILE_ATTRIBUTE_DIRECTORY_DEF \
	 { "FILE_ATTRIBUTE_DIRECTORY", (DeeObject *)&libwin32_FILE_ATTRIBUTE_DIRECTORY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_DIRECTORY >= 0
#if FILE_ATTRIBUTE_DIRECTORY == 0
#define libwin32_FILE_ATTRIBUTE_DIRECTORY DeeInt_Zero
#elif FILE_ATTRIBUTE_DIRECTORY == 1
#define libwin32_FILE_ATTRIBUTE_DIRECTORY DeeInt_One
#elif FILE_ATTRIBUTE_DIRECTORY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#endif
#else /*  FILE_ATTRIBUTE_DIRECTORY >= 0 */
#if FILE_ATTRIBUTE_DIRECTORY == -1
#define libwin32_FILE_ATTRIBUTE_DIRECTORY DeeInt_MinusOne
#elif FILE_ATTRIBUTE_DIRECTORY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#elif FILE_ATTRIBUTE_DIRECTORY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_DIRECTORY,FILE_ATTRIBUTE_DIRECTORY);
#endif
#endif /*  FILE_ATTRIBUTE_DIRECTORY < 0 */
#else /* FILE_ATTRIBUTE_DIRECTORY */
#define LIBWIN32_FILE_ATTRIBUTE_DIRECTORY_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_DIRECTORY */
#ifdef FILE_ATTRIBUTE_ARCHIVE
#define LIBWIN32_FILE_ATTRIBUTE_ARCHIVE_DEF \
	 { "FILE_ATTRIBUTE_ARCHIVE", (DeeObject *)&libwin32_FILE_ATTRIBUTE_ARCHIVE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_ARCHIVE >= 0
#if FILE_ATTRIBUTE_ARCHIVE == 0
#define libwin32_FILE_ATTRIBUTE_ARCHIVE DeeInt_Zero
#elif FILE_ATTRIBUTE_ARCHIVE == 1
#define libwin32_FILE_ATTRIBUTE_ARCHIVE DeeInt_One
#elif FILE_ATTRIBUTE_ARCHIVE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#endif
#else /*  FILE_ATTRIBUTE_ARCHIVE >= 0 */
#if FILE_ATTRIBUTE_ARCHIVE == -1
#define libwin32_FILE_ATTRIBUTE_ARCHIVE DeeInt_MinusOne
#elif FILE_ATTRIBUTE_ARCHIVE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#elif FILE_ATTRIBUTE_ARCHIVE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_ARCHIVE,FILE_ATTRIBUTE_ARCHIVE);
#endif
#endif /*  FILE_ATTRIBUTE_ARCHIVE < 0 */
#else /* FILE_ATTRIBUTE_ARCHIVE */
#define LIBWIN32_FILE_ATTRIBUTE_ARCHIVE_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_ARCHIVE */
#ifdef FILE_ATTRIBUTE_DEVICE
#define LIBWIN32_FILE_ATTRIBUTE_DEVICE_DEF \
	 { "FILE_ATTRIBUTE_DEVICE", (DeeObject *)&libwin32_FILE_ATTRIBUTE_DEVICE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_DEVICE >= 0
#if FILE_ATTRIBUTE_DEVICE == 0
#define libwin32_FILE_ATTRIBUTE_DEVICE DeeInt_Zero
#elif FILE_ATTRIBUTE_DEVICE == 1
#define libwin32_FILE_ATTRIBUTE_DEVICE DeeInt_One
#elif FILE_ATTRIBUTE_DEVICE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#endif
#else /*  FILE_ATTRIBUTE_DEVICE >= 0 */
#if FILE_ATTRIBUTE_DEVICE == -1
#define libwin32_FILE_ATTRIBUTE_DEVICE DeeInt_MinusOne
#elif FILE_ATTRIBUTE_DEVICE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#elif FILE_ATTRIBUTE_DEVICE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_DEVICE,FILE_ATTRIBUTE_DEVICE);
#endif
#endif /*  FILE_ATTRIBUTE_DEVICE < 0 */
#else /* FILE_ATTRIBUTE_DEVICE */
#define LIBWIN32_FILE_ATTRIBUTE_DEVICE_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_DEVICE */
#ifdef FILE_ATTRIBUTE_NORMAL
#define LIBWIN32_FILE_ATTRIBUTE_NORMAL_DEF \
	 { "FILE_ATTRIBUTE_NORMAL", (DeeObject *)&libwin32_FILE_ATTRIBUTE_NORMAL, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_NORMAL >= 0
#if FILE_ATTRIBUTE_NORMAL == 0
#define libwin32_FILE_ATTRIBUTE_NORMAL DeeInt_Zero
#elif FILE_ATTRIBUTE_NORMAL == 1
#define libwin32_FILE_ATTRIBUTE_NORMAL DeeInt_One
#elif FILE_ATTRIBUTE_NORMAL <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#endif
#else /*  FILE_ATTRIBUTE_NORMAL >= 0 */
#if FILE_ATTRIBUTE_NORMAL == -1
#define libwin32_FILE_ATTRIBUTE_NORMAL DeeInt_MinusOne
#elif FILE_ATTRIBUTE_NORMAL >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#elif FILE_ATTRIBUTE_NORMAL >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_NORMAL,FILE_ATTRIBUTE_NORMAL);
#endif
#endif /*  FILE_ATTRIBUTE_NORMAL < 0 */
#else /* FILE_ATTRIBUTE_NORMAL */
#define LIBWIN32_FILE_ATTRIBUTE_NORMAL_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_NORMAL */
#ifdef FILE_ATTRIBUTE_TEMPORARY
#define LIBWIN32_FILE_ATTRIBUTE_TEMPORARY_DEF \
	 { "FILE_ATTRIBUTE_TEMPORARY", (DeeObject *)&libwin32_FILE_ATTRIBUTE_TEMPORARY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_TEMPORARY >= 0
#if FILE_ATTRIBUTE_TEMPORARY == 0
#define libwin32_FILE_ATTRIBUTE_TEMPORARY DeeInt_Zero
#elif FILE_ATTRIBUTE_TEMPORARY == 1
#define libwin32_FILE_ATTRIBUTE_TEMPORARY DeeInt_One
#elif FILE_ATTRIBUTE_TEMPORARY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#endif
#else /*  FILE_ATTRIBUTE_TEMPORARY >= 0 */
#if FILE_ATTRIBUTE_TEMPORARY == -1
#define libwin32_FILE_ATTRIBUTE_TEMPORARY DeeInt_MinusOne
#elif FILE_ATTRIBUTE_TEMPORARY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#elif FILE_ATTRIBUTE_TEMPORARY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_TEMPORARY,FILE_ATTRIBUTE_TEMPORARY);
#endif
#endif /*  FILE_ATTRIBUTE_TEMPORARY < 0 */
#else /* FILE_ATTRIBUTE_TEMPORARY */
#define LIBWIN32_FILE_ATTRIBUTE_TEMPORARY_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_TEMPORARY */
#ifdef FILE_ATTRIBUTE_SPARSE_FILE
#define LIBWIN32_FILE_ATTRIBUTE_SPARSE_FILE_DEF \
	 { "FILE_ATTRIBUTE_SPARSE_FILE", (DeeObject *)&libwin32_FILE_ATTRIBUTE_SPARSE_FILE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_SPARSE_FILE >= 0
#if FILE_ATTRIBUTE_SPARSE_FILE == 0
#define libwin32_FILE_ATTRIBUTE_SPARSE_FILE DeeInt_Zero
#elif FILE_ATTRIBUTE_SPARSE_FILE == 1
#define libwin32_FILE_ATTRIBUTE_SPARSE_FILE DeeInt_One
#elif FILE_ATTRIBUTE_SPARSE_FILE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#endif
#else /*  FILE_ATTRIBUTE_SPARSE_FILE >= 0 */
#if FILE_ATTRIBUTE_SPARSE_FILE == -1
#define libwin32_FILE_ATTRIBUTE_SPARSE_FILE DeeInt_MinusOne
#elif FILE_ATTRIBUTE_SPARSE_FILE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#elif FILE_ATTRIBUTE_SPARSE_FILE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_SPARSE_FILE,FILE_ATTRIBUTE_SPARSE_FILE);
#endif
#endif /*  FILE_ATTRIBUTE_SPARSE_FILE < 0 */
#else /* FILE_ATTRIBUTE_SPARSE_FILE */
#define LIBWIN32_FILE_ATTRIBUTE_SPARSE_FILE_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_SPARSE_FILE */
#ifdef FILE_ATTRIBUTE_REPARSE_POINT
#define LIBWIN32_FILE_ATTRIBUTE_REPARSE_POINT_DEF \
	 { "FILE_ATTRIBUTE_REPARSE_POINT", (DeeObject *)&libwin32_FILE_ATTRIBUTE_REPARSE_POINT, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_REPARSE_POINT >= 0
#if FILE_ATTRIBUTE_REPARSE_POINT == 0
#define libwin32_FILE_ATTRIBUTE_REPARSE_POINT DeeInt_Zero
#elif FILE_ATTRIBUTE_REPARSE_POINT == 1
#define libwin32_FILE_ATTRIBUTE_REPARSE_POINT DeeInt_One
#elif FILE_ATTRIBUTE_REPARSE_POINT <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#endif
#else /*  FILE_ATTRIBUTE_REPARSE_POINT >= 0 */
#if FILE_ATTRIBUTE_REPARSE_POINT == -1
#define libwin32_FILE_ATTRIBUTE_REPARSE_POINT DeeInt_MinusOne
#elif FILE_ATTRIBUTE_REPARSE_POINT >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#elif FILE_ATTRIBUTE_REPARSE_POINT >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_REPARSE_POINT,FILE_ATTRIBUTE_REPARSE_POINT);
#endif
#endif /*  FILE_ATTRIBUTE_REPARSE_POINT < 0 */
#else /* FILE_ATTRIBUTE_REPARSE_POINT */
#define LIBWIN32_FILE_ATTRIBUTE_REPARSE_POINT_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_REPARSE_POINT */
#ifdef FILE_ATTRIBUTE_COMPRESSED
#define LIBWIN32_FILE_ATTRIBUTE_COMPRESSED_DEF \
	 { "FILE_ATTRIBUTE_COMPRESSED", (DeeObject *)&libwin32_FILE_ATTRIBUTE_COMPRESSED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_COMPRESSED >= 0
#if FILE_ATTRIBUTE_COMPRESSED == 0
#define libwin32_FILE_ATTRIBUTE_COMPRESSED DeeInt_Zero
#elif FILE_ATTRIBUTE_COMPRESSED == 1
#define libwin32_FILE_ATTRIBUTE_COMPRESSED DeeInt_One
#elif FILE_ATTRIBUTE_COMPRESSED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#endif
#else /*  FILE_ATTRIBUTE_COMPRESSED >= 0 */
#if FILE_ATTRIBUTE_COMPRESSED == -1
#define libwin32_FILE_ATTRIBUTE_COMPRESSED DeeInt_MinusOne
#elif FILE_ATTRIBUTE_COMPRESSED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#elif FILE_ATTRIBUTE_COMPRESSED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_COMPRESSED,FILE_ATTRIBUTE_COMPRESSED);
#endif
#endif /*  FILE_ATTRIBUTE_COMPRESSED < 0 */
#else /* FILE_ATTRIBUTE_COMPRESSED */
#define LIBWIN32_FILE_ATTRIBUTE_COMPRESSED_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_COMPRESSED */
#ifdef FILE_ATTRIBUTE_OFFLINE
#define LIBWIN32_FILE_ATTRIBUTE_OFFLINE_DEF \
	 { "FILE_ATTRIBUTE_OFFLINE", (DeeObject *)&libwin32_FILE_ATTRIBUTE_OFFLINE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_OFFLINE >= 0
#if FILE_ATTRIBUTE_OFFLINE == 0
#define libwin32_FILE_ATTRIBUTE_OFFLINE DeeInt_Zero
#elif FILE_ATTRIBUTE_OFFLINE == 1
#define libwin32_FILE_ATTRIBUTE_OFFLINE DeeInt_One
#elif FILE_ATTRIBUTE_OFFLINE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#endif
#else /*  FILE_ATTRIBUTE_OFFLINE >= 0 */
#if FILE_ATTRIBUTE_OFFLINE == -1
#define libwin32_FILE_ATTRIBUTE_OFFLINE DeeInt_MinusOne
#elif FILE_ATTRIBUTE_OFFLINE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#elif FILE_ATTRIBUTE_OFFLINE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_OFFLINE,FILE_ATTRIBUTE_OFFLINE);
#endif
#endif /*  FILE_ATTRIBUTE_OFFLINE < 0 */
#else /* FILE_ATTRIBUTE_OFFLINE */
#define LIBWIN32_FILE_ATTRIBUTE_OFFLINE_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_OFFLINE */
#ifdef FILE_ATTRIBUTE_NOT_CONTENT_INDEXED
#define LIBWIN32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED_DEF \
	 { "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED", (DeeObject *)&libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= 0
#if FILE_ATTRIBUTE_NOT_CONTENT_INDEXED == 0
#define libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED DeeInt_Zero
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED == 1
#define libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED DeeInt_One
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#endif
#else /*  FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= 0 */
#if FILE_ATTRIBUTE_NOT_CONTENT_INDEXED == -1
#define libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED DeeInt_MinusOne
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#elif FILE_ATTRIBUTE_NOT_CONTENT_INDEXED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED);
#endif
#endif /*  FILE_ATTRIBUTE_NOT_CONTENT_INDEXED < 0 */
#else /* FILE_ATTRIBUTE_NOT_CONTENT_INDEXED */
#define LIBWIN32_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_NOT_CONTENT_INDEXED */
#ifdef FILE_ATTRIBUTE_ENCRYPTED
#define LIBWIN32_FILE_ATTRIBUTE_ENCRYPTED_DEF \
	 { "FILE_ATTRIBUTE_ENCRYPTED", (DeeObject *)&libwin32_FILE_ATTRIBUTE_ENCRYPTED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_ENCRYPTED >= 0
#if FILE_ATTRIBUTE_ENCRYPTED == 0
#define libwin32_FILE_ATTRIBUTE_ENCRYPTED DeeInt_Zero
#elif FILE_ATTRIBUTE_ENCRYPTED == 1
#define libwin32_FILE_ATTRIBUTE_ENCRYPTED DeeInt_One
#elif FILE_ATTRIBUTE_ENCRYPTED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#endif
#else /*  FILE_ATTRIBUTE_ENCRYPTED >= 0 */
#if FILE_ATTRIBUTE_ENCRYPTED == -1
#define libwin32_FILE_ATTRIBUTE_ENCRYPTED DeeInt_MinusOne
#elif FILE_ATTRIBUTE_ENCRYPTED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#elif FILE_ATTRIBUTE_ENCRYPTED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_ENCRYPTED,FILE_ATTRIBUTE_ENCRYPTED);
#endif
#endif /*  FILE_ATTRIBUTE_ENCRYPTED < 0 */
#else /* FILE_ATTRIBUTE_ENCRYPTED */
#define LIBWIN32_FILE_ATTRIBUTE_ENCRYPTED_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_ENCRYPTED */
#ifdef FILE_ATTRIBUTE_INTEGRITY_STREAM
#define LIBWIN32_FILE_ATTRIBUTE_INTEGRITY_STREAM_DEF \
	 { "FILE_ATTRIBUTE_INTEGRITY_STREAM", (DeeObject *)&libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_INTEGRITY_STREAM >= 0
#if FILE_ATTRIBUTE_INTEGRITY_STREAM == 0
#define libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM DeeInt_Zero
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM == 1
#define libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM DeeInt_One
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#endif
#else /*  FILE_ATTRIBUTE_INTEGRITY_STREAM >= 0 */
#if FILE_ATTRIBUTE_INTEGRITY_STREAM == -1
#define libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM DeeInt_MinusOne
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#elif FILE_ATTRIBUTE_INTEGRITY_STREAM >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_INTEGRITY_STREAM,FILE_ATTRIBUTE_INTEGRITY_STREAM);
#endif
#endif /*  FILE_ATTRIBUTE_INTEGRITY_STREAM < 0 */
#else /* FILE_ATTRIBUTE_INTEGRITY_STREAM */
#define LIBWIN32_FILE_ATTRIBUTE_INTEGRITY_STREAM_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_INTEGRITY_STREAM */
#ifdef FILE_ATTRIBUTE_VIRTUAL
#define LIBWIN32_FILE_ATTRIBUTE_VIRTUAL_DEF \
	 { "FILE_ATTRIBUTE_VIRTUAL", (DeeObject *)&libwin32_FILE_ATTRIBUTE_VIRTUAL, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_VIRTUAL >= 0
#if FILE_ATTRIBUTE_VIRTUAL == 0
#define libwin32_FILE_ATTRIBUTE_VIRTUAL DeeInt_Zero
#elif FILE_ATTRIBUTE_VIRTUAL == 1
#define libwin32_FILE_ATTRIBUTE_VIRTUAL DeeInt_One
#elif FILE_ATTRIBUTE_VIRTUAL <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#endif
#else /*  FILE_ATTRIBUTE_VIRTUAL >= 0 */
#if FILE_ATTRIBUTE_VIRTUAL == -1
#define libwin32_FILE_ATTRIBUTE_VIRTUAL DeeInt_MinusOne
#elif FILE_ATTRIBUTE_VIRTUAL >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#elif FILE_ATTRIBUTE_VIRTUAL >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_VIRTUAL,FILE_ATTRIBUTE_VIRTUAL);
#endif
#endif /*  FILE_ATTRIBUTE_VIRTUAL < 0 */
#else /* FILE_ATTRIBUTE_VIRTUAL */
#define LIBWIN32_FILE_ATTRIBUTE_VIRTUAL_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_VIRTUAL */
#ifdef FILE_ATTRIBUTE_NO_SCRUB_DATA
#define LIBWIN32_FILE_ATTRIBUTE_NO_SCRUB_DATA_DEF \
	 { "FILE_ATTRIBUTE_NO_SCRUB_DATA", (DeeObject *)&libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_NO_SCRUB_DATA >= 0
#if FILE_ATTRIBUTE_NO_SCRUB_DATA == 0
#define libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA DeeInt_Zero
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA == 1
#define libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA DeeInt_One
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#endif
#else /*  FILE_ATTRIBUTE_NO_SCRUB_DATA >= 0 */
#if FILE_ATTRIBUTE_NO_SCRUB_DATA == -1
#define libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA DeeInt_MinusOne
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#elif FILE_ATTRIBUTE_NO_SCRUB_DATA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_NO_SCRUB_DATA,FILE_ATTRIBUTE_NO_SCRUB_DATA);
#endif
#endif /*  FILE_ATTRIBUTE_NO_SCRUB_DATA < 0 */
#else /* FILE_ATTRIBUTE_NO_SCRUB_DATA */
#define LIBWIN32_FILE_ATTRIBUTE_NO_SCRUB_DATA_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_NO_SCRUB_DATA */
#ifdef FILE_ATTRIBUTE_EA
#define LIBWIN32_FILE_ATTRIBUTE_EA_DEF \
	 { "FILE_ATTRIBUTE_EA", (DeeObject *)&libwin32_FILE_ATTRIBUTE_EA, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ATTRIBUTE_EA >= 0
#if FILE_ATTRIBUTE_EA == 0
#define libwin32_FILE_ATTRIBUTE_EA DeeInt_Zero
#elif FILE_ATTRIBUTE_EA == 1
#define libwin32_FILE_ATTRIBUTE_EA DeeInt_One
#elif FILE_ATTRIBUTE_EA <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#else
DEFINE_UINT75(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#endif
#else /*  FILE_ATTRIBUTE_EA >= 0 */
#if FILE_ATTRIBUTE_EA == -1
#define libwin32_FILE_ATTRIBUTE_EA DeeInt_MinusOne
#elif FILE_ATTRIBUTE_EA >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#elif FILE_ATTRIBUTE_EA >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#else
DEFINE_INT75(libwin32_FILE_ATTRIBUTE_EA,FILE_ATTRIBUTE_EA);
#endif
#endif /*  FILE_ATTRIBUTE_EA < 0 */
#else /* FILE_ATTRIBUTE_EA */
#define LIBWIN32_FILE_ATTRIBUTE_EA_DEF /* nothing */
#endif /* !FILE_ATTRIBUTE_EA */
#ifdef FILE_NOTIFY_CHANGE_FILE_NAME
#define LIBWIN32_FILE_NOTIFY_CHANGE_FILE_NAME_DEF \
	 { "FILE_NOTIFY_CHANGE_FILE_NAME", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_FILE_NAME, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_FILE_NAME >= 0
#if FILE_NOTIFY_CHANGE_FILE_NAME == 0
#define libwin32_FILE_NOTIFY_CHANGE_FILE_NAME DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_FILE_NAME == 1
#define libwin32_FILE_NOTIFY_CHANGE_FILE_NAME DeeInt_One
#elif FILE_NOTIFY_CHANGE_FILE_NAME <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#endif
#else /*  FILE_NOTIFY_CHANGE_FILE_NAME >= 0 */
#if FILE_NOTIFY_CHANGE_FILE_NAME == -1
#define libwin32_FILE_NOTIFY_CHANGE_FILE_NAME DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_FILE_NAME >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#elif FILE_NOTIFY_CHANGE_FILE_NAME >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_FILE_NAME,FILE_NOTIFY_CHANGE_FILE_NAME);
#endif
#endif /*  FILE_NOTIFY_CHANGE_FILE_NAME < 0 */
#else /* FILE_NOTIFY_CHANGE_FILE_NAME */
#define LIBWIN32_FILE_NOTIFY_CHANGE_FILE_NAME_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_FILE_NAME */
#ifdef FILE_NOTIFY_CHANGE_DIR_NAME
#define LIBWIN32_FILE_NOTIFY_CHANGE_DIR_NAME_DEF \
	 { "FILE_NOTIFY_CHANGE_DIR_NAME", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_DIR_NAME, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_DIR_NAME >= 0
#if FILE_NOTIFY_CHANGE_DIR_NAME == 0
#define libwin32_FILE_NOTIFY_CHANGE_DIR_NAME DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_DIR_NAME == 1
#define libwin32_FILE_NOTIFY_CHANGE_DIR_NAME DeeInt_One
#elif FILE_NOTIFY_CHANGE_DIR_NAME <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#endif
#else /*  FILE_NOTIFY_CHANGE_DIR_NAME >= 0 */
#if FILE_NOTIFY_CHANGE_DIR_NAME == -1
#define libwin32_FILE_NOTIFY_CHANGE_DIR_NAME DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_DIR_NAME >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#elif FILE_NOTIFY_CHANGE_DIR_NAME >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_DIR_NAME,FILE_NOTIFY_CHANGE_DIR_NAME);
#endif
#endif /*  FILE_NOTIFY_CHANGE_DIR_NAME < 0 */
#else /* FILE_NOTIFY_CHANGE_DIR_NAME */
#define LIBWIN32_FILE_NOTIFY_CHANGE_DIR_NAME_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_DIR_NAME */
#ifdef FILE_NOTIFY_CHANGE_ATTRIBUTES
#define LIBWIN32_FILE_NOTIFY_CHANGE_ATTRIBUTES_DEF \
	 { "FILE_NOTIFY_CHANGE_ATTRIBUTES", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_ATTRIBUTES >= 0
#if FILE_NOTIFY_CHANGE_ATTRIBUTES == 0
#define libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES == 1
#define libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES DeeInt_One
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#endif
#else /*  FILE_NOTIFY_CHANGE_ATTRIBUTES >= 0 */
#if FILE_NOTIFY_CHANGE_ATTRIBUTES == -1
#define libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#elif FILE_NOTIFY_CHANGE_ATTRIBUTES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_ATTRIBUTES,FILE_NOTIFY_CHANGE_ATTRIBUTES);
#endif
#endif /*  FILE_NOTIFY_CHANGE_ATTRIBUTES < 0 */
#else /* FILE_NOTIFY_CHANGE_ATTRIBUTES */
#define LIBWIN32_FILE_NOTIFY_CHANGE_ATTRIBUTES_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_ATTRIBUTES */
#ifdef FILE_NOTIFY_CHANGE_SIZE
#define LIBWIN32_FILE_NOTIFY_CHANGE_SIZE_DEF \
	 { "FILE_NOTIFY_CHANGE_SIZE", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_SIZE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_SIZE >= 0
#if FILE_NOTIFY_CHANGE_SIZE == 0
#define libwin32_FILE_NOTIFY_CHANGE_SIZE DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_SIZE == 1
#define libwin32_FILE_NOTIFY_CHANGE_SIZE DeeInt_One
#elif FILE_NOTIFY_CHANGE_SIZE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#endif
#else /*  FILE_NOTIFY_CHANGE_SIZE >= 0 */
#if FILE_NOTIFY_CHANGE_SIZE == -1
#define libwin32_FILE_NOTIFY_CHANGE_SIZE DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_SIZE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#elif FILE_NOTIFY_CHANGE_SIZE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_SIZE,FILE_NOTIFY_CHANGE_SIZE);
#endif
#endif /*  FILE_NOTIFY_CHANGE_SIZE < 0 */
#else /* FILE_NOTIFY_CHANGE_SIZE */
#define LIBWIN32_FILE_NOTIFY_CHANGE_SIZE_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_SIZE */
#ifdef FILE_NOTIFY_CHANGE_LAST_WRITE
#define LIBWIN32_FILE_NOTIFY_CHANGE_LAST_WRITE_DEF \
	 { "FILE_NOTIFY_CHANGE_LAST_WRITE", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_LAST_WRITE >= 0
#if FILE_NOTIFY_CHANGE_LAST_WRITE == 0
#define libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_LAST_WRITE == 1
#define libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE DeeInt_One
#elif FILE_NOTIFY_CHANGE_LAST_WRITE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#endif
#else /*  FILE_NOTIFY_CHANGE_LAST_WRITE >= 0 */
#if FILE_NOTIFY_CHANGE_LAST_WRITE == -1
#define libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_LAST_WRITE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#elif FILE_NOTIFY_CHANGE_LAST_WRITE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_LAST_WRITE,FILE_NOTIFY_CHANGE_LAST_WRITE);
#endif
#endif /*  FILE_NOTIFY_CHANGE_LAST_WRITE < 0 */
#else /* FILE_NOTIFY_CHANGE_LAST_WRITE */
#define LIBWIN32_FILE_NOTIFY_CHANGE_LAST_WRITE_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_LAST_WRITE */
#ifdef FILE_NOTIFY_CHANGE_LAST_ACCESS
#define LIBWIN32_FILE_NOTIFY_CHANGE_LAST_ACCESS_DEF \
	 { "FILE_NOTIFY_CHANGE_LAST_ACCESS", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_LAST_ACCESS >= 0
#if FILE_NOTIFY_CHANGE_LAST_ACCESS == 0
#define libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS == 1
#define libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS DeeInt_One
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#endif
#else /*  FILE_NOTIFY_CHANGE_LAST_ACCESS >= 0 */
#if FILE_NOTIFY_CHANGE_LAST_ACCESS == -1
#define libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#elif FILE_NOTIFY_CHANGE_LAST_ACCESS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_LAST_ACCESS,FILE_NOTIFY_CHANGE_LAST_ACCESS);
#endif
#endif /*  FILE_NOTIFY_CHANGE_LAST_ACCESS < 0 */
#else /* FILE_NOTIFY_CHANGE_LAST_ACCESS */
#define LIBWIN32_FILE_NOTIFY_CHANGE_LAST_ACCESS_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_LAST_ACCESS */
#ifdef FILE_NOTIFY_CHANGE_CREATION
#define LIBWIN32_FILE_NOTIFY_CHANGE_CREATION_DEF \
	 { "FILE_NOTIFY_CHANGE_CREATION", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_CREATION, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_CREATION >= 0
#if FILE_NOTIFY_CHANGE_CREATION == 0
#define libwin32_FILE_NOTIFY_CHANGE_CREATION DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_CREATION == 1
#define libwin32_FILE_NOTIFY_CHANGE_CREATION DeeInt_One
#elif FILE_NOTIFY_CHANGE_CREATION <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#endif
#else /*  FILE_NOTIFY_CHANGE_CREATION >= 0 */
#if FILE_NOTIFY_CHANGE_CREATION == -1
#define libwin32_FILE_NOTIFY_CHANGE_CREATION DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_CREATION >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#elif FILE_NOTIFY_CHANGE_CREATION >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_CREATION,FILE_NOTIFY_CHANGE_CREATION);
#endif
#endif /*  FILE_NOTIFY_CHANGE_CREATION < 0 */
#else /* FILE_NOTIFY_CHANGE_CREATION */
#define LIBWIN32_FILE_NOTIFY_CHANGE_CREATION_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_CREATION */
#ifdef FILE_NOTIFY_CHANGE_SECURITY
#define LIBWIN32_FILE_NOTIFY_CHANGE_SECURITY_DEF \
	 { "FILE_NOTIFY_CHANGE_SECURITY", (DeeObject *)&libwin32_FILE_NOTIFY_CHANGE_SECURITY, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NOTIFY_CHANGE_SECURITY >= 0
#if FILE_NOTIFY_CHANGE_SECURITY == 0
#define libwin32_FILE_NOTIFY_CHANGE_SECURITY DeeInt_Zero
#elif FILE_NOTIFY_CHANGE_SECURITY == 1
#define libwin32_FILE_NOTIFY_CHANGE_SECURITY DeeInt_One
#elif FILE_NOTIFY_CHANGE_SECURITY <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#else
DEFINE_UINT75(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#endif
#else /*  FILE_NOTIFY_CHANGE_SECURITY >= 0 */
#if FILE_NOTIFY_CHANGE_SECURITY == -1
#define libwin32_FILE_NOTIFY_CHANGE_SECURITY DeeInt_MinusOne
#elif FILE_NOTIFY_CHANGE_SECURITY >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#elif FILE_NOTIFY_CHANGE_SECURITY >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#else
DEFINE_INT75(libwin32_FILE_NOTIFY_CHANGE_SECURITY,FILE_NOTIFY_CHANGE_SECURITY);
#endif
#endif /*  FILE_NOTIFY_CHANGE_SECURITY < 0 */
#else /* FILE_NOTIFY_CHANGE_SECURITY */
#define LIBWIN32_FILE_NOTIFY_CHANGE_SECURITY_DEF /* nothing */
#endif /* !FILE_NOTIFY_CHANGE_SECURITY */
#ifdef FILE_ACTION_ADDED
#define LIBWIN32_FILE_ACTION_ADDED_DEF \
	 { "FILE_ACTION_ADDED", (DeeObject *)&libwin32_FILE_ACTION_ADDED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ACTION_ADDED >= 0
#if FILE_ACTION_ADDED == 0
#define libwin32_FILE_ACTION_ADDED DeeInt_Zero
#elif FILE_ACTION_ADDED == 1
#define libwin32_FILE_ACTION_ADDED DeeInt_One
#elif FILE_ACTION_ADDED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#else
DEFINE_UINT75(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#endif
#else /*  FILE_ACTION_ADDED >= 0 */
#if FILE_ACTION_ADDED == -1
#define libwin32_FILE_ACTION_ADDED DeeInt_MinusOne
#elif FILE_ACTION_ADDED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#elif FILE_ACTION_ADDED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#else
DEFINE_INT75(libwin32_FILE_ACTION_ADDED,FILE_ACTION_ADDED);
#endif
#endif /*  FILE_ACTION_ADDED < 0 */
#else /* FILE_ACTION_ADDED */
#define LIBWIN32_FILE_ACTION_ADDED_DEF /* nothing */
#endif /* !FILE_ACTION_ADDED */
#ifdef FILE_ACTION_REMOVED
#define LIBWIN32_FILE_ACTION_REMOVED_DEF \
	 { "FILE_ACTION_REMOVED", (DeeObject *)&libwin32_FILE_ACTION_REMOVED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ACTION_REMOVED >= 0
#if FILE_ACTION_REMOVED == 0
#define libwin32_FILE_ACTION_REMOVED DeeInt_Zero
#elif FILE_ACTION_REMOVED == 1
#define libwin32_FILE_ACTION_REMOVED DeeInt_One
#elif FILE_ACTION_REMOVED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#else
DEFINE_UINT75(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#endif
#else /*  FILE_ACTION_REMOVED >= 0 */
#if FILE_ACTION_REMOVED == -1
#define libwin32_FILE_ACTION_REMOVED DeeInt_MinusOne
#elif FILE_ACTION_REMOVED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#elif FILE_ACTION_REMOVED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#else
DEFINE_INT75(libwin32_FILE_ACTION_REMOVED,FILE_ACTION_REMOVED);
#endif
#endif /*  FILE_ACTION_REMOVED < 0 */
#else /* FILE_ACTION_REMOVED */
#define LIBWIN32_FILE_ACTION_REMOVED_DEF /* nothing */
#endif /* !FILE_ACTION_REMOVED */
#ifdef FILE_ACTION_MODIFIED
#define LIBWIN32_FILE_ACTION_MODIFIED_DEF \
	 { "FILE_ACTION_MODIFIED", (DeeObject *)&libwin32_FILE_ACTION_MODIFIED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ACTION_MODIFIED >= 0
#if FILE_ACTION_MODIFIED == 0
#define libwin32_FILE_ACTION_MODIFIED DeeInt_Zero
#elif FILE_ACTION_MODIFIED == 1
#define libwin32_FILE_ACTION_MODIFIED DeeInt_One
#elif FILE_ACTION_MODIFIED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#else
DEFINE_UINT75(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#endif
#else /*  FILE_ACTION_MODIFIED >= 0 */
#if FILE_ACTION_MODIFIED == -1
#define libwin32_FILE_ACTION_MODIFIED DeeInt_MinusOne
#elif FILE_ACTION_MODIFIED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#elif FILE_ACTION_MODIFIED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#else
DEFINE_INT75(libwin32_FILE_ACTION_MODIFIED,FILE_ACTION_MODIFIED);
#endif
#endif /*  FILE_ACTION_MODIFIED < 0 */
#else /* FILE_ACTION_MODIFIED */
#define LIBWIN32_FILE_ACTION_MODIFIED_DEF /* nothing */
#endif /* !FILE_ACTION_MODIFIED */
#ifdef FILE_ACTION_RENAMED_OLD_NAME
#define LIBWIN32_FILE_ACTION_RENAMED_OLD_NAME_DEF \
	 { "FILE_ACTION_RENAMED_OLD_NAME", (DeeObject *)&libwin32_FILE_ACTION_RENAMED_OLD_NAME, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ACTION_RENAMED_OLD_NAME >= 0
#if FILE_ACTION_RENAMED_OLD_NAME == 0
#define libwin32_FILE_ACTION_RENAMED_OLD_NAME DeeInt_Zero
#elif FILE_ACTION_RENAMED_OLD_NAME == 1
#define libwin32_FILE_ACTION_RENAMED_OLD_NAME DeeInt_One
#elif FILE_ACTION_RENAMED_OLD_NAME <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#else
DEFINE_UINT75(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#endif
#else /*  FILE_ACTION_RENAMED_OLD_NAME >= 0 */
#if FILE_ACTION_RENAMED_OLD_NAME == -1
#define libwin32_FILE_ACTION_RENAMED_OLD_NAME DeeInt_MinusOne
#elif FILE_ACTION_RENAMED_OLD_NAME >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#elif FILE_ACTION_RENAMED_OLD_NAME >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#else
DEFINE_INT75(libwin32_FILE_ACTION_RENAMED_OLD_NAME,FILE_ACTION_RENAMED_OLD_NAME);
#endif
#endif /*  FILE_ACTION_RENAMED_OLD_NAME < 0 */
#else /* FILE_ACTION_RENAMED_OLD_NAME */
#define LIBWIN32_FILE_ACTION_RENAMED_OLD_NAME_DEF /* nothing */
#endif /* !FILE_ACTION_RENAMED_OLD_NAME */
#ifdef FILE_ACTION_RENAMED_NEW_NAME
#define LIBWIN32_FILE_ACTION_RENAMED_NEW_NAME_DEF \
	 { "FILE_ACTION_RENAMED_NEW_NAME", (DeeObject *)&libwin32_FILE_ACTION_RENAMED_NEW_NAME, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_ACTION_RENAMED_NEW_NAME >= 0
#if FILE_ACTION_RENAMED_NEW_NAME == 0
#define libwin32_FILE_ACTION_RENAMED_NEW_NAME DeeInt_Zero
#elif FILE_ACTION_RENAMED_NEW_NAME == 1
#define libwin32_FILE_ACTION_RENAMED_NEW_NAME DeeInt_One
#elif FILE_ACTION_RENAMED_NEW_NAME <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#else
DEFINE_UINT75(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#endif
#else /*  FILE_ACTION_RENAMED_NEW_NAME >= 0 */
#if FILE_ACTION_RENAMED_NEW_NAME == -1
#define libwin32_FILE_ACTION_RENAMED_NEW_NAME DeeInt_MinusOne
#elif FILE_ACTION_RENAMED_NEW_NAME >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#elif FILE_ACTION_RENAMED_NEW_NAME >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#else
DEFINE_INT75(libwin32_FILE_ACTION_RENAMED_NEW_NAME,FILE_ACTION_RENAMED_NEW_NAME);
#endif
#endif /*  FILE_ACTION_RENAMED_NEW_NAME < 0 */
#else /* FILE_ACTION_RENAMED_NEW_NAME */
#define LIBWIN32_FILE_ACTION_RENAMED_NEW_NAME_DEF /* nothing */
#endif /* !FILE_ACTION_RENAMED_NEW_NAME */
#ifdef FILE_CASE_SENSITIVE_SEARCH
#define LIBWIN32_FILE_CASE_SENSITIVE_SEARCH_DEF \
	 { "FILE_CASE_SENSITIVE_SEARCH", (DeeObject *)&libwin32_FILE_CASE_SENSITIVE_SEARCH, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_CASE_SENSITIVE_SEARCH >= 0
#if FILE_CASE_SENSITIVE_SEARCH == 0
#define libwin32_FILE_CASE_SENSITIVE_SEARCH DeeInt_Zero
#elif FILE_CASE_SENSITIVE_SEARCH == 1
#define libwin32_FILE_CASE_SENSITIVE_SEARCH DeeInt_One
#elif FILE_CASE_SENSITIVE_SEARCH <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#else
DEFINE_UINT75(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#endif
#else /*  FILE_CASE_SENSITIVE_SEARCH >= 0 */
#if FILE_CASE_SENSITIVE_SEARCH == -1
#define libwin32_FILE_CASE_SENSITIVE_SEARCH DeeInt_MinusOne
#elif FILE_CASE_SENSITIVE_SEARCH >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#elif FILE_CASE_SENSITIVE_SEARCH >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#else
DEFINE_INT75(libwin32_FILE_CASE_SENSITIVE_SEARCH,FILE_CASE_SENSITIVE_SEARCH);
#endif
#endif /*  FILE_CASE_SENSITIVE_SEARCH < 0 */
#else /* FILE_CASE_SENSITIVE_SEARCH */
#define LIBWIN32_FILE_CASE_SENSITIVE_SEARCH_DEF /* nothing */
#endif /* !FILE_CASE_SENSITIVE_SEARCH */
#ifdef FILE_CASE_PRESERVED_NAMES
#define LIBWIN32_FILE_CASE_PRESERVED_NAMES_DEF \
	 { "FILE_CASE_PRESERVED_NAMES", (DeeObject *)&libwin32_FILE_CASE_PRESERVED_NAMES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_CASE_PRESERVED_NAMES >= 0
#if FILE_CASE_PRESERVED_NAMES == 0
#define libwin32_FILE_CASE_PRESERVED_NAMES DeeInt_Zero
#elif FILE_CASE_PRESERVED_NAMES == 1
#define libwin32_FILE_CASE_PRESERVED_NAMES DeeInt_One
#elif FILE_CASE_PRESERVED_NAMES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#else
DEFINE_UINT75(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#endif
#else /*  FILE_CASE_PRESERVED_NAMES >= 0 */
#if FILE_CASE_PRESERVED_NAMES == -1
#define libwin32_FILE_CASE_PRESERVED_NAMES DeeInt_MinusOne
#elif FILE_CASE_PRESERVED_NAMES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#elif FILE_CASE_PRESERVED_NAMES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#else
DEFINE_INT75(libwin32_FILE_CASE_PRESERVED_NAMES,FILE_CASE_PRESERVED_NAMES);
#endif
#endif /*  FILE_CASE_PRESERVED_NAMES < 0 */
#else /* FILE_CASE_PRESERVED_NAMES */
#define LIBWIN32_FILE_CASE_PRESERVED_NAMES_DEF /* nothing */
#endif /* !FILE_CASE_PRESERVED_NAMES */
#ifdef FILE_UNICODE_ON_DISK
#define LIBWIN32_FILE_UNICODE_ON_DISK_DEF \
	 { "FILE_UNICODE_ON_DISK", (DeeObject *)&libwin32_FILE_UNICODE_ON_DISK, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_UNICODE_ON_DISK >= 0
#if FILE_UNICODE_ON_DISK == 0
#define libwin32_FILE_UNICODE_ON_DISK DeeInt_Zero
#elif FILE_UNICODE_ON_DISK == 1
#define libwin32_FILE_UNICODE_ON_DISK DeeInt_One
#elif FILE_UNICODE_ON_DISK <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#else
DEFINE_UINT75(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#endif
#else /*  FILE_UNICODE_ON_DISK >= 0 */
#if FILE_UNICODE_ON_DISK == -1
#define libwin32_FILE_UNICODE_ON_DISK DeeInt_MinusOne
#elif FILE_UNICODE_ON_DISK >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#elif FILE_UNICODE_ON_DISK >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#else
DEFINE_INT75(libwin32_FILE_UNICODE_ON_DISK,FILE_UNICODE_ON_DISK);
#endif
#endif /*  FILE_UNICODE_ON_DISK < 0 */
#else /* FILE_UNICODE_ON_DISK */
#define LIBWIN32_FILE_UNICODE_ON_DISK_DEF /* nothing */
#endif /* !FILE_UNICODE_ON_DISK */
#ifdef FILE_PERSISTENT_ACLS
#define LIBWIN32_FILE_PERSISTENT_ACLS_DEF \
	 { "FILE_PERSISTENT_ACLS", (DeeObject *)&libwin32_FILE_PERSISTENT_ACLS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_PERSISTENT_ACLS >= 0
#if FILE_PERSISTENT_ACLS == 0
#define libwin32_FILE_PERSISTENT_ACLS DeeInt_Zero
#elif FILE_PERSISTENT_ACLS == 1
#define libwin32_FILE_PERSISTENT_ACLS DeeInt_One
#elif FILE_PERSISTENT_ACLS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#else
DEFINE_UINT75(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#endif
#else /*  FILE_PERSISTENT_ACLS >= 0 */
#if FILE_PERSISTENT_ACLS == -1
#define libwin32_FILE_PERSISTENT_ACLS DeeInt_MinusOne
#elif FILE_PERSISTENT_ACLS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#elif FILE_PERSISTENT_ACLS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#else
DEFINE_INT75(libwin32_FILE_PERSISTENT_ACLS,FILE_PERSISTENT_ACLS);
#endif
#endif /*  FILE_PERSISTENT_ACLS < 0 */
#else /* FILE_PERSISTENT_ACLS */
#define LIBWIN32_FILE_PERSISTENT_ACLS_DEF /* nothing */
#endif /* !FILE_PERSISTENT_ACLS */
#ifdef FILE_FILE_COMPRESSION
#define LIBWIN32_FILE_FILE_COMPRESSION_DEF \
	 { "FILE_FILE_COMPRESSION", (DeeObject *)&libwin32_FILE_FILE_COMPRESSION, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_FILE_COMPRESSION >= 0
#if FILE_FILE_COMPRESSION == 0
#define libwin32_FILE_FILE_COMPRESSION DeeInt_Zero
#elif FILE_FILE_COMPRESSION == 1
#define libwin32_FILE_FILE_COMPRESSION DeeInt_One
#elif FILE_FILE_COMPRESSION <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#else
DEFINE_UINT75(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#endif
#else /*  FILE_FILE_COMPRESSION >= 0 */
#if FILE_FILE_COMPRESSION == -1
#define libwin32_FILE_FILE_COMPRESSION DeeInt_MinusOne
#elif FILE_FILE_COMPRESSION >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#elif FILE_FILE_COMPRESSION >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#else
DEFINE_INT75(libwin32_FILE_FILE_COMPRESSION,FILE_FILE_COMPRESSION);
#endif
#endif /*  FILE_FILE_COMPRESSION < 0 */
#else /* FILE_FILE_COMPRESSION */
#define LIBWIN32_FILE_FILE_COMPRESSION_DEF /* nothing */
#endif /* !FILE_FILE_COMPRESSION */
#ifdef FILE_VOLUME_QUOTAS
#define LIBWIN32_FILE_VOLUME_QUOTAS_DEF \
	 { "FILE_VOLUME_QUOTAS", (DeeObject *)&libwin32_FILE_VOLUME_QUOTAS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_VOLUME_QUOTAS >= 0
#if FILE_VOLUME_QUOTAS == 0
#define libwin32_FILE_VOLUME_QUOTAS DeeInt_Zero
#elif FILE_VOLUME_QUOTAS == 1
#define libwin32_FILE_VOLUME_QUOTAS DeeInt_One
#elif FILE_VOLUME_QUOTAS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#else
DEFINE_UINT75(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#endif
#else /*  FILE_VOLUME_QUOTAS >= 0 */
#if FILE_VOLUME_QUOTAS == -1
#define libwin32_FILE_VOLUME_QUOTAS DeeInt_MinusOne
#elif FILE_VOLUME_QUOTAS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#elif FILE_VOLUME_QUOTAS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#else
DEFINE_INT75(libwin32_FILE_VOLUME_QUOTAS,FILE_VOLUME_QUOTAS);
#endif
#endif /*  FILE_VOLUME_QUOTAS < 0 */
#else /* FILE_VOLUME_QUOTAS */
#define LIBWIN32_FILE_VOLUME_QUOTAS_DEF /* nothing */
#endif /* !FILE_VOLUME_QUOTAS */
#ifdef FILE_SUPPORTS_SPARSE_FILES
#define LIBWIN32_FILE_SUPPORTS_SPARSE_FILES_DEF \
	 { "FILE_SUPPORTS_SPARSE_FILES", (DeeObject *)&libwin32_FILE_SUPPORTS_SPARSE_FILES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_SPARSE_FILES >= 0
#if FILE_SUPPORTS_SPARSE_FILES == 0
#define libwin32_FILE_SUPPORTS_SPARSE_FILES DeeInt_Zero
#elif FILE_SUPPORTS_SPARSE_FILES == 1
#define libwin32_FILE_SUPPORTS_SPARSE_FILES DeeInt_One
#elif FILE_SUPPORTS_SPARSE_FILES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#endif
#else /*  FILE_SUPPORTS_SPARSE_FILES >= 0 */
#if FILE_SUPPORTS_SPARSE_FILES == -1
#define libwin32_FILE_SUPPORTS_SPARSE_FILES DeeInt_MinusOne
#elif FILE_SUPPORTS_SPARSE_FILES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#elif FILE_SUPPORTS_SPARSE_FILES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_SPARSE_FILES,FILE_SUPPORTS_SPARSE_FILES);
#endif
#endif /*  FILE_SUPPORTS_SPARSE_FILES < 0 */
#else /* FILE_SUPPORTS_SPARSE_FILES */
#define LIBWIN32_FILE_SUPPORTS_SPARSE_FILES_DEF /* nothing */
#endif /* !FILE_SUPPORTS_SPARSE_FILES */
#ifdef FILE_SUPPORTS_REPARSE_POINTS
#define LIBWIN32_FILE_SUPPORTS_REPARSE_POINTS_DEF \
	 { "FILE_SUPPORTS_REPARSE_POINTS", (DeeObject *)&libwin32_FILE_SUPPORTS_REPARSE_POINTS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_REPARSE_POINTS >= 0
#if FILE_SUPPORTS_REPARSE_POINTS == 0
#define libwin32_FILE_SUPPORTS_REPARSE_POINTS DeeInt_Zero
#elif FILE_SUPPORTS_REPARSE_POINTS == 1
#define libwin32_FILE_SUPPORTS_REPARSE_POINTS DeeInt_One
#elif FILE_SUPPORTS_REPARSE_POINTS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#endif
#else /*  FILE_SUPPORTS_REPARSE_POINTS >= 0 */
#if FILE_SUPPORTS_REPARSE_POINTS == -1
#define libwin32_FILE_SUPPORTS_REPARSE_POINTS DeeInt_MinusOne
#elif FILE_SUPPORTS_REPARSE_POINTS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#elif FILE_SUPPORTS_REPARSE_POINTS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_REPARSE_POINTS,FILE_SUPPORTS_REPARSE_POINTS);
#endif
#endif /*  FILE_SUPPORTS_REPARSE_POINTS < 0 */
#else /* FILE_SUPPORTS_REPARSE_POINTS */
#define LIBWIN32_FILE_SUPPORTS_REPARSE_POINTS_DEF /* nothing */
#endif /* !FILE_SUPPORTS_REPARSE_POINTS */
#ifdef FILE_SUPPORTS_REMOTE_STORAGE
#define LIBWIN32_FILE_SUPPORTS_REMOTE_STORAGE_DEF \
	 { "FILE_SUPPORTS_REMOTE_STORAGE", (DeeObject *)&libwin32_FILE_SUPPORTS_REMOTE_STORAGE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_REMOTE_STORAGE >= 0
#if FILE_SUPPORTS_REMOTE_STORAGE == 0
#define libwin32_FILE_SUPPORTS_REMOTE_STORAGE DeeInt_Zero
#elif FILE_SUPPORTS_REMOTE_STORAGE == 1
#define libwin32_FILE_SUPPORTS_REMOTE_STORAGE DeeInt_One
#elif FILE_SUPPORTS_REMOTE_STORAGE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#endif
#else /*  FILE_SUPPORTS_REMOTE_STORAGE >= 0 */
#if FILE_SUPPORTS_REMOTE_STORAGE == -1
#define libwin32_FILE_SUPPORTS_REMOTE_STORAGE DeeInt_MinusOne
#elif FILE_SUPPORTS_REMOTE_STORAGE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#elif FILE_SUPPORTS_REMOTE_STORAGE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_REMOTE_STORAGE,FILE_SUPPORTS_REMOTE_STORAGE);
#endif
#endif /*  FILE_SUPPORTS_REMOTE_STORAGE < 0 */
#else /* FILE_SUPPORTS_REMOTE_STORAGE */
#define LIBWIN32_FILE_SUPPORTS_REMOTE_STORAGE_DEF /* nothing */
#endif /* !FILE_SUPPORTS_REMOTE_STORAGE */
#ifdef FILE_VOLUME_IS_COMPRESSED
#define LIBWIN32_FILE_VOLUME_IS_COMPRESSED_DEF \
	 { "FILE_VOLUME_IS_COMPRESSED", (DeeObject *)&libwin32_FILE_VOLUME_IS_COMPRESSED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_VOLUME_IS_COMPRESSED >= 0
#if FILE_VOLUME_IS_COMPRESSED == 0
#define libwin32_FILE_VOLUME_IS_COMPRESSED DeeInt_Zero
#elif FILE_VOLUME_IS_COMPRESSED == 1
#define libwin32_FILE_VOLUME_IS_COMPRESSED DeeInt_One
#elif FILE_VOLUME_IS_COMPRESSED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#else
DEFINE_UINT75(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#endif
#else /*  FILE_VOLUME_IS_COMPRESSED >= 0 */
#if FILE_VOLUME_IS_COMPRESSED == -1
#define libwin32_FILE_VOLUME_IS_COMPRESSED DeeInt_MinusOne
#elif FILE_VOLUME_IS_COMPRESSED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#elif FILE_VOLUME_IS_COMPRESSED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#else
DEFINE_INT75(libwin32_FILE_VOLUME_IS_COMPRESSED,FILE_VOLUME_IS_COMPRESSED);
#endif
#endif /*  FILE_VOLUME_IS_COMPRESSED < 0 */
#else /* FILE_VOLUME_IS_COMPRESSED */
#define LIBWIN32_FILE_VOLUME_IS_COMPRESSED_DEF /* nothing */
#endif /* !FILE_VOLUME_IS_COMPRESSED */
#ifdef FILE_SUPPORTS_OBJECT_IDS
#define LIBWIN32_FILE_SUPPORTS_OBJECT_IDS_DEF \
	 { "FILE_SUPPORTS_OBJECT_IDS", (DeeObject *)&libwin32_FILE_SUPPORTS_OBJECT_IDS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_OBJECT_IDS >= 0
#if FILE_SUPPORTS_OBJECT_IDS == 0
#define libwin32_FILE_SUPPORTS_OBJECT_IDS DeeInt_Zero
#elif FILE_SUPPORTS_OBJECT_IDS == 1
#define libwin32_FILE_SUPPORTS_OBJECT_IDS DeeInt_One
#elif FILE_SUPPORTS_OBJECT_IDS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#endif
#else /*  FILE_SUPPORTS_OBJECT_IDS >= 0 */
#if FILE_SUPPORTS_OBJECT_IDS == -1
#define libwin32_FILE_SUPPORTS_OBJECT_IDS DeeInt_MinusOne
#elif FILE_SUPPORTS_OBJECT_IDS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#elif FILE_SUPPORTS_OBJECT_IDS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_OBJECT_IDS,FILE_SUPPORTS_OBJECT_IDS);
#endif
#endif /*  FILE_SUPPORTS_OBJECT_IDS < 0 */
#else /* FILE_SUPPORTS_OBJECT_IDS */
#define LIBWIN32_FILE_SUPPORTS_OBJECT_IDS_DEF /* nothing */
#endif /* !FILE_SUPPORTS_OBJECT_IDS */
#ifdef FILE_SUPPORTS_ENCRYPTION
#define LIBWIN32_FILE_SUPPORTS_ENCRYPTION_DEF \
	 { "FILE_SUPPORTS_ENCRYPTION", (DeeObject *)&libwin32_FILE_SUPPORTS_ENCRYPTION, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_ENCRYPTION >= 0
#if FILE_SUPPORTS_ENCRYPTION == 0
#define libwin32_FILE_SUPPORTS_ENCRYPTION DeeInt_Zero
#elif FILE_SUPPORTS_ENCRYPTION == 1
#define libwin32_FILE_SUPPORTS_ENCRYPTION DeeInt_One
#elif FILE_SUPPORTS_ENCRYPTION <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#endif
#else /*  FILE_SUPPORTS_ENCRYPTION >= 0 */
#if FILE_SUPPORTS_ENCRYPTION == -1
#define libwin32_FILE_SUPPORTS_ENCRYPTION DeeInt_MinusOne
#elif FILE_SUPPORTS_ENCRYPTION >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#elif FILE_SUPPORTS_ENCRYPTION >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_ENCRYPTION,FILE_SUPPORTS_ENCRYPTION);
#endif
#endif /*  FILE_SUPPORTS_ENCRYPTION < 0 */
#else /* FILE_SUPPORTS_ENCRYPTION */
#define LIBWIN32_FILE_SUPPORTS_ENCRYPTION_DEF /* nothing */
#endif /* !FILE_SUPPORTS_ENCRYPTION */
#ifdef FILE_NAMED_STREAMS
#define LIBWIN32_FILE_NAMED_STREAMS_DEF \
	 { "FILE_NAMED_STREAMS", (DeeObject *)&libwin32_FILE_NAMED_STREAMS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_NAMED_STREAMS >= 0
#if FILE_NAMED_STREAMS == 0
#define libwin32_FILE_NAMED_STREAMS DeeInt_Zero
#elif FILE_NAMED_STREAMS == 1
#define libwin32_FILE_NAMED_STREAMS DeeInt_One
#elif FILE_NAMED_STREAMS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#else
DEFINE_UINT75(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#endif
#else /*  FILE_NAMED_STREAMS >= 0 */
#if FILE_NAMED_STREAMS == -1
#define libwin32_FILE_NAMED_STREAMS DeeInt_MinusOne
#elif FILE_NAMED_STREAMS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#elif FILE_NAMED_STREAMS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#else
DEFINE_INT75(libwin32_FILE_NAMED_STREAMS,FILE_NAMED_STREAMS);
#endif
#endif /*  FILE_NAMED_STREAMS < 0 */
#else /* FILE_NAMED_STREAMS */
#define LIBWIN32_FILE_NAMED_STREAMS_DEF /* nothing */
#endif /* !FILE_NAMED_STREAMS */
#ifdef FILE_READ_ONLY_VOLUME
#define LIBWIN32_FILE_READ_ONLY_VOLUME_DEF \
	 { "FILE_READ_ONLY_VOLUME", (DeeObject *)&libwin32_FILE_READ_ONLY_VOLUME, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_READ_ONLY_VOLUME >= 0
#if FILE_READ_ONLY_VOLUME == 0
#define libwin32_FILE_READ_ONLY_VOLUME DeeInt_Zero
#elif FILE_READ_ONLY_VOLUME == 1
#define libwin32_FILE_READ_ONLY_VOLUME DeeInt_One
#elif FILE_READ_ONLY_VOLUME <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#else
DEFINE_UINT75(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#endif
#else /*  FILE_READ_ONLY_VOLUME >= 0 */
#if FILE_READ_ONLY_VOLUME == -1
#define libwin32_FILE_READ_ONLY_VOLUME DeeInt_MinusOne
#elif FILE_READ_ONLY_VOLUME >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#elif FILE_READ_ONLY_VOLUME >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#else
DEFINE_INT75(libwin32_FILE_READ_ONLY_VOLUME,FILE_READ_ONLY_VOLUME);
#endif
#endif /*  FILE_READ_ONLY_VOLUME < 0 */
#else /* FILE_READ_ONLY_VOLUME */
#define LIBWIN32_FILE_READ_ONLY_VOLUME_DEF /* nothing */
#endif /* !FILE_READ_ONLY_VOLUME */
#ifdef FILE_SEQUENTIAL_WRITE_ONCE
#define LIBWIN32_FILE_SEQUENTIAL_WRITE_ONCE_DEF \
	 { "FILE_SEQUENTIAL_WRITE_ONCE", (DeeObject *)&libwin32_FILE_SEQUENTIAL_WRITE_ONCE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SEQUENTIAL_WRITE_ONCE >= 0
#if FILE_SEQUENTIAL_WRITE_ONCE == 0
#define libwin32_FILE_SEQUENTIAL_WRITE_ONCE DeeInt_Zero
#elif FILE_SEQUENTIAL_WRITE_ONCE == 1
#define libwin32_FILE_SEQUENTIAL_WRITE_ONCE DeeInt_One
#elif FILE_SEQUENTIAL_WRITE_ONCE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#else
DEFINE_UINT75(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#endif
#else /*  FILE_SEQUENTIAL_WRITE_ONCE >= 0 */
#if FILE_SEQUENTIAL_WRITE_ONCE == -1
#define libwin32_FILE_SEQUENTIAL_WRITE_ONCE DeeInt_MinusOne
#elif FILE_SEQUENTIAL_WRITE_ONCE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#elif FILE_SEQUENTIAL_WRITE_ONCE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#else
DEFINE_INT75(libwin32_FILE_SEQUENTIAL_WRITE_ONCE,FILE_SEQUENTIAL_WRITE_ONCE);
#endif
#endif /*  FILE_SEQUENTIAL_WRITE_ONCE < 0 */
#else /* FILE_SEQUENTIAL_WRITE_ONCE */
#define LIBWIN32_FILE_SEQUENTIAL_WRITE_ONCE_DEF /* nothing */
#endif /* !FILE_SEQUENTIAL_WRITE_ONCE */
#ifdef FILE_SUPPORTS_TRANSACTIONS
#define LIBWIN32_FILE_SUPPORTS_TRANSACTIONS_DEF \
	 { "FILE_SUPPORTS_TRANSACTIONS", (DeeObject *)&libwin32_FILE_SUPPORTS_TRANSACTIONS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_TRANSACTIONS >= 0
#if FILE_SUPPORTS_TRANSACTIONS == 0
#define libwin32_FILE_SUPPORTS_TRANSACTIONS DeeInt_Zero
#elif FILE_SUPPORTS_TRANSACTIONS == 1
#define libwin32_FILE_SUPPORTS_TRANSACTIONS DeeInt_One
#elif FILE_SUPPORTS_TRANSACTIONS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#endif
#else /*  FILE_SUPPORTS_TRANSACTIONS >= 0 */
#if FILE_SUPPORTS_TRANSACTIONS == -1
#define libwin32_FILE_SUPPORTS_TRANSACTIONS DeeInt_MinusOne
#elif FILE_SUPPORTS_TRANSACTIONS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#elif FILE_SUPPORTS_TRANSACTIONS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_TRANSACTIONS,FILE_SUPPORTS_TRANSACTIONS);
#endif
#endif /*  FILE_SUPPORTS_TRANSACTIONS < 0 */
#else /* FILE_SUPPORTS_TRANSACTIONS */
#define LIBWIN32_FILE_SUPPORTS_TRANSACTIONS_DEF /* nothing */
#endif /* !FILE_SUPPORTS_TRANSACTIONS */
#ifdef FILE_SUPPORTS_HARD_LINKS
#define LIBWIN32_FILE_SUPPORTS_HARD_LINKS_DEF \
	 { "FILE_SUPPORTS_HARD_LINKS", (DeeObject *)&libwin32_FILE_SUPPORTS_HARD_LINKS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_HARD_LINKS >= 0
#if FILE_SUPPORTS_HARD_LINKS == 0
#define libwin32_FILE_SUPPORTS_HARD_LINKS DeeInt_Zero
#elif FILE_SUPPORTS_HARD_LINKS == 1
#define libwin32_FILE_SUPPORTS_HARD_LINKS DeeInt_One
#elif FILE_SUPPORTS_HARD_LINKS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#endif
#else /*  FILE_SUPPORTS_HARD_LINKS >= 0 */
#if FILE_SUPPORTS_HARD_LINKS == -1
#define libwin32_FILE_SUPPORTS_HARD_LINKS DeeInt_MinusOne
#elif FILE_SUPPORTS_HARD_LINKS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#elif FILE_SUPPORTS_HARD_LINKS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_HARD_LINKS,FILE_SUPPORTS_HARD_LINKS);
#endif
#endif /*  FILE_SUPPORTS_HARD_LINKS < 0 */
#else /* FILE_SUPPORTS_HARD_LINKS */
#define LIBWIN32_FILE_SUPPORTS_HARD_LINKS_DEF /* nothing */
#endif /* !FILE_SUPPORTS_HARD_LINKS */
#ifdef FILE_SUPPORTS_EXTENDED_ATTRIBUTES
#define LIBWIN32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES_DEF \
	 { "FILE_SUPPORTS_EXTENDED_ATTRIBUTES", (DeeObject *)&libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= 0
#if FILE_SUPPORTS_EXTENDED_ATTRIBUTES == 0
#define libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES DeeInt_Zero
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES == 1
#define libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES DeeInt_One
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#endif
#else /*  FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= 0 */
#if FILE_SUPPORTS_EXTENDED_ATTRIBUTES == -1
#define libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES DeeInt_MinusOne
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#elif FILE_SUPPORTS_EXTENDED_ATTRIBUTES >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES,FILE_SUPPORTS_EXTENDED_ATTRIBUTES);
#endif
#endif /*  FILE_SUPPORTS_EXTENDED_ATTRIBUTES < 0 */
#else /* FILE_SUPPORTS_EXTENDED_ATTRIBUTES */
#define LIBWIN32_FILE_SUPPORTS_EXTENDED_ATTRIBUTES_DEF /* nothing */
#endif /* !FILE_SUPPORTS_EXTENDED_ATTRIBUTES */
#ifdef FILE_SUPPORTS_OPEN_BY_FILE_ID
#define LIBWIN32_FILE_SUPPORTS_OPEN_BY_FILE_ID_DEF \
	 { "FILE_SUPPORTS_OPEN_BY_FILE_ID", (DeeObject *)&libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_OPEN_BY_FILE_ID >= 0
#if FILE_SUPPORTS_OPEN_BY_FILE_ID == 0
#define libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID DeeInt_Zero
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID == 1
#define libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID DeeInt_One
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#endif
#else /*  FILE_SUPPORTS_OPEN_BY_FILE_ID >= 0 */
#if FILE_SUPPORTS_OPEN_BY_FILE_ID == -1
#define libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID DeeInt_MinusOne
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#elif FILE_SUPPORTS_OPEN_BY_FILE_ID >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_OPEN_BY_FILE_ID,FILE_SUPPORTS_OPEN_BY_FILE_ID);
#endif
#endif /*  FILE_SUPPORTS_OPEN_BY_FILE_ID < 0 */
#else /* FILE_SUPPORTS_OPEN_BY_FILE_ID */
#define LIBWIN32_FILE_SUPPORTS_OPEN_BY_FILE_ID_DEF /* nothing */
#endif /* !FILE_SUPPORTS_OPEN_BY_FILE_ID */
#ifdef FILE_SUPPORTS_USN_JOURNAL
#define LIBWIN32_FILE_SUPPORTS_USN_JOURNAL_DEF \
	 { "FILE_SUPPORTS_USN_JOURNAL", (DeeObject *)&libwin32_FILE_SUPPORTS_USN_JOURNAL, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_USN_JOURNAL >= 0
#if FILE_SUPPORTS_USN_JOURNAL == 0
#define libwin32_FILE_SUPPORTS_USN_JOURNAL DeeInt_Zero
#elif FILE_SUPPORTS_USN_JOURNAL == 1
#define libwin32_FILE_SUPPORTS_USN_JOURNAL DeeInt_One
#elif FILE_SUPPORTS_USN_JOURNAL <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#endif
#else /*  FILE_SUPPORTS_USN_JOURNAL >= 0 */
#if FILE_SUPPORTS_USN_JOURNAL == -1
#define libwin32_FILE_SUPPORTS_USN_JOURNAL DeeInt_MinusOne
#elif FILE_SUPPORTS_USN_JOURNAL >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#elif FILE_SUPPORTS_USN_JOURNAL >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_USN_JOURNAL,FILE_SUPPORTS_USN_JOURNAL);
#endif
#endif /*  FILE_SUPPORTS_USN_JOURNAL < 0 */
#else /* FILE_SUPPORTS_USN_JOURNAL */
#define LIBWIN32_FILE_SUPPORTS_USN_JOURNAL_DEF /* nothing */
#endif /* !FILE_SUPPORTS_USN_JOURNAL */
#ifdef FILE_SUPPORTS_INTEGRITY_STREAMS
#define LIBWIN32_FILE_SUPPORTS_INTEGRITY_STREAMS_DEF \
	 { "FILE_SUPPORTS_INTEGRITY_STREAMS", (DeeObject *)&libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_SUPPORTS_INTEGRITY_STREAMS >= 0
#if FILE_SUPPORTS_INTEGRITY_STREAMS == 0
#define libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS DeeInt_Zero
#elif FILE_SUPPORTS_INTEGRITY_STREAMS == 1
#define libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS DeeInt_One
#elif FILE_SUPPORTS_INTEGRITY_STREAMS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#else
DEFINE_UINT75(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#endif
#else /*  FILE_SUPPORTS_INTEGRITY_STREAMS >= 0 */
#if FILE_SUPPORTS_INTEGRITY_STREAMS == -1
#define libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS DeeInt_MinusOne
#elif FILE_SUPPORTS_INTEGRITY_STREAMS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#elif FILE_SUPPORTS_INTEGRITY_STREAMS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#else
DEFINE_INT75(libwin32_FILE_SUPPORTS_INTEGRITY_STREAMS,FILE_SUPPORTS_INTEGRITY_STREAMS);
#endif
#endif /*  FILE_SUPPORTS_INTEGRITY_STREAMS < 0 */
#else /* FILE_SUPPORTS_INTEGRITY_STREAMS */
#define LIBWIN32_FILE_SUPPORTS_INTEGRITY_STREAMS_DEF /* nothing */
#endif /* !FILE_SUPPORTS_INTEGRITY_STREAMS */
#ifdef CREATE_NEW
#define LIBWIN32_CREATE_NEW_DEF \
	 { "CREATE_NEW", (DeeObject *)&libwin32_CREATE_NEW, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if CREATE_NEW >= 0
#if CREATE_NEW == 0
#define libwin32_CREATE_NEW DeeInt_Zero
#elif CREATE_NEW == 1
#define libwin32_CREATE_NEW DeeInt_One
#elif CREATE_NEW <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_CREATE_NEW,CREATE_NEW);
#else
DEFINE_UINT75(libwin32_CREATE_NEW,CREATE_NEW);
#endif
#else /*  CREATE_NEW >= 0 */
#if CREATE_NEW == -1
#define libwin32_CREATE_NEW DeeInt_MinusOne
#elif CREATE_NEW >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_CREATE_NEW,CREATE_NEW);
#elif CREATE_NEW >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_CREATE_NEW,CREATE_NEW);
#else
DEFINE_INT75(libwin32_CREATE_NEW,CREATE_NEW);
#endif
#endif /*  CREATE_NEW < 0 */
#else /* CREATE_NEW */
#define LIBWIN32_CREATE_NEW_DEF /* nothing */
#endif /* !CREATE_NEW */
#ifdef CREATE_ALWAYS
#define LIBWIN32_CREATE_ALWAYS_DEF \
	 { "CREATE_ALWAYS", (DeeObject *)&libwin32_CREATE_ALWAYS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if CREATE_ALWAYS >= 0
#if CREATE_ALWAYS == 0
#define libwin32_CREATE_ALWAYS DeeInt_Zero
#elif CREATE_ALWAYS == 1
#define libwin32_CREATE_ALWAYS DeeInt_One
#elif CREATE_ALWAYS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#else
DEFINE_UINT75(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#endif
#else /*  CREATE_ALWAYS >= 0 */
#if CREATE_ALWAYS == -1
#define libwin32_CREATE_ALWAYS DeeInt_MinusOne
#elif CREATE_ALWAYS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#elif CREATE_ALWAYS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#else
DEFINE_INT75(libwin32_CREATE_ALWAYS,CREATE_ALWAYS);
#endif
#endif /*  CREATE_ALWAYS < 0 */
#else /* CREATE_ALWAYS */
#define LIBWIN32_CREATE_ALWAYS_DEF /* nothing */
#endif /* !CREATE_ALWAYS */
#ifdef OPEN_EXISTING
#define LIBWIN32_OPEN_EXISTING_DEF \
	 { "OPEN_EXISTING", (DeeObject *)&libwin32_OPEN_EXISTING, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if OPEN_EXISTING >= 0
#if OPEN_EXISTING == 0
#define libwin32_OPEN_EXISTING DeeInt_Zero
#elif OPEN_EXISTING == 1
#define libwin32_OPEN_EXISTING DeeInt_One
#elif OPEN_EXISTING <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#else
DEFINE_UINT75(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#endif
#else /*  OPEN_EXISTING >= 0 */
#if OPEN_EXISTING == -1
#define libwin32_OPEN_EXISTING DeeInt_MinusOne
#elif OPEN_EXISTING >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#elif OPEN_EXISTING >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#else
DEFINE_INT75(libwin32_OPEN_EXISTING,OPEN_EXISTING);
#endif
#endif /*  OPEN_EXISTING < 0 */
#else /* OPEN_EXISTING */
#define LIBWIN32_OPEN_EXISTING_DEF /* nothing */
#endif /* !OPEN_EXISTING */
#ifdef OPEN_ALWAYS
#define LIBWIN32_OPEN_ALWAYS_DEF \
	 { "OPEN_ALWAYS", (DeeObject *)&libwin32_OPEN_ALWAYS, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if OPEN_ALWAYS >= 0
#if OPEN_ALWAYS == 0
#define libwin32_OPEN_ALWAYS DeeInt_Zero
#elif OPEN_ALWAYS == 1
#define libwin32_OPEN_ALWAYS DeeInt_One
#elif OPEN_ALWAYS <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#else
DEFINE_UINT75(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#endif
#else /*  OPEN_ALWAYS >= 0 */
#if OPEN_ALWAYS == -1
#define libwin32_OPEN_ALWAYS DeeInt_MinusOne
#elif OPEN_ALWAYS >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#elif OPEN_ALWAYS >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#else
DEFINE_INT75(libwin32_OPEN_ALWAYS,OPEN_ALWAYS);
#endif
#endif /*  OPEN_ALWAYS < 0 */
#else /* OPEN_ALWAYS */
#define LIBWIN32_OPEN_ALWAYS_DEF /* nothing */
#endif /* !OPEN_ALWAYS */
#ifdef TRUNCATE_EXISTING
#define LIBWIN32_TRUNCATE_EXISTING_DEF \
	 { "TRUNCATE_EXISTING", (DeeObject *)&libwin32_TRUNCATE_EXISTING, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if TRUNCATE_EXISTING >= 0
#if TRUNCATE_EXISTING == 0
#define libwin32_TRUNCATE_EXISTING DeeInt_Zero
#elif TRUNCATE_EXISTING == 1
#define libwin32_TRUNCATE_EXISTING DeeInt_One
#elif TRUNCATE_EXISTING <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#else
DEFINE_UINT75(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#endif
#else /*  TRUNCATE_EXISTING >= 0 */
#if TRUNCATE_EXISTING == -1
#define libwin32_TRUNCATE_EXISTING DeeInt_MinusOne
#elif TRUNCATE_EXISTING >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#elif TRUNCATE_EXISTING >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#else
DEFINE_INT75(libwin32_TRUNCATE_EXISTING,TRUNCATE_EXISTING);
#endif
#endif /*  TRUNCATE_EXISTING < 0 */
#else /* TRUNCATE_EXISTING */
#define LIBWIN32_TRUNCATE_EXISTING_DEF /* nothing */
#endif /* !TRUNCATE_EXISTING */
#ifdef FILE_BEGIN
#define LIBWIN32_FILE_BEGIN_DEF \
	 { "FILE_BEGIN", (DeeObject *)&libwin32_FILE_BEGIN, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_BEGIN >= 0
#if FILE_BEGIN == 0
#define libwin32_FILE_BEGIN DeeInt_Zero
#elif FILE_BEGIN == 1
#define libwin32_FILE_BEGIN DeeInt_One
#elif FILE_BEGIN <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_BEGIN,FILE_BEGIN);
#else
DEFINE_UINT75(libwin32_FILE_BEGIN,FILE_BEGIN);
#endif
#else /*  FILE_BEGIN >= 0 */
#if FILE_BEGIN == -1
#define libwin32_FILE_BEGIN DeeInt_MinusOne
#elif FILE_BEGIN >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_BEGIN,FILE_BEGIN);
#elif FILE_BEGIN >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_BEGIN,FILE_BEGIN);
#else
DEFINE_INT75(libwin32_FILE_BEGIN,FILE_BEGIN);
#endif
#endif /*  FILE_BEGIN < 0 */
#else /* FILE_BEGIN */
#define LIBWIN32_FILE_BEGIN_DEF /* nothing */
#endif /* !FILE_BEGIN */
#ifdef FILE_CURRENT
#define LIBWIN32_FILE_CURRENT_DEF \
	 { "FILE_CURRENT", (DeeObject *)&libwin32_FILE_CURRENT, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_CURRENT >= 0
#if FILE_CURRENT == 0
#define libwin32_FILE_CURRENT DeeInt_Zero
#elif FILE_CURRENT == 1
#define libwin32_FILE_CURRENT DeeInt_One
#elif FILE_CURRENT <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_CURRENT,FILE_CURRENT);
#else
DEFINE_UINT75(libwin32_FILE_CURRENT,FILE_CURRENT);
#endif
#else /*  FILE_CURRENT >= 0 */
#if FILE_CURRENT == -1
#define libwin32_FILE_CURRENT DeeInt_MinusOne
#elif FILE_CURRENT >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_CURRENT,FILE_CURRENT);
#elif FILE_CURRENT >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_CURRENT,FILE_CURRENT);
#else
DEFINE_INT75(libwin32_FILE_CURRENT,FILE_CURRENT);
#endif
#endif /*  FILE_CURRENT < 0 */
#else /* FILE_CURRENT */
#define LIBWIN32_FILE_CURRENT_DEF /* nothing */
#endif /* !FILE_CURRENT */
#ifdef FILE_END
#define LIBWIN32_FILE_END_DEF \
	 { "FILE_END", (DeeObject *)&libwin32_FILE_END, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_END >= 0
#if FILE_END == 0
#define libwin32_FILE_END DeeInt_Zero
#elif FILE_END == 1
#define libwin32_FILE_END DeeInt_One
#elif FILE_END <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_END,FILE_END);
#elif FILE_END <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_END,FILE_END);
#elif FILE_END <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_END,FILE_END);
#elif FILE_END <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_END,FILE_END);
#else
DEFINE_UINT75(libwin32_FILE_END,FILE_END);
#endif
#else /*  FILE_END >= 0 */
#if FILE_END == -1
#define libwin32_FILE_END DeeInt_MinusOne
#elif FILE_END >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_END,FILE_END);
#elif FILE_END >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_END,FILE_END);
#elif FILE_END >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_END,FILE_END);
#elif FILE_END >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_END,FILE_END);
#else
DEFINE_INT75(libwin32_FILE_END,FILE_END);
#endif
#endif /*  FILE_END < 0 */
#else /* FILE_END */
#define LIBWIN32_FILE_END_DEF /* nothing */
#endif /* !FILE_END */
#ifdef FILE_TYPE_UNKNOWN
#define LIBWIN32_FILE_TYPE_UNKNOWN_DEF \
	 { "FILE_TYPE_UNKNOWN", (DeeObject *)&libwin32_FILE_TYPE_UNKNOWN, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TYPE_UNKNOWN >= 0
#if FILE_TYPE_UNKNOWN == 0
#define libwin32_FILE_TYPE_UNKNOWN DeeInt_Zero
#elif FILE_TYPE_UNKNOWN == 1
#define libwin32_FILE_TYPE_UNKNOWN DeeInt_One
#elif FILE_TYPE_UNKNOWN <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#else
DEFINE_UINT75(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#endif
#else /*  FILE_TYPE_UNKNOWN >= 0 */
#if FILE_TYPE_UNKNOWN == -1
#define libwin32_FILE_TYPE_UNKNOWN DeeInt_MinusOne
#elif FILE_TYPE_UNKNOWN >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#elif FILE_TYPE_UNKNOWN >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#else
DEFINE_INT75(libwin32_FILE_TYPE_UNKNOWN,FILE_TYPE_UNKNOWN);
#endif
#endif /*  FILE_TYPE_UNKNOWN < 0 */
#else /* FILE_TYPE_UNKNOWN */
#define LIBWIN32_FILE_TYPE_UNKNOWN_DEF /* nothing */
#endif /* !FILE_TYPE_UNKNOWN */
#ifdef FILE_TYPE_DISK
#define LIBWIN32_FILE_TYPE_DISK_DEF \
	 { "FILE_TYPE_DISK", (DeeObject *)&libwin32_FILE_TYPE_DISK, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TYPE_DISK >= 0
#if FILE_TYPE_DISK == 0
#define libwin32_FILE_TYPE_DISK DeeInt_Zero
#elif FILE_TYPE_DISK == 1
#define libwin32_FILE_TYPE_DISK DeeInt_One
#elif FILE_TYPE_DISK <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#else
DEFINE_UINT75(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#endif
#else /*  FILE_TYPE_DISK >= 0 */
#if FILE_TYPE_DISK == -1
#define libwin32_FILE_TYPE_DISK DeeInt_MinusOne
#elif FILE_TYPE_DISK >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#elif FILE_TYPE_DISK >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#else
DEFINE_INT75(libwin32_FILE_TYPE_DISK,FILE_TYPE_DISK);
#endif
#endif /*  FILE_TYPE_DISK < 0 */
#else /* FILE_TYPE_DISK */
#define LIBWIN32_FILE_TYPE_DISK_DEF /* nothing */
#endif /* !FILE_TYPE_DISK */
#ifdef FILE_TYPE_CHAR
#define LIBWIN32_FILE_TYPE_CHAR_DEF \
	 { "FILE_TYPE_CHAR", (DeeObject *)&libwin32_FILE_TYPE_CHAR, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TYPE_CHAR >= 0
#if FILE_TYPE_CHAR == 0
#define libwin32_FILE_TYPE_CHAR DeeInt_Zero
#elif FILE_TYPE_CHAR == 1
#define libwin32_FILE_TYPE_CHAR DeeInt_One
#elif FILE_TYPE_CHAR <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#else
DEFINE_UINT75(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#endif
#else /*  FILE_TYPE_CHAR >= 0 */
#if FILE_TYPE_CHAR == -1
#define libwin32_FILE_TYPE_CHAR DeeInt_MinusOne
#elif FILE_TYPE_CHAR >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#elif FILE_TYPE_CHAR >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#else
DEFINE_INT75(libwin32_FILE_TYPE_CHAR,FILE_TYPE_CHAR);
#endif
#endif /*  FILE_TYPE_CHAR < 0 */
#else /* FILE_TYPE_CHAR */
#define LIBWIN32_FILE_TYPE_CHAR_DEF /* nothing */
#endif /* !FILE_TYPE_CHAR */
#ifdef FILE_TYPE_PIPE
#define LIBWIN32_FILE_TYPE_PIPE_DEF \
	 { "FILE_TYPE_PIPE", (DeeObject *)&libwin32_FILE_TYPE_PIPE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TYPE_PIPE >= 0
#if FILE_TYPE_PIPE == 0
#define libwin32_FILE_TYPE_PIPE DeeInt_Zero
#elif FILE_TYPE_PIPE == 1
#define libwin32_FILE_TYPE_PIPE DeeInt_One
#elif FILE_TYPE_PIPE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#else
DEFINE_UINT75(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#endif
#else /*  FILE_TYPE_PIPE >= 0 */
#if FILE_TYPE_PIPE == -1
#define libwin32_FILE_TYPE_PIPE DeeInt_MinusOne
#elif FILE_TYPE_PIPE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#elif FILE_TYPE_PIPE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#else
DEFINE_INT75(libwin32_FILE_TYPE_PIPE,FILE_TYPE_PIPE);
#endif
#endif /*  FILE_TYPE_PIPE < 0 */
#else /* FILE_TYPE_PIPE */
#define LIBWIN32_FILE_TYPE_PIPE_DEF /* nothing */
#endif /* !FILE_TYPE_PIPE */
#ifdef FILE_TYPE_REMOTE
#define LIBWIN32_FILE_TYPE_REMOTE_DEF \
	 { "FILE_TYPE_REMOTE", (DeeObject *)&libwin32_FILE_TYPE_REMOTE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if FILE_TYPE_REMOTE >= 0
#if FILE_TYPE_REMOTE == 0
#define libwin32_FILE_TYPE_REMOTE DeeInt_Zero
#elif FILE_TYPE_REMOTE == 1
#define libwin32_FILE_TYPE_REMOTE DeeInt_One
#elif FILE_TYPE_REMOTE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#else
DEFINE_UINT75(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#endif
#else /*  FILE_TYPE_REMOTE >= 0 */
#if FILE_TYPE_REMOTE == -1
#define libwin32_FILE_TYPE_REMOTE DeeInt_MinusOne
#elif FILE_TYPE_REMOTE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#elif FILE_TYPE_REMOTE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#else
DEFINE_INT75(libwin32_FILE_TYPE_REMOTE,FILE_TYPE_REMOTE);
#endif
#endif /*  FILE_TYPE_REMOTE < 0 */
#else /* FILE_TYPE_REMOTE */
#define LIBWIN32_FILE_TYPE_REMOTE_DEF /* nothing */
#endif /* !FILE_TYPE_REMOTE */
#ifdef DRIVE_UNKNOWN
#define LIBWIN32_DRIVE_UNKNOWN_DEF \
	 { "DRIVE_UNKNOWN", (DeeObject *)&libwin32_DRIVE_UNKNOWN, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_UNKNOWN >= 0
#if DRIVE_UNKNOWN == 0
#define libwin32_DRIVE_UNKNOWN DeeInt_Zero
#elif DRIVE_UNKNOWN == 1
#define libwin32_DRIVE_UNKNOWN DeeInt_One
#elif DRIVE_UNKNOWN <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#else
DEFINE_UINT75(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#endif
#else /*  DRIVE_UNKNOWN >= 0 */
#if DRIVE_UNKNOWN == -1
#define libwin32_DRIVE_UNKNOWN DeeInt_MinusOne
#elif DRIVE_UNKNOWN >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#elif DRIVE_UNKNOWN >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#else
DEFINE_INT75(libwin32_DRIVE_UNKNOWN,DRIVE_UNKNOWN);
#endif
#endif /*  DRIVE_UNKNOWN < 0 */
#else /* DRIVE_UNKNOWN */
#define LIBWIN32_DRIVE_UNKNOWN_DEF /* nothing */
#endif /* !DRIVE_UNKNOWN */
#ifdef DRIVE_NO_ROOT_DIR
#define LIBWIN32_DRIVE_NO_ROOT_DIR_DEF \
	 { "DRIVE_NO_ROOT_DIR", (DeeObject *)&libwin32_DRIVE_NO_ROOT_DIR, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_NO_ROOT_DIR >= 0
#if DRIVE_NO_ROOT_DIR == 0
#define libwin32_DRIVE_NO_ROOT_DIR DeeInt_Zero
#elif DRIVE_NO_ROOT_DIR == 1
#define libwin32_DRIVE_NO_ROOT_DIR DeeInt_One
#elif DRIVE_NO_ROOT_DIR <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#else
DEFINE_UINT75(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#endif
#else /*  DRIVE_NO_ROOT_DIR >= 0 */
#if DRIVE_NO_ROOT_DIR == -1
#define libwin32_DRIVE_NO_ROOT_DIR DeeInt_MinusOne
#elif DRIVE_NO_ROOT_DIR >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#elif DRIVE_NO_ROOT_DIR >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#else
DEFINE_INT75(libwin32_DRIVE_NO_ROOT_DIR,DRIVE_NO_ROOT_DIR);
#endif
#endif /*  DRIVE_NO_ROOT_DIR < 0 */
#else /* DRIVE_NO_ROOT_DIR */
#define LIBWIN32_DRIVE_NO_ROOT_DIR_DEF /* nothing */
#endif /* !DRIVE_NO_ROOT_DIR */
#ifdef DRIVE_REMOVABLE
#define LIBWIN32_DRIVE_REMOVABLE_DEF \
	 { "DRIVE_REMOVABLE", (DeeObject *)&libwin32_DRIVE_REMOVABLE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_REMOVABLE >= 0
#if DRIVE_REMOVABLE == 0
#define libwin32_DRIVE_REMOVABLE DeeInt_Zero
#elif DRIVE_REMOVABLE == 1
#define libwin32_DRIVE_REMOVABLE DeeInt_One
#elif DRIVE_REMOVABLE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#else
DEFINE_UINT75(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#endif
#else /*  DRIVE_REMOVABLE >= 0 */
#if DRIVE_REMOVABLE == -1
#define libwin32_DRIVE_REMOVABLE DeeInt_MinusOne
#elif DRIVE_REMOVABLE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#elif DRIVE_REMOVABLE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#else
DEFINE_INT75(libwin32_DRIVE_REMOVABLE,DRIVE_REMOVABLE);
#endif
#endif /*  DRIVE_REMOVABLE < 0 */
#else /* DRIVE_REMOVABLE */
#define LIBWIN32_DRIVE_REMOVABLE_DEF /* nothing */
#endif /* !DRIVE_REMOVABLE */
#ifdef DRIVE_FIXED
#define LIBWIN32_DRIVE_FIXED_DEF \
	 { "DRIVE_FIXED", (DeeObject *)&libwin32_DRIVE_FIXED, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_FIXED >= 0
#if DRIVE_FIXED == 0
#define libwin32_DRIVE_FIXED DeeInt_Zero
#elif DRIVE_FIXED == 1
#define libwin32_DRIVE_FIXED DeeInt_One
#elif DRIVE_FIXED <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#else
DEFINE_UINT75(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#endif
#else /*  DRIVE_FIXED >= 0 */
#if DRIVE_FIXED == -1
#define libwin32_DRIVE_FIXED DeeInt_MinusOne
#elif DRIVE_FIXED >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#elif DRIVE_FIXED >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#else
DEFINE_INT75(libwin32_DRIVE_FIXED,DRIVE_FIXED);
#endif
#endif /*  DRIVE_FIXED < 0 */
#else /* DRIVE_FIXED */
#define LIBWIN32_DRIVE_FIXED_DEF /* nothing */
#endif /* !DRIVE_FIXED */
#ifdef DRIVE_REMOTE
#define LIBWIN32_DRIVE_REMOTE_DEF \
	 { "DRIVE_REMOTE", (DeeObject *)&libwin32_DRIVE_REMOTE, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_REMOTE >= 0
#if DRIVE_REMOTE == 0
#define libwin32_DRIVE_REMOTE DeeInt_Zero
#elif DRIVE_REMOTE == 1
#define libwin32_DRIVE_REMOTE DeeInt_One
#elif DRIVE_REMOTE <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#else
DEFINE_UINT75(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#endif
#else /*  DRIVE_REMOTE >= 0 */
#if DRIVE_REMOTE == -1
#define libwin32_DRIVE_REMOTE DeeInt_MinusOne
#elif DRIVE_REMOTE >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#elif DRIVE_REMOTE >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#else
DEFINE_INT75(libwin32_DRIVE_REMOTE,DRIVE_REMOTE);
#endif
#endif /*  DRIVE_REMOTE < 0 */
#else /* DRIVE_REMOTE */
#define LIBWIN32_DRIVE_REMOTE_DEF /* nothing */
#endif /* !DRIVE_REMOTE */
#ifdef DRIVE_CDROM
#define LIBWIN32_DRIVE_CDROM_DEF \
	 { "DRIVE_CDROM", (DeeObject *)&libwin32_DRIVE_CDROM, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_CDROM >= 0
#if DRIVE_CDROM == 0
#define libwin32_DRIVE_CDROM DeeInt_Zero
#elif DRIVE_CDROM == 1
#define libwin32_DRIVE_CDROM DeeInt_One
#elif DRIVE_CDROM <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#else
DEFINE_UINT75(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#endif
#else /*  DRIVE_CDROM >= 0 */
#if DRIVE_CDROM == -1
#define libwin32_DRIVE_CDROM DeeInt_MinusOne
#elif DRIVE_CDROM >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#elif DRIVE_CDROM >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#else
DEFINE_INT75(libwin32_DRIVE_CDROM,DRIVE_CDROM);
#endif
#endif /*  DRIVE_CDROM < 0 */
#else /* DRIVE_CDROM */
#define LIBWIN32_DRIVE_CDROM_DEF /* nothing */
#endif /* !DRIVE_CDROM */
#ifdef DRIVE_RAMDISK
#define LIBWIN32_DRIVE_RAMDISK_DEF \
	 { "DRIVE_RAMDISK", (DeeObject *)&libwin32_DRIVE_RAMDISK, MODSYM_FREADONLY|MODSYM_FCONSTEXPR },
#if DRIVE_RAMDISK >= 0
#if DRIVE_RAMDISK == 0
#define libwin32_DRIVE_RAMDISK DeeInt_Zero
#elif DRIVE_RAMDISK == 1
#define libwin32_DRIVE_RAMDISK DeeInt_One
#elif DRIVE_RAMDISK <= 0x7fffull /* 15-bit */
DEFINE_UINT15(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK <= 0x3fffffffull /* 30-bit */
DEFINE_UINT30(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK <= 0x1fffffffffffull /* 45-bit */
DEFINE_UINT45(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK <= 0xfffffffffffffffull /* 60-bit */
DEFINE_UINT60(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#else
DEFINE_UINT75(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#endif
#else /*  DRIVE_RAMDISK >= 0 */
#if DRIVE_RAMDISK == -1
#define libwin32_DRIVE_RAMDISK DeeInt_MinusOne
#elif DRIVE_RAMDISK >= -0x4000ll /* 15-bit */
DEFINE_INT15(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK >= -0x20000000ll /* 30-bit */
DEFINE_INT30(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK >= -0x100000000000ll /* 45-bit */
DEFINE_INT45(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#elif DRIVE_RAMDISK >= -0x800000000000000ll /* 60-bit */
DEFINE_INT60(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#else
DEFINE_INT75(libwin32_DRIVE_RAMDISK,DRIVE_RAMDISK);
#endif
#endif /*  DRIVE_RAMDISK < 0 */
#else /* DRIVE_RAMDISK */
#define LIBWIN32_DRIVE_RAMDISK_DEF /* nothing */
#endif /* !DRIVE_RAMDISK */
