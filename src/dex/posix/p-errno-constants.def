/* Copyright (c) 2018-2023 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2023 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
/* WARNING: Autogenerated file "p-errno-constants.def" */
#ifdef EOK
#define POSIX_EOK_DEF \
	{ "EOK", (DeeObject *)&posix_EOK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Success" },
#if EOK >= 0
#if EOK == 0
#define posix_EOK DeeInt_Zero
#elif EOK == 1
#define posix_EOK DeeInt_One
#elif EOK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EOK, EOK);
#elif EOK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EOK, EOK);
#elif EOK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EOK, EOK);
#elif EOK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EOK, EOK);
#else
PRIVATE DEFINE_UINT75(posix_EOK, EOK);
#endif
#else /* EOK >= 0 */
#if EOK == -1
#define posix_EOK DeeInt_MinusOne
#elif EOK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EOK, EOK);
#elif EOK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EOK, EOK);
#elif EOK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EOK, EOK);
#elif EOK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EOK, EOK);
#else
PRIVATE DEFINE_INT75(posix_EOK, EOK);
#endif
#endif /* EOK < 0 */
#else /* EOK */
#define POSIX_EOK_DEF /* nothing */
#endif /* !EOK */
#ifdef EPERM
#define POSIX_EPERM_DEF \
	{ "EPERM", (DeeObject *)&posix_EPERM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation not permitted" },
#if EPERM >= 0
#if EPERM == 0
#define posix_EPERM DeeInt_Zero
#elif EPERM == 1
#define posix_EPERM DeeInt_One
#elif EPERM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPERM, EPERM);
#elif EPERM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPERM, EPERM);
#elif EPERM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPERM, EPERM);
#elif EPERM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPERM, EPERM);
#else
PRIVATE DEFINE_UINT75(posix_EPERM, EPERM);
#endif
#else /* EPERM >= 0 */
#if EPERM == -1
#define posix_EPERM DeeInt_MinusOne
#elif EPERM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPERM, EPERM);
#elif EPERM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPERM, EPERM);
#elif EPERM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPERM, EPERM);
#elif EPERM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPERM, EPERM);
#else
PRIVATE DEFINE_INT75(posix_EPERM, EPERM);
#endif
#endif /* EPERM < 0 */
#else /* EPERM */
#define POSIX_EPERM_DEF /* nothing */
#endif /* !EPERM */
#ifdef ENOENT
#define POSIX_ENOENT_DEF \
	{ "ENOENT", (DeeObject *)&posix_ENOENT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No such file or directory" },
#if ENOENT >= 0
#if ENOENT == 0
#define posix_ENOENT DeeInt_Zero
#elif ENOENT == 1
#define posix_ENOENT DeeInt_One
#elif ENOENT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOENT, ENOENT);
#elif ENOENT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOENT, ENOENT);
#elif ENOENT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOENT, ENOENT);
#elif ENOENT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOENT, ENOENT);
#else
PRIVATE DEFINE_UINT75(posix_ENOENT, ENOENT);
#endif
#else /* ENOENT >= 0 */
#if ENOENT == -1
#define posix_ENOENT DeeInt_MinusOne
#elif ENOENT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOENT, ENOENT);
#elif ENOENT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOENT, ENOENT);
#elif ENOENT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOENT, ENOENT);
#elif ENOENT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOENT, ENOENT);
#else
PRIVATE DEFINE_INT75(posix_ENOENT, ENOENT);
#endif
#endif /* ENOENT < 0 */
#else /* ENOENT */
#define POSIX_ENOENT_DEF /* nothing */
#endif /* !ENOENT */
#ifdef ESRCH
#define POSIX_ESRCH_DEF \
	{ "ESRCH", (DeeObject *)&posix_ESRCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No such process" },
#if ESRCH >= 0
#if ESRCH == 0
#define posix_ESRCH DeeInt_Zero
#elif ESRCH == 1
#define posix_ESRCH DeeInt_One
#elif ESRCH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESRCH, ESRCH);
#elif ESRCH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESRCH, ESRCH);
#elif ESRCH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESRCH, ESRCH);
#elif ESRCH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESRCH, ESRCH);
#else
PRIVATE DEFINE_UINT75(posix_ESRCH, ESRCH);
#endif
#else /* ESRCH >= 0 */
#if ESRCH == -1
#define posix_ESRCH DeeInt_MinusOne
#elif ESRCH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESRCH, ESRCH);
#elif ESRCH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESRCH, ESRCH);
#elif ESRCH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESRCH, ESRCH);
#elif ESRCH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESRCH, ESRCH);
#else
PRIVATE DEFINE_INT75(posix_ESRCH, ESRCH);
#endif
#endif /* ESRCH < 0 */
#else /* ESRCH */
#define POSIX_ESRCH_DEF /* nothing */
#endif /* !ESRCH */
#ifdef EINTR
#define POSIX_EINTR_DEF \
	{ "EINTR", (DeeObject *)&posix_EINTR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interrupted system call" },
#if EINTR >= 0
#if EINTR == 0
#define posix_EINTR DeeInt_Zero
#elif EINTR == 1
#define posix_EINTR DeeInt_One
#elif EINTR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EINTR, EINTR);
#elif EINTR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EINTR, EINTR);
#elif EINTR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EINTR, EINTR);
#elif EINTR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EINTR, EINTR);
#else
PRIVATE DEFINE_UINT75(posix_EINTR, EINTR);
#endif
#else /* EINTR >= 0 */
#if EINTR == -1
#define posix_EINTR DeeInt_MinusOne
#elif EINTR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EINTR, EINTR);
#elif EINTR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EINTR, EINTR);
#elif EINTR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EINTR, EINTR);
#elif EINTR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EINTR, EINTR);
#else
PRIVATE DEFINE_INT75(posix_EINTR, EINTR);
#endif
#endif /* EINTR < 0 */
#else /* EINTR */
#define POSIX_EINTR_DEF /* nothing */
#endif /* !EINTR */
#ifdef EIO
#define POSIX_EIO_DEF \
	{ "EIO", (DeeObject *)&posix_EIO, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "I/O error" },
#if EIO >= 0
#if EIO == 0
#define posix_EIO DeeInt_Zero
#elif EIO == 1
#define posix_EIO DeeInt_One
#elif EIO <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EIO, EIO);
#elif EIO <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EIO, EIO);
#elif EIO <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EIO, EIO);
#elif EIO <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EIO, EIO);
#else
PRIVATE DEFINE_UINT75(posix_EIO, EIO);
#endif
#else /* EIO >= 0 */
#if EIO == -1
#define posix_EIO DeeInt_MinusOne
#elif EIO >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EIO, EIO);
#elif EIO >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EIO, EIO);
#elif EIO >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EIO, EIO);
#elif EIO >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EIO, EIO);
#else
PRIVATE DEFINE_INT75(posix_EIO, EIO);
#endif
#endif /* EIO < 0 */
#else /* EIO */
#define POSIX_EIO_DEF /* nothing */
#endif /* !EIO */
#ifdef ENXIO
#define POSIX_ENXIO_DEF \
	{ "ENXIO", (DeeObject *)&posix_ENXIO, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No such device or address" },
#if ENXIO >= 0
#if ENXIO == 0
#define posix_ENXIO DeeInt_Zero
#elif ENXIO == 1
#define posix_ENXIO DeeInt_One
#elif ENXIO <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENXIO, ENXIO);
#elif ENXIO <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENXIO, ENXIO);
#elif ENXIO <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENXIO, ENXIO);
#elif ENXIO <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENXIO, ENXIO);
#else
PRIVATE DEFINE_UINT75(posix_ENXIO, ENXIO);
#endif
#else /* ENXIO >= 0 */
#if ENXIO == -1
#define posix_ENXIO DeeInt_MinusOne
#elif ENXIO >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENXIO, ENXIO);
#elif ENXIO >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENXIO, ENXIO);
#elif ENXIO >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENXIO, ENXIO);
#elif ENXIO >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENXIO, ENXIO);
#else
PRIVATE DEFINE_INT75(posix_ENXIO, ENXIO);
#endif
#endif /* ENXIO < 0 */
#else /* ENXIO */
#define POSIX_ENXIO_DEF /* nothing */
#endif /* !ENXIO */
#ifdef E2BIG
#define POSIX_E2BIG_DEF \
	{ "E2BIG", (DeeObject *)&posix_E2BIG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Argument list too long" },
#if E2BIG >= 0
#if E2BIG == 0
#define posix_E2BIG DeeInt_Zero
#elif E2BIG == 1
#define posix_E2BIG DeeInt_One
#elif E2BIG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_E2BIG, E2BIG);
#elif E2BIG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_E2BIG, E2BIG);
#elif E2BIG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_E2BIG, E2BIG);
#elif E2BIG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_E2BIG, E2BIG);
#else
PRIVATE DEFINE_UINT75(posix_E2BIG, E2BIG);
#endif
#else /* E2BIG >= 0 */
#if E2BIG == -1
#define posix_E2BIG DeeInt_MinusOne
#elif E2BIG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_E2BIG, E2BIG);
#elif E2BIG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_E2BIG, E2BIG);
#elif E2BIG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_E2BIG, E2BIG);
#elif E2BIG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_E2BIG, E2BIG);
#else
PRIVATE DEFINE_INT75(posix_E2BIG, E2BIG);
#endif
#endif /* E2BIG < 0 */
#else /* E2BIG */
#define POSIX_E2BIG_DEF /* nothing */
#endif /* !E2BIG */
#ifdef ENOEXEC
#define POSIX_ENOEXEC_DEF \
	{ "ENOEXEC", (DeeObject *)&posix_ENOEXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Exec format error" },
#if ENOEXEC >= 0
#if ENOEXEC == 0
#define posix_ENOEXEC DeeInt_Zero
#elif ENOEXEC == 1
#define posix_ENOEXEC DeeInt_One
#elif ENOEXEC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOEXEC, ENOEXEC);
#else
PRIVATE DEFINE_UINT75(posix_ENOEXEC, ENOEXEC);
#endif
#else /* ENOEXEC >= 0 */
#if ENOEXEC == -1
#define posix_ENOEXEC DeeInt_MinusOne
#elif ENOEXEC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOEXEC, ENOEXEC);
#elif ENOEXEC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOEXEC, ENOEXEC);
#else
PRIVATE DEFINE_INT75(posix_ENOEXEC, ENOEXEC);
#endif
#endif /* ENOEXEC < 0 */
#else /* ENOEXEC */
#define POSIX_ENOEXEC_DEF /* nothing */
#endif /* !ENOEXEC */
#ifdef EBADF
#define POSIX_EBADF_DEF \
	{ "EBADF", (DeeObject *)&posix_EBADF, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Bad file number" },
#if EBADF >= 0
#if EBADF == 0
#define posix_EBADF DeeInt_Zero
#elif EBADF == 1
#define posix_EBADF DeeInt_One
#elif EBADF <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADF, EBADF);
#elif EBADF <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADF, EBADF);
#elif EBADF <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADF, EBADF);
#elif EBADF <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADF, EBADF);
#else
PRIVATE DEFINE_UINT75(posix_EBADF, EBADF);
#endif
#else /* EBADF >= 0 */
#if EBADF == -1
#define posix_EBADF DeeInt_MinusOne
#elif EBADF >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADF, EBADF);
#elif EBADF >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADF, EBADF);
#elif EBADF >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADF, EBADF);
#elif EBADF >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADF, EBADF);
#else
PRIVATE DEFINE_INT75(posix_EBADF, EBADF);
#endif
#endif /* EBADF < 0 */
#else /* EBADF */
#define POSIX_EBADF_DEF /* nothing */
#endif /* !EBADF */
#ifdef ECHILD
#define POSIX_ECHILD_DEF \
	{ "ECHILD", (DeeObject *)&posix_ECHILD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No child processes" },
#if ECHILD >= 0
#if ECHILD == 0
#define posix_ECHILD DeeInt_Zero
#elif ECHILD == 1
#define posix_ECHILD DeeInt_One
#elif ECHILD <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECHILD, ECHILD);
#elif ECHILD <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECHILD, ECHILD);
#elif ECHILD <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECHILD, ECHILD);
#elif ECHILD <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECHILD, ECHILD);
#else
PRIVATE DEFINE_UINT75(posix_ECHILD, ECHILD);
#endif
#else /* ECHILD >= 0 */
#if ECHILD == -1
#define posix_ECHILD DeeInt_MinusOne
#elif ECHILD >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECHILD, ECHILD);
#elif ECHILD >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECHILD, ECHILD);
#elif ECHILD >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECHILD, ECHILD);
#elif ECHILD >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECHILD, ECHILD);
#else
PRIVATE DEFINE_INT75(posix_ECHILD, ECHILD);
#endif
#endif /* ECHILD < 0 */
#else /* ECHILD */
#define POSIX_ECHILD_DEF /* nothing */
#endif /* !ECHILD */
#ifdef EAGAIN
#define POSIX_EAGAIN_DEF \
	{ "EAGAIN", (DeeObject *)&posix_EAGAIN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Try again" },
#if EAGAIN >= 0
#if EAGAIN == 0
#define posix_EAGAIN DeeInt_Zero
#elif EAGAIN == 1
#define posix_EAGAIN DeeInt_One
#elif EAGAIN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EAGAIN, EAGAIN);
#elif EAGAIN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EAGAIN, EAGAIN);
#elif EAGAIN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EAGAIN, EAGAIN);
#elif EAGAIN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EAGAIN, EAGAIN);
#else
PRIVATE DEFINE_UINT75(posix_EAGAIN, EAGAIN);
#endif
#else /* EAGAIN >= 0 */
#if EAGAIN == -1
#define posix_EAGAIN DeeInt_MinusOne
#elif EAGAIN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EAGAIN, EAGAIN);
#elif EAGAIN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EAGAIN, EAGAIN);
#elif EAGAIN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EAGAIN, EAGAIN);
#elif EAGAIN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EAGAIN, EAGAIN);
#else
PRIVATE DEFINE_INT75(posix_EAGAIN, EAGAIN);
#endif
#endif /* EAGAIN < 0 */
#else /* EAGAIN */
#define POSIX_EAGAIN_DEF /* nothing */
#endif /* !EAGAIN */
#ifdef ENOMEM
#define POSIX_ENOMEM_DEF \
	{ "ENOMEM", (DeeObject *)&posix_ENOMEM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Out of memory" },
#if ENOMEM >= 0
#if ENOMEM == 0
#define posix_ENOMEM DeeInt_Zero
#elif ENOMEM == 1
#define posix_ENOMEM DeeInt_One
#elif ENOMEM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOMEM, ENOMEM);
#elif ENOMEM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOMEM, ENOMEM);
#elif ENOMEM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOMEM, ENOMEM);
#elif ENOMEM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOMEM, ENOMEM);
#else
PRIVATE DEFINE_UINT75(posix_ENOMEM, ENOMEM);
#endif
#else /* ENOMEM >= 0 */
#if ENOMEM == -1
#define posix_ENOMEM DeeInt_MinusOne
#elif ENOMEM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOMEM, ENOMEM);
#elif ENOMEM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOMEM, ENOMEM);
#elif ENOMEM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOMEM, ENOMEM);
#elif ENOMEM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOMEM, ENOMEM);
#else
PRIVATE DEFINE_INT75(posix_ENOMEM, ENOMEM);
#endif
#endif /* ENOMEM < 0 */
#else /* ENOMEM */
#define POSIX_ENOMEM_DEF /* nothing */
#endif /* !ENOMEM */
#ifdef EACCES
#define POSIX_EACCES_DEF \
	{ "EACCES", (DeeObject *)&posix_EACCES, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Permission denied" },
#if EACCES >= 0
#if EACCES == 0
#define posix_EACCES DeeInt_Zero
#elif EACCES == 1
#define posix_EACCES DeeInt_One
#elif EACCES <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EACCES, EACCES);
#elif EACCES <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EACCES, EACCES);
#elif EACCES <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EACCES, EACCES);
#elif EACCES <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EACCES, EACCES);
#else
PRIVATE DEFINE_UINT75(posix_EACCES, EACCES);
#endif
#else /* EACCES >= 0 */
#if EACCES == -1
#define posix_EACCES DeeInt_MinusOne
#elif EACCES >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EACCES, EACCES);
#elif EACCES >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EACCES, EACCES);
#elif EACCES >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EACCES, EACCES);
#elif EACCES >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EACCES, EACCES);
#else
PRIVATE DEFINE_INT75(posix_EACCES, EACCES);
#endif
#endif /* EACCES < 0 */
#else /* EACCES */
#define POSIX_EACCES_DEF /* nothing */
#endif /* !EACCES */
#ifdef EFAULT
#define POSIX_EFAULT_DEF \
	{ "EFAULT", (DeeObject *)&posix_EFAULT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Bad address" },
#if EFAULT >= 0
#if EFAULT == 0
#define posix_EFAULT DeeInt_Zero
#elif EFAULT == 1
#define posix_EFAULT DeeInt_One
#elif EFAULT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EFAULT, EFAULT);
#elif EFAULT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EFAULT, EFAULT);
#elif EFAULT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EFAULT, EFAULT);
#elif EFAULT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EFAULT, EFAULT);
#else
PRIVATE DEFINE_UINT75(posix_EFAULT, EFAULT);
#endif
#else /* EFAULT >= 0 */
#if EFAULT == -1
#define posix_EFAULT DeeInt_MinusOne
#elif EFAULT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EFAULT, EFAULT);
#elif EFAULT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EFAULT, EFAULT);
#elif EFAULT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EFAULT, EFAULT);
#elif EFAULT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EFAULT, EFAULT);
#else
PRIVATE DEFINE_INT75(posix_EFAULT, EFAULT);
#endif
#endif /* EFAULT < 0 */
#else /* EFAULT */
#define POSIX_EFAULT_DEF /* nothing */
#endif /* !EFAULT */
#ifdef ENOTBLK
#define POSIX_ENOTBLK_DEF \
	{ "ENOTBLK", (DeeObject *)&posix_ENOTBLK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Block device required" },
#if ENOTBLK >= 0
#if ENOTBLK == 0
#define posix_ENOTBLK DeeInt_Zero
#elif ENOTBLK == 1
#define posix_ENOTBLK DeeInt_One
#elif ENOTBLK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTBLK, ENOTBLK);
#else
PRIVATE DEFINE_UINT75(posix_ENOTBLK, ENOTBLK);
#endif
#else /* ENOTBLK >= 0 */
#if ENOTBLK == -1
#define posix_ENOTBLK DeeInt_MinusOne
#elif ENOTBLK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTBLK, ENOTBLK);
#elif ENOTBLK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTBLK, ENOTBLK);
#else
PRIVATE DEFINE_INT75(posix_ENOTBLK, ENOTBLK);
#endif
#endif /* ENOTBLK < 0 */
#else /* ENOTBLK */
#define POSIX_ENOTBLK_DEF /* nothing */
#endif /* !ENOTBLK */
#ifdef EBUSY
#define POSIX_EBUSY_DEF \
	{ "EBUSY", (DeeObject *)&posix_EBUSY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Device or resource busy" },
#if EBUSY >= 0
#if EBUSY == 0
#define posix_EBUSY DeeInt_Zero
#elif EBUSY == 1
#define posix_EBUSY DeeInt_One
#elif EBUSY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBUSY, EBUSY);
#elif EBUSY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBUSY, EBUSY);
#elif EBUSY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBUSY, EBUSY);
#elif EBUSY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBUSY, EBUSY);
#else
PRIVATE DEFINE_UINT75(posix_EBUSY, EBUSY);
#endif
#else /* EBUSY >= 0 */
#if EBUSY == -1
#define posix_EBUSY DeeInt_MinusOne
#elif EBUSY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBUSY, EBUSY);
#elif EBUSY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBUSY, EBUSY);
#elif EBUSY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBUSY, EBUSY);
#elif EBUSY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBUSY, EBUSY);
#else
PRIVATE DEFINE_INT75(posix_EBUSY, EBUSY);
#endif
#endif /* EBUSY < 0 */
#else /* EBUSY */
#define POSIX_EBUSY_DEF /* nothing */
#endif /* !EBUSY */
#ifdef EEXIST
#define POSIX_EEXIST_DEF \
	{ "EEXIST", (DeeObject *)&posix_EEXIST, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "File exists" },
#if EEXIST >= 0
#if EEXIST == 0
#define posix_EEXIST DeeInt_Zero
#elif EEXIST == 1
#define posix_EEXIST DeeInt_One
#elif EEXIST <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EEXIST, EEXIST);
#elif EEXIST <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EEXIST, EEXIST);
#elif EEXIST <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EEXIST, EEXIST);
#elif EEXIST <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EEXIST, EEXIST);
#else
PRIVATE DEFINE_UINT75(posix_EEXIST, EEXIST);
#endif
#else /* EEXIST >= 0 */
#if EEXIST == -1
#define posix_EEXIST DeeInt_MinusOne
#elif EEXIST >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EEXIST, EEXIST);
#elif EEXIST >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EEXIST, EEXIST);
#elif EEXIST >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EEXIST, EEXIST);
#elif EEXIST >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EEXIST, EEXIST);
#else
PRIVATE DEFINE_INT75(posix_EEXIST, EEXIST);
#endif
#endif /* EEXIST < 0 */
#else /* EEXIST */
#define POSIX_EEXIST_DEF /* nothing */
#endif /* !EEXIST */
#ifdef EXDEV
#define POSIX_EXDEV_DEF \
	{ "EXDEV", (DeeObject *)&posix_EXDEV, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Cross-device link" },
#if EXDEV >= 0
#if EXDEV == 0
#define posix_EXDEV DeeInt_Zero
#elif EXDEV == 1
#define posix_EXDEV DeeInt_One
#elif EXDEV <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EXDEV, EXDEV);
#elif EXDEV <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EXDEV, EXDEV);
#elif EXDEV <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EXDEV, EXDEV);
#elif EXDEV <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EXDEV, EXDEV);
#else
PRIVATE DEFINE_UINT75(posix_EXDEV, EXDEV);
#endif
#else /* EXDEV >= 0 */
#if EXDEV == -1
#define posix_EXDEV DeeInt_MinusOne
#elif EXDEV >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EXDEV, EXDEV);
#elif EXDEV >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EXDEV, EXDEV);
#elif EXDEV >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EXDEV, EXDEV);
#elif EXDEV >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EXDEV, EXDEV);
#else
PRIVATE DEFINE_INT75(posix_EXDEV, EXDEV);
#endif
#endif /* EXDEV < 0 */
#else /* EXDEV */
#define POSIX_EXDEV_DEF /* nothing */
#endif /* !EXDEV */
#ifdef ENODEV
#define POSIX_ENODEV_DEF \
	{ "ENODEV", (DeeObject *)&posix_ENODEV, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No such device" },
#if ENODEV >= 0
#if ENODEV == 0
#define posix_ENODEV DeeInt_Zero
#elif ENODEV == 1
#define posix_ENODEV DeeInt_One
#elif ENODEV <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENODEV, ENODEV);
#elif ENODEV <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENODEV, ENODEV);
#elif ENODEV <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENODEV, ENODEV);
#elif ENODEV <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENODEV, ENODEV);
#else
PRIVATE DEFINE_UINT75(posix_ENODEV, ENODEV);
#endif
#else /* ENODEV >= 0 */
#if ENODEV == -1
#define posix_ENODEV DeeInt_MinusOne
#elif ENODEV >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENODEV, ENODEV);
#elif ENODEV >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENODEV, ENODEV);
#elif ENODEV >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENODEV, ENODEV);
#elif ENODEV >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENODEV, ENODEV);
#else
PRIVATE DEFINE_INT75(posix_ENODEV, ENODEV);
#endif
#endif /* ENODEV < 0 */
#else /* ENODEV */
#define POSIX_ENODEV_DEF /* nothing */
#endif /* !ENODEV */
#ifdef ENOTDIR
#define POSIX_ENOTDIR_DEF \
	{ "ENOTDIR", (DeeObject *)&posix_ENOTDIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Not a directory" },
#if ENOTDIR >= 0
#if ENOTDIR == 0
#define posix_ENOTDIR DeeInt_Zero
#elif ENOTDIR == 1
#define posix_ENOTDIR DeeInt_One
#elif ENOTDIR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTDIR, ENOTDIR);
#else
PRIVATE DEFINE_UINT75(posix_ENOTDIR, ENOTDIR);
#endif
#else /* ENOTDIR >= 0 */
#if ENOTDIR == -1
#define posix_ENOTDIR DeeInt_MinusOne
#elif ENOTDIR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTDIR, ENOTDIR);
#elif ENOTDIR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTDIR, ENOTDIR);
#else
PRIVATE DEFINE_INT75(posix_ENOTDIR, ENOTDIR);
#endif
#endif /* ENOTDIR < 0 */
#else /* ENOTDIR */
#define POSIX_ENOTDIR_DEF /* nothing */
#endif /* !ENOTDIR */
#ifdef EISDIR
#define POSIX_EISDIR_DEF \
	{ "EISDIR", (DeeObject *)&posix_EISDIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Is a directory" },
#if EISDIR >= 0
#if EISDIR == 0
#define posix_EISDIR DeeInt_Zero
#elif EISDIR == 1
#define posix_EISDIR DeeInt_One
#elif EISDIR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EISDIR, EISDIR);
#elif EISDIR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EISDIR, EISDIR);
#elif EISDIR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EISDIR, EISDIR);
#elif EISDIR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EISDIR, EISDIR);
#else
PRIVATE DEFINE_UINT75(posix_EISDIR, EISDIR);
#endif
#else /* EISDIR >= 0 */
#if EISDIR == -1
#define posix_EISDIR DeeInt_MinusOne
#elif EISDIR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EISDIR, EISDIR);
#elif EISDIR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EISDIR, EISDIR);
#elif EISDIR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EISDIR, EISDIR);
#elif EISDIR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EISDIR, EISDIR);
#else
PRIVATE DEFINE_INT75(posix_EISDIR, EISDIR);
#endif
#endif /* EISDIR < 0 */
#else /* EISDIR */
#define POSIX_EISDIR_DEF /* nothing */
#endif /* !EISDIR */
#ifdef EINVAL
#define POSIX_EINVAL_DEF \
	{ "EINVAL", (DeeObject *)&posix_EINVAL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Invalid argument" },
#if EINVAL >= 0
#if EINVAL == 0
#define posix_EINVAL DeeInt_Zero
#elif EINVAL == 1
#define posix_EINVAL DeeInt_One
#elif EINVAL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EINVAL, EINVAL);
#elif EINVAL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EINVAL, EINVAL);
#elif EINVAL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EINVAL, EINVAL);
#elif EINVAL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EINVAL, EINVAL);
#else
PRIVATE DEFINE_UINT75(posix_EINVAL, EINVAL);
#endif
#else /* EINVAL >= 0 */
#if EINVAL == -1
#define posix_EINVAL DeeInt_MinusOne
#elif EINVAL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EINVAL, EINVAL);
#elif EINVAL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EINVAL, EINVAL);
#elif EINVAL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EINVAL, EINVAL);
#elif EINVAL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EINVAL, EINVAL);
#else
PRIVATE DEFINE_INT75(posix_EINVAL, EINVAL);
#endif
#endif /* EINVAL < 0 */
#else /* EINVAL */
#define POSIX_EINVAL_DEF /* nothing */
#endif /* !EINVAL */
#ifdef ENFILE
#define POSIX_ENFILE_DEF \
	{ "ENFILE", (DeeObject *)&posix_ENFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "File table overflow" },
#if ENFILE >= 0
#if ENFILE == 0
#define posix_ENFILE DeeInt_Zero
#elif ENFILE == 1
#define posix_ENFILE DeeInt_One
#elif ENFILE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENFILE, ENFILE);
#elif ENFILE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENFILE, ENFILE);
#elif ENFILE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENFILE, ENFILE);
#elif ENFILE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENFILE, ENFILE);
#else
PRIVATE DEFINE_UINT75(posix_ENFILE, ENFILE);
#endif
#else /* ENFILE >= 0 */
#if ENFILE == -1
#define posix_ENFILE DeeInt_MinusOne
#elif ENFILE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENFILE, ENFILE);
#elif ENFILE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENFILE, ENFILE);
#elif ENFILE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENFILE, ENFILE);
#elif ENFILE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENFILE, ENFILE);
#else
PRIVATE DEFINE_INT75(posix_ENFILE, ENFILE);
#endif
#endif /* ENFILE < 0 */
#else /* ENFILE */
#define POSIX_ENFILE_DEF /* nothing */
#endif /* !ENFILE */
#ifdef EMFILE
#define POSIX_EMFILE_DEF \
	{ "EMFILE", (DeeObject *)&posix_EMFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Too many open files" },
#if EMFILE >= 0
#if EMFILE == 0
#define posix_EMFILE DeeInt_Zero
#elif EMFILE == 1
#define posix_EMFILE DeeInt_One
#elif EMFILE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EMFILE, EMFILE);
#elif EMFILE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EMFILE, EMFILE);
#elif EMFILE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EMFILE, EMFILE);
#elif EMFILE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EMFILE, EMFILE);
#else
PRIVATE DEFINE_UINT75(posix_EMFILE, EMFILE);
#endif
#else /* EMFILE >= 0 */
#if EMFILE == -1
#define posix_EMFILE DeeInt_MinusOne
#elif EMFILE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EMFILE, EMFILE);
#elif EMFILE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EMFILE, EMFILE);
#elif EMFILE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EMFILE, EMFILE);
#elif EMFILE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EMFILE, EMFILE);
#else
PRIVATE DEFINE_INT75(posix_EMFILE, EMFILE);
#endif
#endif /* EMFILE < 0 */
#else /* EMFILE */
#define POSIX_EMFILE_DEF /* nothing */
#endif /* !EMFILE */
#ifdef ENOTTY
#define POSIX_ENOTTY_DEF \
	{ "ENOTTY", (DeeObject *)&posix_ENOTTY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Not a typewriter" },
#if ENOTTY >= 0
#if ENOTTY == 0
#define posix_ENOTTY DeeInt_Zero
#elif ENOTTY == 1
#define posix_ENOTTY DeeInt_One
#elif ENOTTY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTTY, ENOTTY);
#elif ENOTTY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTTY, ENOTTY);
#elif ENOTTY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTTY, ENOTTY);
#elif ENOTTY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTTY, ENOTTY);
#else
PRIVATE DEFINE_UINT75(posix_ENOTTY, ENOTTY);
#endif
#else /* ENOTTY >= 0 */
#if ENOTTY == -1
#define posix_ENOTTY DeeInt_MinusOne
#elif ENOTTY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTTY, ENOTTY);
#elif ENOTTY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTTY, ENOTTY);
#elif ENOTTY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTTY, ENOTTY);
#elif ENOTTY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTTY, ENOTTY);
#else
PRIVATE DEFINE_INT75(posix_ENOTTY, ENOTTY);
#endif
#endif /* ENOTTY < 0 */
#else /* ENOTTY */
#define POSIX_ENOTTY_DEF /* nothing */
#endif /* !ENOTTY */
#ifdef ETXTBSY
#define POSIX_ETXTBSY_DEF \
	{ "ETXTBSY", (DeeObject *)&posix_ETXTBSY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Text file busy" },
#if ETXTBSY >= 0
#if ETXTBSY == 0
#define posix_ETXTBSY DeeInt_Zero
#elif ETXTBSY == 1
#define posix_ETXTBSY DeeInt_One
#elif ETXTBSY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ETXTBSY, ETXTBSY);
#else
PRIVATE DEFINE_UINT75(posix_ETXTBSY, ETXTBSY);
#endif
#else /* ETXTBSY >= 0 */
#if ETXTBSY == -1
#define posix_ETXTBSY DeeInt_MinusOne
#elif ETXTBSY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ETXTBSY, ETXTBSY);
#elif ETXTBSY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ETXTBSY, ETXTBSY);
#else
PRIVATE DEFINE_INT75(posix_ETXTBSY, ETXTBSY);
#endif
#endif /* ETXTBSY < 0 */
#else /* ETXTBSY */
#define POSIX_ETXTBSY_DEF /* nothing */
#endif /* !ETXTBSY */
#ifdef EFBIG
#define POSIX_EFBIG_DEF \
	{ "EFBIG", (DeeObject *)&posix_EFBIG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "File too large" },
#if EFBIG >= 0
#if EFBIG == 0
#define posix_EFBIG DeeInt_Zero
#elif EFBIG == 1
#define posix_EFBIG DeeInt_One
#elif EFBIG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EFBIG, EFBIG);
#elif EFBIG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EFBIG, EFBIG);
#elif EFBIG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EFBIG, EFBIG);
#elif EFBIG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EFBIG, EFBIG);
#else
PRIVATE DEFINE_UINT75(posix_EFBIG, EFBIG);
#endif
#else /* EFBIG >= 0 */
#if EFBIG == -1
#define posix_EFBIG DeeInt_MinusOne
#elif EFBIG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EFBIG, EFBIG);
#elif EFBIG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EFBIG, EFBIG);
#elif EFBIG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EFBIG, EFBIG);
#elif EFBIG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EFBIG, EFBIG);
#else
PRIVATE DEFINE_INT75(posix_EFBIG, EFBIG);
#endif
#endif /* EFBIG < 0 */
#else /* EFBIG */
#define POSIX_EFBIG_DEF /* nothing */
#endif /* !EFBIG */
#ifdef ENOSPC
#define POSIX_ENOSPC_DEF \
	{ "ENOSPC", (DeeObject *)&posix_ENOSPC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No space left on device" },
#if ENOSPC >= 0
#if ENOSPC == 0
#define posix_ENOSPC DeeInt_Zero
#elif ENOSPC == 1
#define posix_ENOSPC DeeInt_One
#elif ENOSPC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOSPC, ENOSPC);
#elif ENOSPC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOSPC, ENOSPC);
#elif ENOSPC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOSPC, ENOSPC);
#elif ENOSPC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOSPC, ENOSPC);
#else
PRIVATE DEFINE_UINT75(posix_ENOSPC, ENOSPC);
#endif
#else /* ENOSPC >= 0 */
#if ENOSPC == -1
#define posix_ENOSPC DeeInt_MinusOne
#elif ENOSPC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOSPC, ENOSPC);
#elif ENOSPC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOSPC, ENOSPC);
#elif ENOSPC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOSPC, ENOSPC);
#elif ENOSPC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOSPC, ENOSPC);
#else
PRIVATE DEFINE_INT75(posix_ENOSPC, ENOSPC);
#endif
#endif /* ENOSPC < 0 */
#else /* ENOSPC */
#define POSIX_ENOSPC_DEF /* nothing */
#endif /* !ENOSPC */
#ifdef ESPIPE
#define POSIX_ESPIPE_DEF \
	{ "ESPIPE", (DeeObject *)&posix_ESPIPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Illegal seek" },
#if ESPIPE >= 0
#if ESPIPE == 0
#define posix_ESPIPE DeeInt_Zero
#elif ESPIPE == 1
#define posix_ESPIPE DeeInt_One
#elif ESPIPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESPIPE, ESPIPE);
#elif ESPIPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESPIPE, ESPIPE);
#elif ESPIPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESPIPE, ESPIPE);
#elif ESPIPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESPIPE, ESPIPE);
#else
PRIVATE DEFINE_UINT75(posix_ESPIPE, ESPIPE);
#endif
#else /* ESPIPE >= 0 */
#if ESPIPE == -1
#define posix_ESPIPE DeeInt_MinusOne
#elif ESPIPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESPIPE, ESPIPE);
#elif ESPIPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESPIPE, ESPIPE);
#elif ESPIPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESPIPE, ESPIPE);
#elif ESPIPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESPIPE, ESPIPE);
#else
PRIVATE DEFINE_INT75(posix_ESPIPE, ESPIPE);
#endif
#endif /* ESPIPE < 0 */
#else /* ESPIPE */
#define POSIX_ESPIPE_DEF /* nothing */
#endif /* !ESPIPE */
#ifdef EROFS
#define POSIX_EROFS_DEF \
	{ "EROFS", (DeeObject *)&posix_EROFS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Read-only file system" },
#if EROFS >= 0
#if EROFS == 0
#define posix_EROFS DeeInt_Zero
#elif EROFS == 1
#define posix_EROFS DeeInt_One
#elif EROFS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EROFS, EROFS);
#elif EROFS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EROFS, EROFS);
#elif EROFS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EROFS, EROFS);
#elif EROFS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EROFS, EROFS);
#else
PRIVATE DEFINE_UINT75(posix_EROFS, EROFS);
#endif
#else /* EROFS >= 0 */
#if EROFS == -1
#define posix_EROFS DeeInt_MinusOne
#elif EROFS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EROFS, EROFS);
#elif EROFS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EROFS, EROFS);
#elif EROFS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EROFS, EROFS);
#elif EROFS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EROFS, EROFS);
#else
PRIVATE DEFINE_INT75(posix_EROFS, EROFS);
#endif
#endif /* EROFS < 0 */
#else /* EROFS */
#define POSIX_EROFS_DEF /* nothing */
#endif /* !EROFS */
#ifdef EMLINK
#define POSIX_EMLINK_DEF \
	{ "EMLINK", (DeeObject *)&posix_EMLINK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Too many links" },
#if EMLINK >= 0
#if EMLINK == 0
#define posix_EMLINK DeeInt_Zero
#elif EMLINK == 1
#define posix_EMLINK DeeInt_One
#elif EMLINK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EMLINK, EMLINK);
#elif EMLINK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EMLINK, EMLINK);
#elif EMLINK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EMLINK, EMLINK);
#elif EMLINK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EMLINK, EMLINK);
#else
PRIVATE DEFINE_UINT75(posix_EMLINK, EMLINK);
#endif
#else /* EMLINK >= 0 */
#if EMLINK == -1
#define posix_EMLINK DeeInt_MinusOne
#elif EMLINK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EMLINK, EMLINK);
#elif EMLINK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EMLINK, EMLINK);
#elif EMLINK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EMLINK, EMLINK);
#elif EMLINK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EMLINK, EMLINK);
#else
PRIVATE DEFINE_INT75(posix_EMLINK, EMLINK);
#endif
#endif /* EMLINK < 0 */
#else /* EMLINK */
#define POSIX_EMLINK_DEF /* nothing */
#endif /* !EMLINK */
#ifdef EPIPE
#define POSIX_EPIPE_DEF \
	{ "EPIPE", (DeeObject *)&posix_EPIPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Broken pipe" },
#if EPIPE >= 0
#if EPIPE == 0
#define posix_EPIPE DeeInt_Zero
#elif EPIPE == 1
#define posix_EPIPE DeeInt_One
#elif EPIPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPIPE, EPIPE);
#elif EPIPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPIPE, EPIPE);
#elif EPIPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPIPE, EPIPE);
#elif EPIPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPIPE, EPIPE);
#else
PRIVATE DEFINE_UINT75(posix_EPIPE, EPIPE);
#endif
#else /* EPIPE >= 0 */
#if EPIPE == -1
#define posix_EPIPE DeeInt_MinusOne
#elif EPIPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPIPE, EPIPE);
#elif EPIPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPIPE, EPIPE);
#elif EPIPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPIPE, EPIPE);
#elif EPIPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPIPE, EPIPE);
#else
PRIVATE DEFINE_INT75(posix_EPIPE, EPIPE);
#endif
#endif /* EPIPE < 0 */
#else /* EPIPE */
#define POSIX_EPIPE_DEF /* nothing */
#endif /* !EPIPE */
#ifdef EDOM
#define POSIX_EDOM_DEF \
	{ "EDOM", (DeeObject *)&posix_EDOM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Math argument out of domain of func" },
#if EDOM >= 0
#if EDOM == 0
#define posix_EDOM DeeInt_Zero
#elif EDOM == 1
#define posix_EDOM DeeInt_One
#elif EDOM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDOM, EDOM);
#elif EDOM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDOM, EDOM);
#elif EDOM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDOM, EDOM);
#elif EDOM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDOM, EDOM);
#else
PRIVATE DEFINE_UINT75(posix_EDOM, EDOM);
#endif
#else /* EDOM >= 0 */
#if EDOM == -1
#define posix_EDOM DeeInt_MinusOne
#elif EDOM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDOM, EDOM);
#elif EDOM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDOM, EDOM);
#elif EDOM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDOM, EDOM);
#elif EDOM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDOM, EDOM);
#else
PRIVATE DEFINE_INT75(posix_EDOM, EDOM);
#endif
#endif /* EDOM < 0 */
#else /* EDOM */
#define POSIX_EDOM_DEF /* nothing */
#endif /* !EDOM */
#ifdef ERANGE
#define POSIX_ERANGE_DEF \
	{ "ERANGE", (DeeObject *)&posix_ERANGE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Math result not representable" },
#if ERANGE >= 0
#if ERANGE == 0
#define posix_ERANGE DeeInt_Zero
#elif ERANGE == 1
#define posix_ERANGE DeeInt_One
#elif ERANGE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ERANGE, ERANGE);
#elif ERANGE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ERANGE, ERANGE);
#elif ERANGE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ERANGE, ERANGE);
#elif ERANGE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ERANGE, ERANGE);
#else
PRIVATE DEFINE_UINT75(posix_ERANGE, ERANGE);
#endif
#else /* ERANGE >= 0 */
#if ERANGE == -1
#define posix_ERANGE DeeInt_MinusOne
#elif ERANGE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ERANGE, ERANGE);
#elif ERANGE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ERANGE, ERANGE);
#elif ERANGE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ERANGE, ERANGE);
#elif ERANGE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ERANGE, ERANGE);
#else
PRIVATE DEFINE_INT75(posix_ERANGE, ERANGE);
#endif
#endif /* ERANGE < 0 */
#else /* ERANGE */
#define POSIX_ERANGE_DEF /* nothing */
#endif /* !ERANGE */
#ifdef EDEADLK
#define POSIX_EDEADLK_DEF \
	{ "EDEADLK", (DeeObject *)&posix_EDEADLK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Resource deadlock would occur" },
#if EDEADLK >= 0
#if EDEADLK == 0
#define posix_EDEADLK DeeInt_Zero
#elif EDEADLK == 1
#define posix_EDEADLK DeeInt_One
#elif EDEADLK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDEADLK, EDEADLK);
#elif EDEADLK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDEADLK, EDEADLK);
#elif EDEADLK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDEADLK, EDEADLK);
#elif EDEADLK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDEADLK, EDEADLK);
#else
PRIVATE DEFINE_UINT75(posix_EDEADLK, EDEADLK);
#endif
#else /* EDEADLK >= 0 */
#if EDEADLK == -1
#define posix_EDEADLK DeeInt_MinusOne
#elif EDEADLK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDEADLK, EDEADLK);
#elif EDEADLK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDEADLK, EDEADLK);
#elif EDEADLK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDEADLK, EDEADLK);
#elif EDEADLK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDEADLK, EDEADLK);
#else
PRIVATE DEFINE_INT75(posix_EDEADLK, EDEADLK);
#endif
#endif /* EDEADLK < 0 */
#else /* EDEADLK */
#define POSIX_EDEADLK_DEF /* nothing */
#endif /* !EDEADLK */
#ifdef ENAMETOOLONG
#define POSIX_ENAMETOOLONG_DEF \
	{ "ENAMETOOLONG", (DeeObject *)&posix_ENAMETOOLONG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "File name too long" },
#if ENAMETOOLONG >= 0
#if ENAMETOOLONG == 0
#define posix_ENAMETOOLONG DeeInt_Zero
#elif ENAMETOOLONG == 1
#define posix_ENAMETOOLONG DeeInt_One
#elif ENAMETOOLONG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENAMETOOLONG, ENAMETOOLONG);
#else
PRIVATE DEFINE_UINT75(posix_ENAMETOOLONG, ENAMETOOLONG);
#endif
#else /* ENAMETOOLONG >= 0 */
#if ENAMETOOLONG == -1
#define posix_ENAMETOOLONG DeeInt_MinusOne
#elif ENAMETOOLONG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENAMETOOLONG, ENAMETOOLONG);
#elif ENAMETOOLONG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENAMETOOLONG, ENAMETOOLONG);
#else
PRIVATE DEFINE_INT75(posix_ENAMETOOLONG, ENAMETOOLONG);
#endif
#endif /* ENAMETOOLONG < 0 */
#else /* ENAMETOOLONG */
#define POSIX_ENAMETOOLONG_DEF /* nothing */
#endif /* !ENAMETOOLONG */
#ifdef ENOLCK
#define POSIX_ENOLCK_DEF \
	{ "ENOLCK", (DeeObject *)&posix_ENOLCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No record locks available" },
#if ENOLCK >= 0
#if ENOLCK == 0
#define posix_ENOLCK DeeInt_Zero
#elif ENOLCK == 1
#define posix_ENOLCK DeeInt_One
#elif ENOLCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOLCK, ENOLCK);
#elif ENOLCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOLCK, ENOLCK);
#elif ENOLCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOLCK, ENOLCK);
#elif ENOLCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOLCK, ENOLCK);
#else
PRIVATE DEFINE_UINT75(posix_ENOLCK, ENOLCK);
#endif
#else /* ENOLCK >= 0 */
#if ENOLCK == -1
#define posix_ENOLCK DeeInt_MinusOne
#elif ENOLCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOLCK, ENOLCK);
#elif ENOLCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOLCK, ENOLCK);
#elif ENOLCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOLCK, ENOLCK);
#elif ENOLCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOLCK, ENOLCK);
#else
PRIVATE DEFINE_INT75(posix_ENOLCK, ENOLCK);
#endif
#endif /* ENOLCK < 0 */
#else /* ENOLCK */
#define POSIX_ENOLCK_DEF /* nothing */
#endif /* !ENOLCK */
#ifdef ENOSYS
#define POSIX_ENOSYS_DEF \
	{ "ENOSYS", (DeeObject *)&posix_ENOSYS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Function not implemented" },
#if ENOSYS >= 0
#if ENOSYS == 0
#define posix_ENOSYS DeeInt_Zero
#elif ENOSYS == 1
#define posix_ENOSYS DeeInt_One
#elif ENOSYS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOSYS, ENOSYS);
#elif ENOSYS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOSYS, ENOSYS);
#elif ENOSYS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOSYS, ENOSYS);
#elif ENOSYS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOSYS, ENOSYS);
#else
PRIVATE DEFINE_UINT75(posix_ENOSYS, ENOSYS);
#endif
#else /* ENOSYS >= 0 */
#if ENOSYS == -1
#define posix_ENOSYS DeeInt_MinusOne
#elif ENOSYS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOSYS, ENOSYS);
#elif ENOSYS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOSYS, ENOSYS);
#elif ENOSYS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOSYS, ENOSYS);
#elif ENOSYS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOSYS, ENOSYS);
#else
PRIVATE DEFINE_INT75(posix_ENOSYS, ENOSYS);
#endif
#endif /* ENOSYS < 0 */
#else /* ENOSYS */
#define POSIX_ENOSYS_DEF /* nothing */
#endif /* !ENOSYS */
#ifdef ENOTEMPTY
#define POSIX_ENOTEMPTY_DEF \
	{ "ENOTEMPTY", (DeeObject *)&posix_ENOTEMPTY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Directory not empty" },
#if ENOTEMPTY >= 0
#if ENOTEMPTY == 0
#define posix_ENOTEMPTY DeeInt_Zero
#elif ENOTEMPTY == 1
#define posix_ENOTEMPTY DeeInt_One
#elif ENOTEMPTY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTEMPTY, ENOTEMPTY);
#else
PRIVATE DEFINE_UINT75(posix_ENOTEMPTY, ENOTEMPTY);
#endif
#else /* ENOTEMPTY >= 0 */
#if ENOTEMPTY == -1
#define posix_ENOTEMPTY DeeInt_MinusOne
#elif ENOTEMPTY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTEMPTY, ENOTEMPTY);
#elif ENOTEMPTY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTEMPTY, ENOTEMPTY);
#else
PRIVATE DEFINE_INT75(posix_ENOTEMPTY, ENOTEMPTY);
#endif
#endif /* ENOTEMPTY < 0 */
#else /* ENOTEMPTY */
#define POSIX_ENOTEMPTY_DEF /* nothing */
#endif /* !ENOTEMPTY */
#ifdef ELOOP
#define POSIX_ELOOP_DEF \
	{ "ELOOP", (DeeObject *)&posix_ELOOP, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Too many symbolic links encountered" },
#if ELOOP >= 0
#if ELOOP == 0
#define posix_ELOOP DeeInt_Zero
#elif ELOOP == 1
#define posix_ELOOP DeeInt_One
#elif ELOOP <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELOOP, ELOOP);
#elif ELOOP <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELOOP, ELOOP);
#elif ELOOP <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELOOP, ELOOP);
#elif ELOOP <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELOOP, ELOOP);
#else
PRIVATE DEFINE_UINT75(posix_ELOOP, ELOOP);
#endif
#else /* ELOOP >= 0 */
#if ELOOP == -1
#define posix_ELOOP DeeInt_MinusOne
#elif ELOOP >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELOOP, ELOOP);
#elif ELOOP >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELOOP, ELOOP);
#elif ELOOP >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELOOP, ELOOP);
#elif ELOOP >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELOOP, ELOOP);
#else
PRIVATE DEFINE_INT75(posix_ELOOP, ELOOP);
#endif
#endif /* ELOOP < 0 */
#else /* ELOOP */
#define POSIX_ELOOP_DEF /* nothing */
#endif /* !ELOOP */
#ifdef EWOULDBLOCK
#define POSIX_EWOULDBLOCK_DEF \
	{ "EWOULDBLOCK", (DeeObject *)&posix_EWOULDBLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation would block" },
#if EWOULDBLOCK >= 0
#if EWOULDBLOCK == 0
#define posix_EWOULDBLOCK DeeInt_Zero
#elif EWOULDBLOCK == 1
#define posix_EWOULDBLOCK DeeInt_One
#elif EWOULDBLOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EWOULDBLOCK, EWOULDBLOCK);
#else
PRIVATE DEFINE_UINT75(posix_EWOULDBLOCK, EWOULDBLOCK);
#endif
#else /* EWOULDBLOCK >= 0 */
#if EWOULDBLOCK == -1
#define posix_EWOULDBLOCK DeeInt_MinusOne
#elif EWOULDBLOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EWOULDBLOCK, EWOULDBLOCK);
#elif EWOULDBLOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EWOULDBLOCK, EWOULDBLOCK);
#else
PRIVATE DEFINE_INT75(posix_EWOULDBLOCK, EWOULDBLOCK);
#endif
#endif /* EWOULDBLOCK < 0 */
#else /* EWOULDBLOCK */
#define POSIX_EWOULDBLOCK_DEF /* nothing */
#endif /* !EWOULDBLOCK */
#ifdef ENOMSG
#define POSIX_ENOMSG_DEF \
	{ "ENOMSG", (DeeObject *)&posix_ENOMSG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No message of desired type" },
#if ENOMSG >= 0
#if ENOMSG == 0
#define posix_ENOMSG DeeInt_Zero
#elif ENOMSG == 1
#define posix_ENOMSG DeeInt_One
#elif ENOMSG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOMSG, ENOMSG);
#elif ENOMSG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOMSG, ENOMSG);
#elif ENOMSG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOMSG, ENOMSG);
#elif ENOMSG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOMSG, ENOMSG);
#else
PRIVATE DEFINE_UINT75(posix_ENOMSG, ENOMSG);
#endif
#else /* ENOMSG >= 0 */
#if ENOMSG == -1
#define posix_ENOMSG DeeInt_MinusOne
#elif ENOMSG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOMSG, ENOMSG);
#elif ENOMSG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOMSG, ENOMSG);
#elif ENOMSG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOMSG, ENOMSG);
#elif ENOMSG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOMSG, ENOMSG);
#else
PRIVATE DEFINE_INT75(posix_ENOMSG, ENOMSG);
#endif
#endif /* ENOMSG < 0 */
#else /* ENOMSG */
#define POSIX_ENOMSG_DEF /* nothing */
#endif /* !ENOMSG */
#ifdef EIDRM
#define POSIX_EIDRM_DEF \
	{ "EIDRM", (DeeObject *)&posix_EIDRM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Identifier removed" },
#if EIDRM >= 0
#if EIDRM == 0
#define posix_EIDRM DeeInt_Zero
#elif EIDRM == 1
#define posix_EIDRM DeeInt_One
#elif EIDRM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EIDRM, EIDRM);
#elif EIDRM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EIDRM, EIDRM);
#elif EIDRM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EIDRM, EIDRM);
#elif EIDRM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EIDRM, EIDRM);
#else
PRIVATE DEFINE_UINT75(posix_EIDRM, EIDRM);
#endif
#else /* EIDRM >= 0 */
#if EIDRM == -1
#define posix_EIDRM DeeInt_MinusOne
#elif EIDRM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EIDRM, EIDRM);
#elif EIDRM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EIDRM, EIDRM);
#elif EIDRM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EIDRM, EIDRM);
#elif EIDRM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EIDRM, EIDRM);
#else
PRIVATE DEFINE_INT75(posix_EIDRM, EIDRM);
#endif
#endif /* EIDRM < 0 */
#else /* EIDRM */
#define POSIX_EIDRM_DEF /* nothing */
#endif /* !EIDRM */
#ifdef ECHRNG
#define POSIX_ECHRNG_DEF \
	{ "ECHRNG", (DeeObject *)&posix_ECHRNG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Channel number out of range" },
#if ECHRNG >= 0
#if ECHRNG == 0
#define posix_ECHRNG DeeInt_Zero
#elif ECHRNG == 1
#define posix_ECHRNG DeeInt_One
#elif ECHRNG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECHRNG, ECHRNG);
#elif ECHRNG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECHRNG, ECHRNG);
#elif ECHRNG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECHRNG, ECHRNG);
#elif ECHRNG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECHRNG, ECHRNG);
#else
PRIVATE DEFINE_UINT75(posix_ECHRNG, ECHRNG);
#endif
#else /* ECHRNG >= 0 */
#if ECHRNG == -1
#define posix_ECHRNG DeeInt_MinusOne
#elif ECHRNG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECHRNG, ECHRNG);
#elif ECHRNG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECHRNG, ECHRNG);
#elif ECHRNG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECHRNG, ECHRNG);
#elif ECHRNG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECHRNG, ECHRNG);
#else
PRIVATE DEFINE_INT75(posix_ECHRNG, ECHRNG);
#endif
#endif /* ECHRNG < 0 */
#else /* ECHRNG */
#define POSIX_ECHRNG_DEF /* nothing */
#endif /* !ECHRNG */
#ifdef EL2NSYNC
#define POSIX_EL2NSYNC_DEF \
	{ "EL2NSYNC", (DeeObject *)&posix_EL2NSYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Level 2 not synchronized" },
#if EL2NSYNC >= 0
#if EL2NSYNC == 0
#define posix_EL2NSYNC DeeInt_Zero
#elif EL2NSYNC == 1
#define posix_EL2NSYNC DeeInt_One
#elif EL2NSYNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EL2NSYNC, EL2NSYNC);
#else
PRIVATE DEFINE_UINT75(posix_EL2NSYNC, EL2NSYNC);
#endif
#else /* EL2NSYNC >= 0 */
#if EL2NSYNC == -1
#define posix_EL2NSYNC DeeInt_MinusOne
#elif EL2NSYNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EL2NSYNC, EL2NSYNC);
#elif EL2NSYNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EL2NSYNC, EL2NSYNC);
#else
PRIVATE DEFINE_INT75(posix_EL2NSYNC, EL2NSYNC);
#endif
#endif /* EL2NSYNC < 0 */
#else /* EL2NSYNC */
#define POSIX_EL2NSYNC_DEF /* nothing */
#endif /* !EL2NSYNC */
#ifdef EL3HLT
#define POSIX_EL3HLT_DEF \
	{ "EL3HLT", (DeeObject *)&posix_EL3HLT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Level 3 halted" },
#if EL3HLT >= 0
#if EL3HLT == 0
#define posix_EL3HLT DeeInt_Zero
#elif EL3HLT == 1
#define posix_EL3HLT DeeInt_One
#elif EL3HLT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EL3HLT, EL3HLT);
#elif EL3HLT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EL3HLT, EL3HLT);
#elif EL3HLT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EL3HLT, EL3HLT);
#elif EL3HLT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EL3HLT, EL3HLT);
#else
PRIVATE DEFINE_UINT75(posix_EL3HLT, EL3HLT);
#endif
#else /* EL3HLT >= 0 */
#if EL3HLT == -1
#define posix_EL3HLT DeeInt_MinusOne
#elif EL3HLT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EL3HLT, EL3HLT);
#elif EL3HLT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EL3HLT, EL3HLT);
#elif EL3HLT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EL3HLT, EL3HLT);
#elif EL3HLT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EL3HLT, EL3HLT);
#else
PRIVATE DEFINE_INT75(posix_EL3HLT, EL3HLT);
#endif
#endif /* EL3HLT < 0 */
#else /* EL3HLT */
#define POSIX_EL3HLT_DEF /* nothing */
#endif /* !EL3HLT */
#ifdef EL3RST
#define POSIX_EL3RST_DEF \
	{ "EL3RST", (DeeObject *)&posix_EL3RST, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Level 3 reset" },
#if EL3RST >= 0
#if EL3RST == 0
#define posix_EL3RST DeeInt_Zero
#elif EL3RST == 1
#define posix_EL3RST DeeInt_One
#elif EL3RST <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EL3RST, EL3RST);
#elif EL3RST <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EL3RST, EL3RST);
#elif EL3RST <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EL3RST, EL3RST);
#elif EL3RST <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EL3RST, EL3RST);
#else
PRIVATE DEFINE_UINT75(posix_EL3RST, EL3RST);
#endif
#else /* EL3RST >= 0 */
#if EL3RST == -1
#define posix_EL3RST DeeInt_MinusOne
#elif EL3RST >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EL3RST, EL3RST);
#elif EL3RST >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EL3RST, EL3RST);
#elif EL3RST >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EL3RST, EL3RST);
#elif EL3RST >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EL3RST, EL3RST);
#else
PRIVATE DEFINE_INT75(posix_EL3RST, EL3RST);
#endif
#endif /* EL3RST < 0 */
#else /* EL3RST */
#define POSIX_EL3RST_DEF /* nothing */
#endif /* !EL3RST */
#ifdef ELNRNG
#define POSIX_ELNRNG_DEF \
	{ "ELNRNG", (DeeObject *)&posix_ELNRNG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Link number out of range" },
#if ELNRNG >= 0
#if ELNRNG == 0
#define posix_ELNRNG DeeInt_Zero
#elif ELNRNG == 1
#define posix_ELNRNG DeeInt_One
#elif ELNRNG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELNRNG, ELNRNG);
#elif ELNRNG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELNRNG, ELNRNG);
#elif ELNRNG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELNRNG, ELNRNG);
#elif ELNRNG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELNRNG, ELNRNG);
#else
PRIVATE DEFINE_UINT75(posix_ELNRNG, ELNRNG);
#endif
#else /* ELNRNG >= 0 */
#if ELNRNG == -1
#define posix_ELNRNG DeeInt_MinusOne
#elif ELNRNG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELNRNG, ELNRNG);
#elif ELNRNG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELNRNG, ELNRNG);
#elif ELNRNG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELNRNG, ELNRNG);
#elif ELNRNG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELNRNG, ELNRNG);
#else
PRIVATE DEFINE_INT75(posix_ELNRNG, ELNRNG);
#endif
#endif /* ELNRNG < 0 */
#else /* ELNRNG */
#define POSIX_ELNRNG_DEF /* nothing */
#endif /* !ELNRNG */
#ifdef EUNATCH
#define POSIX_EUNATCH_DEF \
	{ "EUNATCH", (DeeObject *)&posix_EUNATCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol driver not attached" },
#if EUNATCH >= 0
#if EUNATCH == 0
#define posix_EUNATCH DeeInt_Zero
#elif EUNATCH == 1
#define posix_EUNATCH DeeInt_One
#elif EUNATCH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EUNATCH, EUNATCH);
#elif EUNATCH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EUNATCH, EUNATCH);
#elif EUNATCH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EUNATCH, EUNATCH);
#elif EUNATCH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EUNATCH, EUNATCH);
#else
PRIVATE DEFINE_UINT75(posix_EUNATCH, EUNATCH);
#endif
#else /* EUNATCH >= 0 */
#if EUNATCH == -1
#define posix_EUNATCH DeeInt_MinusOne
#elif EUNATCH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EUNATCH, EUNATCH);
#elif EUNATCH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EUNATCH, EUNATCH);
#elif EUNATCH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EUNATCH, EUNATCH);
#elif EUNATCH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EUNATCH, EUNATCH);
#else
PRIVATE DEFINE_INT75(posix_EUNATCH, EUNATCH);
#endif
#endif /* EUNATCH < 0 */
#else /* EUNATCH */
#define POSIX_EUNATCH_DEF /* nothing */
#endif /* !EUNATCH */
#ifdef ENOCSI
#define POSIX_ENOCSI_DEF \
	{ "ENOCSI", (DeeObject *)&posix_ENOCSI, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No CSI structure available" },
#if ENOCSI >= 0
#if ENOCSI == 0
#define posix_ENOCSI DeeInt_Zero
#elif ENOCSI == 1
#define posix_ENOCSI DeeInt_One
#elif ENOCSI <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOCSI, ENOCSI);
#elif ENOCSI <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOCSI, ENOCSI);
#elif ENOCSI <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOCSI, ENOCSI);
#elif ENOCSI <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOCSI, ENOCSI);
#else
PRIVATE DEFINE_UINT75(posix_ENOCSI, ENOCSI);
#endif
#else /* ENOCSI >= 0 */
#if ENOCSI == -1
#define posix_ENOCSI DeeInt_MinusOne
#elif ENOCSI >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOCSI, ENOCSI);
#elif ENOCSI >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOCSI, ENOCSI);
#elif ENOCSI >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOCSI, ENOCSI);
#elif ENOCSI >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOCSI, ENOCSI);
#else
PRIVATE DEFINE_INT75(posix_ENOCSI, ENOCSI);
#endif
#endif /* ENOCSI < 0 */
#else /* ENOCSI */
#define POSIX_ENOCSI_DEF /* nothing */
#endif /* !ENOCSI */
#ifdef EL2HLT
#define POSIX_EL2HLT_DEF \
	{ "EL2HLT", (DeeObject *)&posix_EL2HLT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Level 2 halted" },
#if EL2HLT >= 0
#if EL2HLT == 0
#define posix_EL2HLT DeeInt_Zero
#elif EL2HLT == 1
#define posix_EL2HLT DeeInt_One
#elif EL2HLT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EL2HLT, EL2HLT);
#elif EL2HLT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EL2HLT, EL2HLT);
#elif EL2HLT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EL2HLT, EL2HLT);
#elif EL2HLT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EL2HLT, EL2HLT);
#else
PRIVATE DEFINE_UINT75(posix_EL2HLT, EL2HLT);
#endif
#else /* EL2HLT >= 0 */
#if EL2HLT == -1
#define posix_EL2HLT DeeInt_MinusOne
#elif EL2HLT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EL2HLT, EL2HLT);
#elif EL2HLT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EL2HLT, EL2HLT);
#elif EL2HLT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EL2HLT, EL2HLT);
#elif EL2HLT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EL2HLT, EL2HLT);
#else
PRIVATE DEFINE_INT75(posix_EL2HLT, EL2HLT);
#endif
#endif /* EL2HLT < 0 */
#else /* EL2HLT */
#define POSIX_EL2HLT_DEF /* nothing */
#endif /* !EL2HLT */
#ifdef EBADE
#define POSIX_EBADE_DEF \
	{ "EBADE", (DeeObject *)&posix_EBADE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Invalid exchange" },
#if EBADE >= 0
#if EBADE == 0
#define posix_EBADE DeeInt_Zero
#elif EBADE == 1
#define posix_EBADE DeeInt_One
#elif EBADE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADE, EBADE);
#elif EBADE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADE, EBADE);
#elif EBADE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADE, EBADE);
#elif EBADE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADE, EBADE);
#else
PRIVATE DEFINE_UINT75(posix_EBADE, EBADE);
#endif
#else /* EBADE >= 0 */
#if EBADE == -1
#define posix_EBADE DeeInt_MinusOne
#elif EBADE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADE, EBADE);
#elif EBADE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADE, EBADE);
#elif EBADE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADE, EBADE);
#elif EBADE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADE, EBADE);
#else
PRIVATE DEFINE_INT75(posix_EBADE, EBADE);
#endif
#endif /* EBADE < 0 */
#else /* EBADE */
#define POSIX_EBADE_DEF /* nothing */
#endif /* !EBADE */
#ifdef EBADR
#define POSIX_EBADR_DEF \
	{ "EBADR", (DeeObject *)&posix_EBADR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Invalid request descriptor" },
#if EBADR >= 0
#if EBADR == 0
#define posix_EBADR DeeInt_Zero
#elif EBADR == 1
#define posix_EBADR DeeInt_One
#elif EBADR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADR, EBADR);
#elif EBADR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADR, EBADR);
#elif EBADR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADR, EBADR);
#elif EBADR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADR, EBADR);
#else
PRIVATE DEFINE_UINT75(posix_EBADR, EBADR);
#endif
#else /* EBADR >= 0 */
#if EBADR == -1
#define posix_EBADR DeeInt_MinusOne
#elif EBADR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADR, EBADR);
#elif EBADR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADR, EBADR);
#elif EBADR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADR, EBADR);
#elif EBADR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADR, EBADR);
#else
PRIVATE DEFINE_INT75(posix_EBADR, EBADR);
#endif
#endif /* EBADR < 0 */
#else /* EBADR */
#define POSIX_EBADR_DEF /* nothing */
#endif /* !EBADR */
#ifdef EXFULL
#define POSIX_EXFULL_DEF \
	{ "EXFULL", (DeeObject *)&posix_EXFULL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Exchange full" },
#if EXFULL >= 0
#if EXFULL == 0
#define posix_EXFULL DeeInt_Zero
#elif EXFULL == 1
#define posix_EXFULL DeeInt_One
#elif EXFULL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EXFULL, EXFULL);
#elif EXFULL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EXFULL, EXFULL);
#elif EXFULL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EXFULL, EXFULL);
#elif EXFULL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EXFULL, EXFULL);
#else
PRIVATE DEFINE_UINT75(posix_EXFULL, EXFULL);
#endif
#else /* EXFULL >= 0 */
#if EXFULL == -1
#define posix_EXFULL DeeInt_MinusOne
#elif EXFULL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EXFULL, EXFULL);
#elif EXFULL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EXFULL, EXFULL);
#elif EXFULL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EXFULL, EXFULL);
#elif EXFULL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EXFULL, EXFULL);
#else
PRIVATE DEFINE_INT75(posix_EXFULL, EXFULL);
#endif
#endif /* EXFULL < 0 */
#else /* EXFULL */
#define POSIX_EXFULL_DEF /* nothing */
#endif /* !EXFULL */
#ifdef ENOANO
#define POSIX_ENOANO_DEF \
	{ "ENOANO", (DeeObject *)&posix_ENOANO, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No anode" },
#if ENOANO >= 0
#if ENOANO == 0
#define posix_ENOANO DeeInt_Zero
#elif ENOANO == 1
#define posix_ENOANO DeeInt_One
#elif ENOANO <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOANO, ENOANO);
#elif ENOANO <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOANO, ENOANO);
#elif ENOANO <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOANO, ENOANO);
#elif ENOANO <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOANO, ENOANO);
#else
PRIVATE DEFINE_UINT75(posix_ENOANO, ENOANO);
#endif
#else /* ENOANO >= 0 */
#if ENOANO == -1
#define posix_ENOANO DeeInt_MinusOne
#elif ENOANO >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOANO, ENOANO);
#elif ENOANO >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOANO, ENOANO);
#elif ENOANO >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOANO, ENOANO);
#elif ENOANO >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOANO, ENOANO);
#else
PRIVATE DEFINE_INT75(posix_ENOANO, ENOANO);
#endif
#endif /* ENOANO < 0 */
#else /* ENOANO */
#define POSIX_ENOANO_DEF /* nothing */
#endif /* !ENOANO */
#ifdef EBADRQC
#define POSIX_EBADRQC_DEF \
	{ "EBADRQC", (DeeObject *)&posix_EBADRQC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Invalid request code" },
#if EBADRQC >= 0
#if EBADRQC == 0
#define posix_EBADRQC DeeInt_Zero
#elif EBADRQC == 1
#define posix_EBADRQC DeeInt_One
#elif EBADRQC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADRQC, EBADRQC);
#elif EBADRQC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADRQC, EBADRQC);
#elif EBADRQC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADRQC, EBADRQC);
#elif EBADRQC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADRQC, EBADRQC);
#else
PRIVATE DEFINE_UINT75(posix_EBADRQC, EBADRQC);
#endif
#else /* EBADRQC >= 0 */
#if EBADRQC == -1
#define posix_EBADRQC DeeInt_MinusOne
#elif EBADRQC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADRQC, EBADRQC);
#elif EBADRQC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADRQC, EBADRQC);
#elif EBADRQC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADRQC, EBADRQC);
#elif EBADRQC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADRQC, EBADRQC);
#else
PRIVATE DEFINE_INT75(posix_EBADRQC, EBADRQC);
#endif
#endif /* EBADRQC < 0 */
#else /* EBADRQC */
#define POSIX_EBADRQC_DEF /* nothing */
#endif /* !EBADRQC */
#ifdef EBADSLT
#define POSIX_EBADSLT_DEF \
	{ "EBADSLT", (DeeObject *)&posix_EBADSLT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Invalid slot" },
#if EBADSLT >= 0
#if EBADSLT == 0
#define posix_EBADSLT DeeInt_Zero
#elif EBADSLT == 1
#define posix_EBADSLT DeeInt_One
#elif EBADSLT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADSLT, EBADSLT);
#elif EBADSLT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADSLT, EBADSLT);
#elif EBADSLT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADSLT, EBADSLT);
#elif EBADSLT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADSLT, EBADSLT);
#else
PRIVATE DEFINE_UINT75(posix_EBADSLT, EBADSLT);
#endif
#else /* EBADSLT >= 0 */
#if EBADSLT == -1
#define posix_EBADSLT DeeInt_MinusOne
#elif EBADSLT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADSLT, EBADSLT);
#elif EBADSLT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADSLT, EBADSLT);
#elif EBADSLT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADSLT, EBADSLT);
#elif EBADSLT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADSLT, EBADSLT);
#else
PRIVATE DEFINE_INT75(posix_EBADSLT, EBADSLT);
#endif
#endif /* EBADSLT < 0 */
#else /* EBADSLT */
#define POSIX_EBADSLT_DEF /* nothing */
#endif /* !EBADSLT */
#ifdef EDEADLOCK
#define POSIX_EDEADLOCK_DEF \
	{ "EDEADLOCK", (DeeObject *)&posix_EDEADLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Resource deadlock would occur" },
#if EDEADLOCK >= 0
#if EDEADLOCK == 0
#define posix_EDEADLOCK DeeInt_Zero
#elif EDEADLOCK == 1
#define posix_EDEADLOCK DeeInt_One
#elif EDEADLOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDEADLOCK, EDEADLOCK);
#else
PRIVATE DEFINE_UINT75(posix_EDEADLOCK, EDEADLOCK);
#endif
#else /* EDEADLOCK >= 0 */
#if EDEADLOCK == -1
#define posix_EDEADLOCK DeeInt_MinusOne
#elif EDEADLOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDEADLOCK, EDEADLOCK);
#elif EDEADLOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDEADLOCK, EDEADLOCK);
#else
PRIVATE DEFINE_INT75(posix_EDEADLOCK, EDEADLOCK);
#endif
#endif /* EDEADLOCK < 0 */
#else /* EDEADLOCK */
#define POSIX_EDEADLOCK_DEF /* nothing */
#endif /* !EDEADLOCK */
#ifdef EBFONT
#define POSIX_EBFONT_DEF \
	{ "EBFONT", (DeeObject *)&posix_EBFONT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Bad font file format" },
#if EBFONT >= 0
#if EBFONT == 0
#define posix_EBFONT DeeInt_Zero
#elif EBFONT == 1
#define posix_EBFONT DeeInt_One
#elif EBFONT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBFONT, EBFONT);
#elif EBFONT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBFONT, EBFONT);
#elif EBFONT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBFONT, EBFONT);
#elif EBFONT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBFONT, EBFONT);
#else
PRIVATE DEFINE_UINT75(posix_EBFONT, EBFONT);
#endif
#else /* EBFONT >= 0 */
#if EBFONT == -1
#define posix_EBFONT DeeInt_MinusOne
#elif EBFONT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBFONT, EBFONT);
#elif EBFONT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBFONT, EBFONT);
#elif EBFONT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBFONT, EBFONT);
#elif EBFONT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBFONT, EBFONT);
#else
PRIVATE DEFINE_INT75(posix_EBFONT, EBFONT);
#endif
#endif /* EBFONT < 0 */
#else /* EBFONT */
#define POSIX_EBFONT_DEF /* nothing */
#endif /* !EBFONT */
#ifdef ENOSTR
#define POSIX_ENOSTR_DEF \
	{ "ENOSTR", (DeeObject *)&posix_ENOSTR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Device not a stream" },
#if ENOSTR >= 0
#if ENOSTR == 0
#define posix_ENOSTR DeeInt_Zero
#elif ENOSTR == 1
#define posix_ENOSTR DeeInt_One
#elif ENOSTR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOSTR, ENOSTR);
#elif ENOSTR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOSTR, ENOSTR);
#elif ENOSTR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOSTR, ENOSTR);
#elif ENOSTR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOSTR, ENOSTR);
#else
PRIVATE DEFINE_UINT75(posix_ENOSTR, ENOSTR);
#endif
#else /* ENOSTR >= 0 */
#if ENOSTR == -1
#define posix_ENOSTR DeeInt_MinusOne
#elif ENOSTR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOSTR, ENOSTR);
#elif ENOSTR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOSTR, ENOSTR);
#elif ENOSTR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOSTR, ENOSTR);
#elif ENOSTR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOSTR, ENOSTR);
#else
PRIVATE DEFINE_INT75(posix_ENOSTR, ENOSTR);
#endif
#endif /* ENOSTR < 0 */
#else /* ENOSTR */
#define POSIX_ENOSTR_DEF /* nothing */
#endif /* !ENOSTR */
#ifdef ENODATA
#define POSIX_ENODATA_DEF \
	{ "ENODATA", (DeeObject *)&posix_ENODATA, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No data available" },
#if ENODATA >= 0
#if ENODATA == 0
#define posix_ENODATA DeeInt_Zero
#elif ENODATA == 1
#define posix_ENODATA DeeInt_One
#elif ENODATA <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENODATA, ENODATA);
#elif ENODATA <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENODATA, ENODATA);
#elif ENODATA <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENODATA, ENODATA);
#elif ENODATA <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENODATA, ENODATA);
#else
PRIVATE DEFINE_UINT75(posix_ENODATA, ENODATA);
#endif
#else /* ENODATA >= 0 */
#if ENODATA == -1
#define posix_ENODATA DeeInt_MinusOne
#elif ENODATA >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENODATA, ENODATA);
#elif ENODATA >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENODATA, ENODATA);
#elif ENODATA >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENODATA, ENODATA);
#elif ENODATA >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENODATA, ENODATA);
#else
PRIVATE DEFINE_INT75(posix_ENODATA, ENODATA);
#endif
#endif /* ENODATA < 0 */
#else /* ENODATA */
#define POSIX_ENODATA_DEF /* nothing */
#endif /* !ENODATA */
#ifdef ETIME
#define POSIX_ETIME_DEF \
	{ "ETIME", (DeeObject *)&posix_ETIME, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Timer expired" },
#if ETIME >= 0
#if ETIME == 0
#define posix_ETIME DeeInt_Zero
#elif ETIME == 1
#define posix_ETIME DeeInt_One
#elif ETIME <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ETIME, ETIME);
#elif ETIME <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ETIME, ETIME);
#elif ETIME <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ETIME, ETIME);
#elif ETIME <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ETIME, ETIME);
#else
PRIVATE DEFINE_UINT75(posix_ETIME, ETIME);
#endif
#else /* ETIME >= 0 */
#if ETIME == -1
#define posix_ETIME DeeInt_MinusOne
#elif ETIME >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ETIME, ETIME);
#elif ETIME >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ETIME, ETIME);
#elif ETIME >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ETIME, ETIME);
#elif ETIME >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ETIME, ETIME);
#else
PRIVATE DEFINE_INT75(posix_ETIME, ETIME);
#endif
#endif /* ETIME < 0 */
#else /* ETIME */
#define POSIX_ETIME_DEF /* nothing */
#endif /* !ETIME */
#ifdef ENOSR
#define POSIX_ENOSR_DEF \
	{ "ENOSR", (DeeObject *)&posix_ENOSR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Out of streams resources" },
#if ENOSR >= 0
#if ENOSR == 0
#define posix_ENOSR DeeInt_Zero
#elif ENOSR == 1
#define posix_ENOSR DeeInt_One
#elif ENOSR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOSR, ENOSR);
#elif ENOSR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOSR, ENOSR);
#elif ENOSR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOSR, ENOSR);
#elif ENOSR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOSR, ENOSR);
#else
PRIVATE DEFINE_UINT75(posix_ENOSR, ENOSR);
#endif
#else /* ENOSR >= 0 */
#if ENOSR == -1
#define posix_ENOSR DeeInt_MinusOne
#elif ENOSR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOSR, ENOSR);
#elif ENOSR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOSR, ENOSR);
#elif ENOSR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOSR, ENOSR);
#elif ENOSR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOSR, ENOSR);
#else
PRIVATE DEFINE_INT75(posix_ENOSR, ENOSR);
#endif
#endif /* ENOSR < 0 */
#else /* ENOSR */
#define POSIX_ENOSR_DEF /* nothing */
#endif /* !ENOSR */
#ifdef ENONET
#define POSIX_ENONET_DEF \
	{ "ENONET", (DeeObject *)&posix_ENONET, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Machine is not on the network" },
#if ENONET >= 0
#if ENONET == 0
#define posix_ENONET DeeInt_Zero
#elif ENONET == 1
#define posix_ENONET DeeInt_One
#elif ENONET <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENONET, ENONET);
#elif ENONET <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENONET, ENONET);
#elif ENONET <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENONET, ENONET);
#elif ENONET <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENONET, ENONET);
#else
PRIVATE DEFINE_UINT75(posix_ENONET, ENONET);
#endif
#else /* ENONET >= 0 */
#if ENONET == -1
#define posix_ENONET DeeInt_MinusOne
#elif ENONET >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENONET, ENONET);
#elif ENONET >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENONET, ENONET);
#elif ENONET >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENONET, ENONET);
#elif ENONET >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENONET, ENONET);
#else
PRIVATE DEFINE_INT75(posix_ENONET, ENONET);
#endif
#endif /* ENONET < 0 */
#else /* ENONET */
#define POSIX_ENONET_DEF /* nothing */
#endif /* !ENONET */
#ifdef ENOPKG
#define POSIX_ENOPKG_DEF \
	{ "ENOPKG", (DeeObject *)&posix_ENOPKG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Package not installed" },
#if ENOPKG >= 0
#if ENOPKG == 0
#define posix_ENOPKG DeeInt_Zero
#elif ENOPKG == 1
#define posix_ENOPKG DeeInt_One
#elif ENOPKG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOPKG, ENOPKG);
#elif ENOPKG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOPKG, ENOPKG);
#elif ENOPKG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOPKG, ENOPKG);
#elif ENOPKG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOPKG, ENOPKG);
#else
PRIVATE DEFINE_UINT75(posix_ENOPKG, ENOPKG);
#endif
#else /* ENOPKG >= 0 */
#if ENOPKG == -1
#define posix_ENOPKG DeeInt_MinusOne
#elif ENOPKG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOPKG, ENOPKG);
#elif ENOPKG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOPKG, ENOPKG);
#elif ENOPKG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOPKG, ENOPKG);
#elif ENOPKG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOPKG, ENOPKG);
#else
PRIVATE DEFINE_INT75(posix_ENOPKG, ENOPKG);
#endif
#endif /* ENOPKG < 0 */
#else /* ENOPKG */
#define POSIX_ENOPKG_DEF /* nothing */
#endif /* !ENOPKG */
#ifdef EREMOTE
#define POSIX_EREMOTE_DEF \
	{ "EREMOTE", (DeeObject *)&posix_EREMOTE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Object is remote" },
#if EREMOTE >= 0
#if EREMOTE == 0
#define posix_EREMOTE DeeInt_Zero
#elif EREMOTE == 1
#define posix_EREMOTE DeeInt_One
#elif EREMOTE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EREMOTE, EREMOTE);
#elif EREMOTE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EREMOTE, EREMOTE);
#elif EREMOTE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EREMOTE, EREMOTE);
#elif EREMOTE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EREMOTE, EREMOTE);
#else
PRIVATE DEFINE_UINT75(posix_EREMOTE, EREMOTE);
#endif
#else /* EREMOTE >= 0 */
#if EREMOTE == -1
#define posix_EREMOTE DeeInt_MinusOne
#elif EREMOTE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EREMOTE, EREMOTE);
#elif EREMOTE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EREMOTE, EREMOTE);
#elif EREMOTE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EREMOTE, EREMOTE);
#elif EREMOTE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EREMOTE, EREMOTE);
#else
PRIVATE DEFINE_INT75(posix_EREMOTE, EREMOTE);
#endif
#endif /* EREMOTE < 0 */
#else /* EREMOTE */
#define POSIX_EREMOTE_DEF /* nothing */
#endif /* !EREMOTE */
#ifdef ENOLINK
#define POSIX_ENOLINK_DEF \
	{ "ENOLINK", (DeeObject *)&posix_ENOLINK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Link has been severed" },
#if ENOLINK >= 0
#if ENOLINK == 0
#define posix_ENOLINK DeeInt_Zero
#elif ENOLINK == 1
#define posix_ENOLINK DeeInt_One
#elif ENOLINK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOLINK, ENOLINK);
#elif ENOLINK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOLINK, ENOLINK);
#elif ENOLINK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOLINK, ENOLINK);
#elif ENOLINK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOLINK, ENOLINK);
#else
PRIVATE DEFINE_UINT75(posix_ENOLINK, ENOLINK);
#endif
#else /* ENOLINK >= 0 */
#if ENOLINK == -1
#define posix_ENOLINK DeeInt_MinusOne
#elif ENOLINK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOLINK, ENOLINK);
#elif ENOLINK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOLINK, ENOLINK);
#elif ENOLINK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOLINK, ENOLINK);
#elif ENOLINK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOLINK, ENOLINK);
#else
PRIVATE DEFINE_INT75(posix_ENOLINK, ENOLINK);
#endif
#endif /* ENOLINK < 0 */
#else /* ENOLINK */
#define POSIX_ENOLINK_DEF /* nothing */
#endif /* !ENOLINK */
#ifdef EADV
#define POSIX_EADV_DEF \
	{ "EADV", (DeeObject *)&posix_EADV, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Advertise error" },
#if EADV >= 0
#if EADV == 0
#define posix_EADV DeeInt_Zero
#elif EADV == 1
#define posix_EADV DeeInt_One
#elif EADV <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EADV, EADV);
#elif EADV <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EADV, EADV);
#elif EADV <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EADV, EADV);
#elif EADV <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EADV, EADV);
#else
PRIVATE DEFINE_UINT75(posix_EADV, EADV);
#endif
#else /* EADV >= 0 */
#if EADV == -1
#define posix_EADV DeeInt_MinusOne
#elif EADV >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EADV, EADV);
#elif EADV >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EADV, EADV);
#elif EADV >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EADV, EADV);
#elif EADV >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EADV, EADV);
#else
PRIVATE DEFINE_INT75(posix_EADV, EADV);
#endif
#endif /* EADV < 0 */
#else /* EADV */
#define POSIX_EADV_DEF /* nothing */
#endif /* !EADV */
#ifdef ESRMNT
#define POSIX_ESRMNT_DEF \
	{ "ESRMNT", (DeeObject *)&posix_ESRMNT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Srmount error" },
#if ESRMNT >= 0
#if ESRMNT == 0
#define posix_ESRMNT DeeInt_Zero
#elif ESRMNT == 1
#define posix_ESRMNT DeeInt_One
#elif ESRMNT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESRMNT, ESRMNT);
#elif ESRMNT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESRMNT, ESRMNT);
#elif ESRMNT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESRMNT, ESRMNT);
#elif ESRMNT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESRMNT, ESRMNT);
#else
PRIVATE DEFINE_UINT75(posix_ESRMNT, ESRMNT);
#endif
#else /* ESRMNT >= 0 */
#if ESRMNT == -1
#define posix_ESRMNT DeeInt_MinusOne
#elif ESRMNT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESRMNT, ESRMNT);
#elif ESRMNT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESRMNT, ESRMNT);
#elif ESRMNT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESRMNT, ESRMNT);
#elif ESRMNT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESRMNT, ESRMNT);
#else
PRIVATE DEFINE_INT75(posix_ESRMNT, ESRMNT);
#endif
#endif /* ESRMNT < 0 */
#else /* ESRMNT */
#define POSIX_ESRMNT_DEF /* nothing */
#endif /* !ESRMNT */
#ifdef ECOMM
#define POSIX_ECOMM_DEF \
	{ "ECOMM", (DeeObject *)&posix_ECOMM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Communication error on send" },
#if ECOMM >= 0
#if ECOMM == 0
#define posix_ECOMM DeeInt_Zero
#elif ECOMM == 1
#define posix_ECOMM DeeInt_One
#elif ECOMM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECOMM, ECOMM);
#elif ECOMM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECOMM, ECOMM);
#elif ECOMM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECOMM, ECOMM);
#elif ECOMM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECOMM, ECOMM);
#else
PRIVATE DEFINE_UINT75(posix_ECOMM, ECOMM);
#endif
#else /* ECOMM >= 0 */
#if ECOMM == -1
#define posix_ECOMM DeeInt_MinusOne
#elif ECOMM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECOMM, ECOMM);
#elif ECOMM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECOMM, ECOMM);
#elif ECOMM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECOMM, ECOMM);
#elif ECOMM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECOMM, ECOMM);
#else
PRIVATE DEFINE_INT75(posix_ECOMM, ECOMM);
#endif
#endif /* ECOMM < 0 */
#else /* ECOMM */
#define POSIX_ECOMM_DEF /* nothing */
#endif /* !ECOMM */
#ifdef EPROTO
#define POSIX_EPROTO_DEF \
	{ "EPROTO", (DeeObject *)&posix_EPROTO, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol error" },
#if EPROTO >= 0
#if EPROTO == 0
#define posix_EPROTO DeeInt_Zero
#elif EPROTO == 1
#define posix_EPROTO DeeInt_One
#elif EPROTO <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROTO, EPROTO);
#elif EPROTO <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROTO, EPROTO);
#elif EPROTO <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROTO, EPROTO);
#elif EPROTO <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROTO, EPROTO);
#else
PRIVATE DEFINE_UINT75(posix_EPROTO, EPROTO);
#endif
#else /* EPROTO >= 0 */
#if EPROTO == -1
#define posix_EPROTO DeeInt_MinusOne
#elif EPROTO >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROTO, EPROTO);
#elif EPROTO >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROTO, EPROTO);
#elif EPROTO >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROTO, EPROTO);
#elif EPROTO >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROTO, EPROTO);
#else
PRIVATE DEFINE_INT75(posix_EPROTO, EPROTO);
#endif
#endif /* EPROTO < 0 */
#else /* EPROTO */
#define POSIX_EPROTO_DEF /* nothing */
#endif /* !EPROTO */
#ifdef EMULTIHOP
#define POSIX_EMULTIHOP_DEF \
	{ "EMULTIHOP", (DeeObject *)&posix_EMULTIHOP, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Multihop attempted" },
#if EMULTIHOP >= 0
#if EMULTIHOP == 0
#define posix_EMULTIHOP DeeInt_Zero
#elif EMULTIHOP == 1
#define posix_EMULTIHOP DeeInt_One
#elif EMULTIHOP <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EMULTIHOP, EMULTIHOP);
#else
PRIVATE DEFINE_UINT75(posix_EMULTIHOP, EMULTIHOP);
#endif
#else /* EMULTIHOP >= 0 */
#if EMULTIHOP == -1
#define posix_EMULTIHOP DeeInt_MinusOne
#elif EMULTIHOP >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EMULTIHOP, EMULTIHOP);
#elif EMULTIHOP >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EMULTIHOP, EMULTIHOP);
#else
PRIVATE DEFINE_INT75(posix_EMULTIHOP, EMULTIHOP);
#endif
#endif /* EMULTIHOP < 0 */
#else /* EMULTIHOP */
#define POSIX_EMULTIHOP_DEF /* nothing */
#endif /* !EMULTIHOP */
#ifdef EDOTDOT
#define POSIX_EDOTDOT_DEF \
	{ "EDOTDOT", (DeeObject *)&posix_EDOTDOT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "RFS specific error" },
#if EDOTDOT >= 0
#if EDOTDOT == 0
#define posix_EDOTDOT DeeInt_Zero
#elif EDOTDOT == 1
#define posix_EDOTDOT DeeInt_One
#elif EDOTDOT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDOTDOT, EDOTDOT);
#else
PRIVATE DEFINE_UINT75(posix_EDOTDOT, EDOTDOT);
#endif
#else /* EDOTDOT >= 0 */
#if EDOTDOT == -1
#define posix_EDOTDOT DeeInt_MinusOne
#elif EDOTDOT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDOTDOT, EDOTDOT);
#elif EDOTDOT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDOTDOT, EDOTDOT);
#else
PRIVATE DEFINE_INT75(posix_EDOTDOT, EDOTDOT);
#endif
#endif /* EDOTDOT < 0 */
#else /* EDOTDOT */
#define POSIX_EDOTDOT_DEF /* nothing */
#endif /* !EDOTDOT */
#ifdef EBADMSG
#define POSIX_EBADMSG_DEF \
	{ "EBADMSG", (DeeObject *)&posix_EBADMSG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Not a data message" },
#if EBADMSG >= 0
#if EBADMSG == 0
#define posix_EBADMSG DeeInt_Zero
#elif EBADMSG == 1
#define posix_EBADMSG DeeInt_One
#elif EBADMSG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADMSG, EBADMSG);
#elif EBADMSG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADMSG, EBADMSG);
#elif EBADMSG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADMSG, EBADMSG);
#elif EBADMSG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADMSG, EBADMSG);
#else
PRIVATE DEFINE_UINT75(posix_EBADMSG, EBADMSG);
#endif
#else /* EBADMSG >= 0 */
#if EBADMSG == -1
#define posix_EBADMSG DeeInt_MinusOne
#elif EBADMSG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADMSG, EBADMSG);
#elif EBADMSG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADMSG, EBADMSG);
#elif EBADMSG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADMSG, EBADMSG);
#elif EBADMSG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADMSG, EBADMSG);
#else
PRIVATE DEFINE_INT75(posix_EBADMSG, EBADMSG);
#endif
#endif /* EBADMSG < 0 */
#else /* EBADMSG */
#define POSIX_EBADMSG_DEF /* nothing */
#endif /* !EBADMSG */
#ifdef EOVERFLOW
#define POSIX_EOVERFLOW_DEF \
	{ "EOVERFLOW", (DeeObject *)&posix_EOVERFLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Value too large for defined data type" },
#if EOVERFLOW >= 0
#if EOVERFLOW == 0
#define posix_EOVERFLOW DeeInt_Zero
#elif EOVERFLOW == 1
#define posix_EOVERFLOW DeeInt_One
#elif EOVERFLOW <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EOVERFLOW, EOVERFLOW);
#else
PRIVATE DEFINE_UINT75(posix_EOVERFLOW, EOVERFLOW);
#endif
#else /* EOVERFLOW >= 0 */
#if EOVERFLOW == -1
#define posix_EOVERFLOW DeeInt_MinusOne
#elif EOVERFLOW >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EOVERFLOW, EOVERFLOW);
#elif EOVERFLOW >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EOVERFLOW, EOVERFLOW);
#else
PRIVATE DEFINE_INT75(posix_EOVERFLOW, EOVERFLOW);
#endif
#endif /* EOVERFLOW < 0 */
#else /* EOVERFLOW */
#define POSIX_EOVERFLOW_DEF /* nothing */
#endif /* !EOVERFLOW */
#ifdef ENOTUNIQ
#define POSIX_ENOTUNIQ_DEF \
	{ "ENOTUNIQ", (DeeObject *)&posix_ENOTUNIQ, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Name not unique on network" },
#if ENOTUNIQ >= 0
#if ENOTUNIQ == 0
#define posix_ENOTUNIQ DeeInt_Zero
#elif ENOTUNIQ == 1
#define posix_ENOTUNIQ DeeInt_One
#elif ENOTUNIQ <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTUNIQ, ENOTUNIQ);
#else
PRIVATE DEFINE_UINT75(posix_ENOTUNIQ, ENOTUNIQ);
#endif
#else /* ENOTUNIQ >= 0 */
#if ENOTUNIQ == -1
#define posix_ENOTUNIQ DeeInt_MinusOne
#elif ENOTUNIQ >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTUNIQ, ENOTUNIQ);
#elif ENOTUNIQ >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTUNIQ, ENOTUNIQ);
#else
PRIVATE DEFINE_INT75(posix_ENOTUNIQ, ENOTUNIQ);
#endif
#endif /* ENOTUNIQ < 0 */
#else /* ENOTUNIQ */
#define POSIX_ENOTUNIQ_DEF /* nothing */
#endif /* !ENOTUNIQ */
#ifdef EBADFD
#define POSIX_EBADFD_DEF \
	{ "EBADFD", (DeeObject *)&posix_EBADFD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "File descriptor in bad state" },
#if EBADFD >= 0
#if EBADFD == 0
#define posix_EBADFD DeeInt_Zero
#elif EBADFD == 1
#define posix_EBADFD DeeInt_One
#elif EBADFD <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADFD, EBADFD);
#elif EBADFD <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADFD, EBADFD);
#elif EBADFD <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADFD, EBADFD);
#elif EBADFD <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADFD, EBADFD);
#else
PRIVATE DEFINE_UINT75(posix_EBADFD, EBADFD);
#endif
#else /* EBADFD >= 0 */
#if EBADFD == -1
#define posix_EBADFD DeeInt_MinusOne
#elif EBADFD >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADFD, EBADFD);
#elif EBADFD >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADFD, EBADFD);
#elif EBADFD >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADFD, EBADFD);
#elif EBADFD >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADFD, EBADFD);
#else
PRIVATE DEFINE_INT75(posix_EBADFD, EBADFD);
#endif
#endif /* EBADFD < 0 */
#else /* EBADFD */
#define POSIX_EBADFD_DEF /* nothing */
#endif /* !EBADFD */
#ifdef EREMCHG
#define POSIX_EREMCHG_DEF \
	{ "EREMCHG", (DeeObject *)&posix_EREMCHG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Remote address changed" },
#if EREMCHG >= 0
#if EREMCHG == 0
#define posix_EREMCHG DeeInt_Zero
#elif EREMCHG == 1
#define posix_EREMCHG DeeInt_One
#elif EREMCHG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EREMCHG, EREMCHG);
#elif EREMCHG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EREMCHG, EREMCHG);
#elif EREMCHG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EREMCHG, EREMCHG);
#elif EREMCHG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EREMCHG, EREMCHG);
#else
PRIVATE DEFINE_UINT75(posix_EREMCHG, EREMCHG);
#endif
#else /* EREMCHG >= 0 */
#if EREMCHG == -1
#define posix_EREMCHG DeeInt_MinusOne
#elif EREMCHG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EREMCHG, EREMCHG);
#elif EREMCHG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EREMCHG, EREMCHG);
#elif EREMCHG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EREMCHG, EREMCHG);
#elif EREMCHG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EREMCHG, EREMCHG);
#else
PRIVATE DEFINE_INT75(posix_EREMCHG, EREMCHG);
#endif
#endif /* EREMCHG < 0 */
#else /* EREMCHG */
#define POSIX_EREMCHG_DEF /* nothing */
#endif /* !EREMCHG */
#ifdef ELIBACC
#define POSIX_ELIBACC_DEF \
	{ "ELIBACC", (DeeObject *)&posix_ELIBACC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Can not access a needed shared library" },
#if ELIBACC >= 0
#if ELIBACC == 0
#define posix_ELIBACC DeeInt_Zero
#elif ELIBACC == 1
#define posix_ELIBACC DeeInt_One
#elif ELIBACC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIBACC, ELIBACC);
#elif ELIBACC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIBACC, ELIBACC);
#elif ELIBACC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIBACC, ELIBACC);
#elif ELIBACC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIBACC, ELIBACC);
#else
PRIVATE DEFINE_UINT75(posix_ELIBACC, ELIBACC);
#endif
#else /* ELIBACC >= 0 */
#if ELIBACC == -1
#define posix_ELIBACC DeeInt_MinusOne
#elif ELIBACC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIBACC, ELIBACC);
#elif ELIBACC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIBACC, ELIBACC);
#elif ELIBACC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIBACC, ELIBACC);
#elif ELIBACC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIBACC, ELIBACC);
#else
PRIVATE DEFINE_INT75(posix_ELIBACC, ELIBACC);
#endif
#endif /* ELIBACC < 0 */
#else /* ELIBACC */
#define POSIX_ELIBACC_DEF /* nothing */
#endif /* !ELIBACC */
#ifdef ELIBBAD
#define POSIX_ELIBBAD_DEF \
	{ "ELIBBAD", (DeeObject *)&posix_ELIBBAD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Accessing a corrupted shared library" },
#if ELIBBAD >= 0
#if ELIBBAD == 0
#define posix_ELIBBAD DeeInt_Zero
#elif ELIBBAD == 1
#define posix_ELIBBAD DeeInt_One
#elif ELIBBAD <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIBBAD, ELIBBAD);
#else
PRIVATE DEFINE_UINT75(posix_ELIBBAD, ELIBBAD);
#endif
#else /* ELIBBAD >= 0 */
#if ELIBBAD == -1
#define posix_ELIBBAD DeeInt_MinusOne
#elif ELIBBAD >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIBBAD, ELIBBAD);
#elif ELIBBAD >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIBBAD, ELIBBAD);
#else
PRIVATE DEFINE_INT75(posix_ELIBBAD, ELIBBAD);
#endif
#endif /* ELIBBAD < 0 */
#else /* ELIBBAD */
#define POSIX_ELIBBAD_DEF /* nothing */
#endif /* !ELIBBAD */
#ifdef ELIBSCN
#define POSIX_ELIBSCN_DEF \
	{ "ELIBSCN", (DeeObject *)&posix_ELIBSCN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, ".lib section in a.out corrupted" },
#if ELIBSCN >= 0
#if ELIBSCN == 0
#define posix_ELIBSCN DeeInt_Zero
#elif ELIBSCN == 1
#define posix_ELIBSCN DeeInt_One
#elif ELIBSCN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIBSCN, ELIBSCN);
#else
PRIVATE DEFINE_UINT75(posix_ELIBSCN, ELIBSCN);
#endif
#else /* ELIBSCN >= 0 */
#if ELIBSCN == -1
#define posix_ELIBSCN DeeInt_MinusOne
#elif ELIBSCN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIBSCN, ELIBSCN);
#elif ELIBSCN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIBSCN, ELIBSCN);
#else
PRIVATE DEFINE_INT75(posix_ELIBSCN, ELIBSCN);
#endif
#endif /* ELIBSCN < 0 */
#else /* ELIBSCN */
#define POSIX_ELIBSCN_DEF /* nothing */
#endif /* !ELIBSCN */
#ifdef ELIBMAX
#define POSIX_ELIBMAX_DEF \
	{ "ELIBMAX", (DeeObject *)&posix_ELIBMAX, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Attempting to link in too many shared libraries" },
#if ELIBMAX >= 0
#if ELIBMAX == 0
#define posix_ELIBMAX DeeInt_Zero
#elif ELIBMAX == 1
#define posix_ELIBMAX DeeInt_One
#elif ELIBMAX <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIBMAX, ELIBMAX);
#else
PRIVATE DEFINE_UINT75(posix_ELIBMAX, ELIBMAX);
#endif
#else /* ELIBMAX >= 0 */
#if ELIBMAX == -1
#define posix_ELIBMAX DeeInt_MinusOne
#elif ELIBMAX >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIBMAX, ELIBMAX);
#elif ELIBMAX >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIBMAX, ELIBMAX);
#else
PRIVATE DEFINE_INT75(posix_ELIBMAX, ELIBMAX);
#endif
#endif /* ELIBMAX < 0 */
#else /* ELIBMAX */
#define POSIX_ELIBMAX_DEF /* nothing */
#endif /* !ELIBMAX */
#ifdef ELIBEXEC
#define POSIX_ELIBEXEC_DEF \
	{ "ELIBEXEC", (DeeObject *)&posix_ELIBEXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Cannot exec a shared library directly" },
#if ELIBEXEC >= 0
#if ELIBEXEC == 0
#define posix_ELIBEXEC DeeInt_Zero
#elif ELIBEXEC == 1
#define posix_ELIBEXEC DeeInt_One
#elif ELIBEXEC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIBEXEC, ELIBEXEC);
#else
PRIVATE DEFINE_UINT75(posix_ELIBEXEC, ELIBEXEC);
#endif
#else /* ELIBEXEC >= 0 */
#if ELIBEXEC == -1
#define posix_ELIBEXEC DeeInt_MinusOne
#elif ELIBEXEC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIBEXEC, ELIBEXEC);
#elif ELIBEXEC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIBEXEC, ELIBEXEC);
#else
PRIVATE DEFINE_INT75(posix_ELIBEXEC, ELIBEXEC);
#endif
#endif /* ELIBEXEC < 0 */
#else /* ELIBEXEC */
#define POSIX_ELIBEXEC_DEF /* nothing */
#endif /* !ELIBEXEC */
#ifdef EILSEQ
#define POSIX_EILSEQ_DEF \
	{ "EILSEQ", (DeeObject *)&posix_EILSEQ, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Illegal byte sequence" },
#if EILSEQ >= 0
#if EILSEQ == 0
#define posix_EILSEQ DeeInt_Zero
#elif EILSEQ == 1
#define posix_EILSEQ DeeInt_One
#elif EILSEQ <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EILSEQ, EILSEQ);
#elif EILSEQ <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EILSEQ, EILSEQ);
#elif EILSEQ <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EILSEQ, EILSEQ);
#elif EILSEQ <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EILSEQ, EILSEQ);
#else
PRIVATE DEFINE_UINT75(posix_EILSEQ, EILSEQ);
#endif
#else /* EILSEQ >= 0 */
#if EILSEQ == -1
#define posix_EILSEQ DeeInt_MinusOne
#elif EILSEQ >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EILSEQ, EILSEQ);
#elif EILSEQ >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EILSEQ, EILSEQ);
#elif EILSEQ >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EILSEQ, EILSEQ);
#elif EILSEQ >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EILSEQ, EILSEQ);
#else
PRIVATE DEFINE_INT75(posix_EILSEQ, EILSEQ);
#endif
#endif /* EILSEQ < 0 */
#else /* EILSEQ */
#define POSIX_EILSEQ_DEF /* nothing */
#endif /* !EILSEQ */
#ifdef ERESTART
#define POSIX_ERESTART_DEF \
	{ "ERESTART", (DeeObject *)&posix_ERESTART, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interrupted system call should be restarted" },
#if ERESTART >= 0
#if ERESTART == 0
#define posix_ERESTART DeeInt_Zero
#elif ERESTART == 1
#define posix_ERESTART DeeInt_One
#elif ERESTART <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ERESTART, ERESTART);
#elif ERESTART <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ERESTART, ERESTART);
#elif ERESTART <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ERESTART, ERESTART);
#elif ERESTART <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ERESTART, ERESTART);
#else
PRIVATE DEFINE_UINT75(posix_ERESTART, ERESTART);
#endif
#else /* ERESTART >= 0 */
#if ERESTART == -1
#define posix_ERESTART DeeInt_MinusOne
#elif ERESTART >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ERESTART, ERESTART);
#elif ERESTART >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ERESTART, ERESTART);
#elif ERESTART >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ERESTART, ERESTART);
#elif ERESTART >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ERESTART, ERESTART);
#else
PRIVATE DEFINE_INT75(posix_ERESTART, ERESTART);
#endif
#endif /* ERESTART < 0 */
#else /* ERESTART */
#define POSIX_ERESTART_DEF /* nothing */
#endif /* !ERESTART */
#ifdef ESTRPIPE
#define POSIX_ESTRPIPE_DEF \
	{ "ESTRPIPE", (DeeObject *)&posix_ESTRPIPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Streams pipe error" },
#if ESTRPIPE >= 0
#if ESTRPIPE == 0
#define posix_ESTRPIPE DeeInt_Zero
#elif ESTRPIPE == 1
#define posix_ESTRPIPE DeeInt_One
#elif ESTRPIPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESTRPIPE, ESTRPIPE);
#else
PRIVATE DEFINE_UINT75(posix_ESTRPIPE, ESTRPIPE);
#endif
#else /* ESTRPIPE >= 0 */
#if ESTRPIPE == -1
#define posix_ESTRPIPE DeeInt_MinusOne
#elif ESTRPIPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESTRPIPE, ESTRPIPE);
#elif ESTRPIPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESTRPIPE, ESTRPIPE);
#else
PRIVATE DEFINE_INT75(posix_ESTRPIPE, ESTRPIPE);
#endif
#endif /* ESTRPIPE < 0 */
#else /* ESTRPIPE */
#define POSIX_ESTRPIPE_DEF /* nothing */
#endif /* !ESTRPIPE */
#ifdef EUSERS
#define POSIX_EUSERS_DEF \
	{ "EUSERS", (DeeObject *)&posix_EUSERS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Too many users" },
#if EUSERS >= 0
#if EUSERS == 0
#define posix_EUSERS DeeInt_Zero
#elif EUSERS == 1
#define posix_EUSERS DeeInt_One
#elif EUSERS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EUSERS, EUSERS);
#elif EUSERS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EUSERS, EUSERS);
#elif EUSERS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EUSERS, EUSERS);
#elif EUSERS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EUSERS, EUSERS);
#else
PRIVATE DEFINE_UINT75(posix_EUSERS, EUSERS);
#endif
#else /* EUSERS >= 0 */
#if EUSERS == -1
#define posix_EUSERS DeeInt_MinusOne
#elif EUSERS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EUSERS, EUSERS);
#elif EUSERS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EUSERS, EUSERS);
#elif EUSERS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EUSERS, EUSERS);
#elif EUSERS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EUSERS, EUSERS);
#else
PRIVATE DEFINE_INT75(posix_EUSERS, EUSERS);
#endif
#endif /* EUSERS < 0 */
#else /* EUSERS */
#define POSIX_EUSERS_DEF /* nothing */
#endif /* !EUSERS */
#ifdef ENOTSOCK
#define POSIX_ENOTSOCK_DEF \
	{ "ENOTSOCK", (DeeObject *)&posix_ENOTSOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Socket operation on non-socket" },
#if ENOTSOCK >= 0
#if ENOTSOCK == 0
#define posix_ENOTSOCK DeeInt_Zero
#elif ENOTSOCK == 1
#define posix_ENOTSOCK DeeInt_One
#elif ENOTSOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTSOCK, ENOTSOCK);
#else
PRIVATE DEFINE_UINT75(posix_ENOTSOCK, ENOTSOCK);
#endif
#else /* ENOTSOCK >= 0 */
#if ENOTSOCK == -1
#define posix_ENOTSOCK DeeInt_MinusOne
#elif ENOTSOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTSOCK, ENOTSOCK);
#elif ENOTSOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTSOCK, ENOTSOCK);
#else
PRIVATE DEFINE_INT75(posix_ENOTSOCK, ENOTSOCK);
#endif
#endif /* ENOTSOCK < 0 */
#else /* ENOTSOCK */
#define POSIX_ENOTSOCK_DEF /* nothing */
#endif /* !ENOTSOCK */
#ifdef EDESTADDRREQ
#define POSIX_EDESTADDRREQ_DEF \
	{ "EDESTADDRREQ", (DeeObject *)&posix_EDESTADDRREQ, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Destination address required" },
#if EDESTADDRREQ >= 0
#if EDESTADDRREQ == 0
#define posix_EDESTADDRREQ DeeInt_Zero
#elif EDESTADDRREQ == 1
#define posix_EDESTADDRREQ DeeInt_One
#elif EDESTADDRREQ <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDESTADDRREQ, EDESTADDRREQ);
#else
PRIVATE DEFINE_UINT75(posix_EDESTADDRREQ, EDESTADDRREQ);
#endif
#else /* EDESTADDRREQ >= 0 */
#if EDESTADDRREQ == -1
#define posix_EDESTADDRREQ DeeInt_MinusOne
#elif EDESTADDRREQ >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDESTADDRREQ, EDESTADDRREQ);
#elif EDESTADDRREQ >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDESTADDRREQ, EDESTADDRREQ);
#else
PRIVATE DEFINE_INT75(posix_EDESTADDRREQ, EDESTADDRREQ);
#endif
#endif /* EDESTADDRREQ < 0 */
#else /* EDESTADDRREQ */
#define POSIX_EDESTADDRREQ_DEF /* nothing */
#endif /* !EDESTADDRREQ */
#ifdef EMSGSIZE
#define POSIX_EMSGSIZE_DEF \
	{ "EMSGSIZE", (DeeObject *)&posix_EMSGSIZE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Message too long" },
#if EMSGSIZE >= 0
#if EMSGSIZE == 0
#define posix_EMSGSIZE DeeInt_Zero
#elif EMSGSIZE == 1
#define posix_EMSGSIZE DeeInt_One
#elif EMSGSIZE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EMSGSIZE, EMSGSIZE);
#else
PRIVATE DEFINE_UINT75(posix_EMSGSIZE, EMSGSIZE);
#endif
#else /* EMSGSIZE >= 0 */
#if EMSGSIZE == -1
#define posix_EMSGSIZE DeeInt_MinusOne
#elif EMSGSIZE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EMSGSIZE, EMSGSIZE);
#elif EMSGSIZE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EMSGSIZE, EMSGSIZE);
#else
PRIVATE DEFINE_INT75(posix_EMSGSIZE, EMSGSIZE);
#endif
#endif /* EMSGSIZE < 0 */
#else /* EMSGSIZE */
#define POSIX_EMSGSIZE_DEF /* nothing */
#endif /* !EMSGSIZE */
#ifdef EPROTOTYPE
#define POSIX_EPROTOTYPE_DEF \
	{ "EPROTOTYPE", (DeeObject *)&posix_EPROTOTYPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol wrong type for socket" },
#if EPROTOTYPE >= 0
#if EPROTOTYPE == 0
#define posix_EPROTOTYPE DeeInt_Zero
#elif EPROTOTYPE == 1
#define posix_EPROTOTYPE DeeInt_One
#elif EPROTOTYPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROTOTYPE, EPROTOTYPE);
#else
PRIVATE DEFINE_UINT75(posix_EPROTOTYPE, EPROTOTYPE);
#endif
#else /* EPROTOTYPE >= 0 */
#if EPROTOTYPE == -1
#define posix_EPROTOTYPE DeeInt_MinusOne
#elif EPROTOTYPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROTOTYPE, EPROTOTYPE);
#elif EPROTOTYPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROTOTYPE, EPROTOTYPE);
#else
PRIVATE DEFINE_INT75(posix_EPROTOTYPE, EPROTOTYPE);
#endif
#endif /* EPROTOTYPE < 0 */
#else /* EPROTOTYPE */
#define POSIX_EPROTOTYPE_DEF /* nothing */
#endif /* !EPROTOTYPE */
#ifdef ENOPROTOOPT
#define POSIX_ENOPROTOOPT_DEF \
	{ "ENOPROTOOPT", (DeeObject *)&posix_ENOPROTOOPT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol not available" },
#if ENOPROTOOPT >= 0
#if ENOPROTOOPT == 0
#define posix_ENOPROTOOPT DeeInt_Zero
#elif ENOPROTOOPT == 1
#define posix_ENOPROTOOPT DeeInt_One
#elif ENOPROTOOPT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOPROTOOPT, ENOPROTOOPT);
#else
PRIVATE DEFINE_UINT75(posix_ENOPROTOOPT, ENOPROTOOPT);
#endif
#else /* ENOPROTOOPT >= 0 */
#if ENOPROTOOPT == -1
#define posix_ENOPROTOOPT DeeInt_MinusOne
#elif ENOPROTOOPT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOPROTOOPT, ENOPROTOOPT);
#elif ENOPROTOOPT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOPROTOOPT, ENOPROTOOPT);
#else
PRIVATE DEFINE_INT75(posix_ENOPROTOOPT, ENOPROTOOPT);
#endif
#endif /* ENOPROTOOPT < 0 */
#else /* ENOPROTOOPT */
#define POSIX_ENOPROTOOPT_DEF /* nothing */
#endif /* !ENOPROTOOPT */
#ifdef EPROTONOSUPPORT
#define POSIX_EPROTONOSUPPORT_DEF \
	{ "EPROTONOSUPPORT", (DeeObject *)&posix_EPROTONOSUPPORT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol not supported" },
#if EPROTONOSUPPORT >= 0
#if EPROTONOSUPPORT == 0
#define posix_EPROTONOSUPPORT DeeInt_Zero
#elif EPROTONOSUPPORT == 1
#define posix_EPROTONOSUPPORT DeeInt_One
#elif EPROTONOSUPPORT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#else
PRIVATE DEFINE_UINT75(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#endif
#else /* EPROTONOSUPPORT >= 0 */
#if EPROTONOSUPPORT == -1
#define posix_EPROTONOSUPPORT DeeInt_MinusOne
#elif EPROTONOSUPPORT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#elif EPROTONOSUPPORT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#else
PRIVATE DEFINE_INT75(posix_EPROTONOSUPPORT, EPROTONOSUPPORT);
#endif
#endif /* EPROTONOSUPPORT < 0 */
#else /* EPROTONOSUPPORT */
#define POSIX_EPROTONOSUPPORT_DEF /* nothing */
#endif /* !EPROTONOSUPPORT */
#ifdef ESOCKTNOSUPPORT
#define POSIX_ESOCKTNOSUPPORT_DEF \
	{ "ESOCKTNOSUPPORT", (DeeObject *)&posix_ESOCKTNOSUPPORT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Socket type not supported" },
#if ESOCKTNOSUPPORT >= 0
#if ESOCKTNOSUPPORT == 0
#define posix_ESOCKTNOSUPPORT DeeInt_Zero
#elif ESOCKTNOSUPPORT == 1
#define posix_ESOCKTNOSUPPORT DeeInt_One
#elif ESOCKTNOSUPPORT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#else
PRIVATE DEFINE_UINT75(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#endif
#else /* ESOCKTNOSUPPORT >= 0 */
#if ESOCKTNOSUPPORT == -1
#define posix_ESOCKTNOSUPPORT DeeInt_MinusOne
#elif ESOCKTNOSUPPORT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#elif ESOCKTNOSUPPORT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#else
PRIVATE DEFINE_INT75(posix_ESOCKTNOSUPPORT, ESOCKTNOSUPPORT);
#endif
#endif /* ESOCKTNOSUPPORT < 0 */
#else /* ESOCKTNOSUPPORT */
#define POSIX_ESOCKTNOSUPPORT_DEF /* nothing */
#endif /* !ESOCKTNOSUPPORT */
#ifdef EOPNOTSUPP
#define POSIX_EOPNOTSUPP_DEF \
	{ "EOPNOTSUPP", (DeeObject *)&posix_EOPNOTSUPP, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation not supported on transport endpoint" },
#if EOPNOTSUPP >= 0
#if EOPNOTSUPP == 0
#define posix_EOPNOTSUPP DeeInt_Zero
#elif EOPNOTSUPP == 1
#define posix_EOPNOTSUPP DeeInt_One
#elif EOPNOTSUPP <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EOPNOTSUPP, EOPNOTSUPP);
#else
PRIVATE DEFINE_UINT75(posix_EOPNOTSUPP, EOPNOTSUPP);
#endif
#else /* EOPNOTSUPP >= 0 */
#if EOPNOTSUPP == -1
#define posix_EOPNOTSUPP DeeInt_MinusOne
#elif EOPNOTSUPP >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EOPNOTSUPP, EOPNOTSUPP);
#elif EOPNOTSUPP >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EOPNOTSUPP, EOPNOTSUPP);
#else
PRIVATE DEFINE_INT75(posix_EOPNOTSUPP, EOPNOTSUPP);
#endif
#endif /* EOPNOTSUPP < 0 */
#else /* EOPNOTSUPP */
#define POSIX_EOPNOTSUPP_DEF /* nothing */
#endif /* !EOPNOTSUPP */
#ifdef EPFNOSUPPORT
#define POSIX_EPFNOSUPPORT_DEF \
	{ "EPFNOSUPPORT", (DeeObject *)&posix_EPFNOSUPPORT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Protocol family not supported" },
#if EPFNOSUPPORT >= 0
#if EPFNOSUPPORT == 0
#define posix_EPFNOSUPPORT DeeInt_Zero
#elif EPFNOSUPPORT == 1
#define posix_EPFNOSUPPORT DeeInt_One
#elif EPFNOSUPPORT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#else
PRIVATE DEFINE_UINT75(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#endif
#else /* EPFNOSUPPORT >= 0 */
#if EPFNOSUPPORT == -1
#define posix_EPFNOSUPPORT DeeInt_MinusOne
#elif EPFNOSUPPORT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#elif EPFNOSUPPORT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#else
PRIVATE DEFINE_INT75(posix_EPFNOSUPPORT, EPFNOSUPPORT);
#endif
#endif /* EPFNOSUPPORT < 0 */
#else /* EPFNOSUPPORT */
#define POSIX_EPFNOSUPPORT_DEF /* nothing */
#endif /* !EPFNOSUPPORT */
#ifdef EAFNOSUPPORT
#define POSIX_EAFNOSUPPORT_DEF \
	{ "EAFNOSUPPORT", (DeeObject *)&posix_EAFNOSUPPORT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Address family not supported by protocol" },
#if EAFNOSUPPORT >= 0
#if EAFNOSUPPORT == 0
#define posix_EAFNOSUPPORT DeeInt_Zero
#elif EAFNOSUPPORT == 1
#define posix_EAFNOSUPPORT DeeInt_One
#elif EAFNOSUPPORT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#else
PRIVATE DEFINE_UINT75(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#endif
#else /* EAFNOSUPPORT >= 0 */
#if EAFNOSUPPORT == -1
#define posix_EAFNOSUPPORT DeeInt_MinusOne
#elif EAFNOSUPPORT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#elif EAFNOSUPPORT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#else
PRIVATE DEFINE_INT75(posix_EAFNOSUPPORT, EAFNOSUPPORT);
#endif
#endif /* EAFNOSUPPORT < 0 */
#else /* EAFNOSUPPORT */
#define POSIX_EAFNOSUPPORT_DEF /* nothing */
#endif /* !EAFNOSUPPORT */
#ifdef EADDRINUSE
#define POSIX_EADDRINUSE_DEF \
	{ "EADDRINUSE", (DeeObject *)&posix_EADDRINUSE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Address already in use" },
#if EADDRINUSE >= 0
#if EADDRINUSE == 0
#define posix_EADDRINUSE DeeInt_Zero
#elif EADDRINUSE == 1
#define posix_EADDRINUSE DeeInt_One
#elif EADDRINUSE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EADDRINUSE, EADDRINUSE);
#else
PRIVATE DEFINE_UINT75(posix_EADDRINUSE, EADDRINUSE);
#endif
#else /* EADDRINUSE >= 0 */
#if EADDRINUSE == -1
#define posix_EADDRINUSE DeeInt_MinusOne
#elif EADDRINUSE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EADDRINUSE, EADDRINUSE);
#elif EADDRINUSE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EADDRINUSE, EADDRINUSE);
#else
PRIVATE DEFINE_INT75(posix_EADDRINUSE, EADDRINUSE);
#endif
#endif /* EADDRINUSE < 0 */
#else /* EADDRINUSE */
#define POSIX_EADDRINUSE_DEF /* nothing */
#endif /* !EADDRINUSE */
#ifdef EADDRNOTAVAIL
#define POSIX_EADDRNOTAVAIL_DEF \
	{ "EADDRNOTAVAIL", (DeeObject *)&posix_EADDRNOTAVAIL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Cannot assign requested address" },
#if EADDRNOTAVAIL >= 0
#if EADDRNOTAVAIL == 0
#define posix_EADDRNOTAVAIL DeeInt_Zero
#elif EADDRNOTAVAIL == 1
#define posix_EADDRNOTAVAIL DeeInt_One
#elif EADDRNOTAVAIL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#else
PRIVATE DEFINE_UINT75(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#endif
#else /* EADDRNOTAVAIL >= 0 */
#if EADDRNOTAVAIL == -1
#define posix_EADDRNOTAVAIL DeeInt_MinusOne
#elif EADDRNOTAVAIL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#elif EADDRNOTAVAIL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#else
PRIVATE DEFINE_INT75(posix_EADDRNOTAVAIL, EADDRNOTAVAIL);
#endif
#endif /* EADDRNOTAVAIL < 0 */
#else /* EADDRNOTAVAIL */
#define POSIX_EADDRNOTAVAIL_DEF /* nothing */
#endif /* !EADDRNOTAVAIL */
#ifdef ENETDOWN
#define POSIX_ENETDOWN_DEF \
	{ "ENETDOWN", (DeeObject *)&posix_ENETDOWN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Network is down" },
#if ENETDOWN >= 0
#if ENETDOWN == 0
#define posix_ENETDOWN DeeInt_Zero
#elif ENETDOWN == 1
#define posix_ENETDOWN DeeInt_One
#elif ENETDOWN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENETDOWN, ENETDOWN);
#else
PRIVATE DEFINE_UINT75(posix_ENETDOWN, ENETDOWN);
#endif
#else /* ENETDOWN >= 0 */
#if ENETDOWN == -1
#define posix_ENETDOWN DeeInt_MinusOne
#elif ENETDOWN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENETDOWN, ENETDOWN);
#elif ENETDOWN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENETDOWN, ENETDOWN);
#else
PRIVATE DEFINE_INT75(posix_ENETDOWN, ENETDOWN);
#endif
#endif /* ENETDOWN < 0 */
#else /* ENETDOWN */
#define POSIX_ENETDOWN_DEF /* nothing */
#endif /* !ENETDOWN */
#ifdef ENETUNREACH
#define POSIX_ENETUNREACH_DEF \
	{ "ENETUNREACH", (DeeObject *)&posix_ENETUNREACH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Network is unreachable" },
#if ENETUNREACH >= 0
#if ENETUNREACH == 0
#define posix_ENETUNREACH DeeInt_Zero
#elif ENETUNREACH == 1
#define posix_ENETUNREACH DeeInt_One
#elif ENETUNREACH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENETUNREACH, ENETUNREACH);
#else
PRIVATE DEFINE_UINT75(posix_ENETUNREACH, ENETUNREACH);
#endif
#else /* ENETUNREACH >= 0 */
#if ENETUNREACH == -1
#define posix_ENETUNREACH DeeInt_MinusOne
#elif ENETUNREACH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENETUNREACH, ENETUNREACH);
#elif ENETUNREACH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENETUNREACH, ENETUNREACH);
#else
PRIVATE DEFINE_INT75(posix_ENETUNREACH, ENETUNREACH);
#endif
#endif /* ENETUNREACH < 0 */
#else /* ENETUNREACH */
#define POSIX_ENETUNREACH_DEF /* nothing */
#endif /* !ENETUNREACH */
#ifdef ENETRESET
#define POSIX_ENETRESET_DEF \
	{ "ENETRESET", (DeeObject *)&posix_ENETRESET, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Network dropped connection because of reset" },
#if ENETRESET >= 0
#if ENETRESET == 0
#define posix_ENETRESET DeeInt_Zero
#elif ENETRESET == 1
#define posix_ENETRESET DeeInt_One
#elif ENETRESET <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENETRESET, ENETRESET);
#elif ENETRESET <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENETRESET, ENETRESET);
#elif ENETRESET <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENETRESET, ENETRESET);
#elif ENETRESET <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENETRESET, ENETRESET);
#else
PRIVATE DEFINE_UINT75(posix_ENETRESET, ENETRESET);
#endif
#else /* ENETRESET >= 0 */
#if ENETRESET == -1
#define posix_ENETRESET DeeInt_MinusOne
#elif ENETRESET >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENETRESET, ENETRESET);
#elif ENETRESET >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENETRESET, ENETRESET);
#elif ENETRESET >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENETRESET, ENETRESET);
#elif ENETRESET >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENETRESET, ENETRESET);
#else
PRIVATE DEFINE_INT75(posix_ENETRESET, ENETRESET);
#endif
#endif /* ENETRESET < 0 */
#else /* ENETRESET */
#define POSIX_ENETRESET_DEF /* nothing */
#endif /* !ENETRESET */
#ifdef ECONNABORTED
#define POSIX_ECONNABORTED_DEF \
	{ "ECONNABORTED", (DeeObject *)&posix_ECONNABORTED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Software caused connection abort" },
#if ECONNABORTED >= 0
#if ECONNABORTED == 0
#define posix_ECONNABORTED DeeInt_Zero
#elif ECONNABORTED == 1
#define posix_ECONNABORTED DeeInt_One
#elif ECONNABORTED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECONNABORTED, ECONNABORTED);
#else
PRIVATE DEFINE_UINT75(posix_ECONNABORTED, ECONNABORTED);
#endif
#else /* ECONNABORTED >= 0 */
#if ECONNABORTED == -1
#define posix_ECONNABORTED DeeInt_MinusOne
#elif ECONNABORTED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECONNABORTED, ECONNABORTED);
#elif ECONNABORTED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECONNABORTED, ECONNABORTED);
#else
PRIVATE DEFINE_INT75(posix_ECONNABORTED, ECONNABORTED);
#endif
#endif /* ECONNABORTED < 0 */
#else /* ECONNABORTED */
#define POSIX_ECONNABORTED_DEF /* nothing */
#endif /* !ECONNABORTED */
#ifdef ECONNRESET
#define POSIX_ECONNRESET_DEF \
	{ "ECONNRESET", (DeeObject *)&posix_ECONNRESET, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Connection reset by peer" },
#if ECONNRESET >= 0
#if ECONNRESET == 0
#define posix_ECONNRESET DeeInt_Zero
#elif ECONNRESET == 1
#define posix_ECONNRESET DeeInt_One
#elif ECONNRESET <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECONNRESET, ECONNRESET);
#else
PRIVATE DEFINE_UINT75(posix_ECONNRESET, ECONNRESET);
#endif
#else /* ECONNRESET >= 0 */
#if ECONNRESET == -1
#define posix_ECONNRESET DeeInt_MinusOne
#elif ECONNRESET >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECONNRESET, ECONNRESET);
#elif ECONNRESET >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECONNRESET, ECONNRESET);
#else
PRIVATE DEFINE_INT75(posix_ECONNRESET, ECONNRESET);
#endif
#endif /* ECONNRESET < 0 */
#else /* ECONNRESET */
#define POSIX_ECONNRESET_DEF /* nothing */
#endif /* !ECONNRESET */
#ifdef ENOBUFS
#define POSIX_ENOBUFS_DEF \
	{ "ENOBUFS", (DeeObject *)&posix_ENOBUFS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No buffer space available" },
#if ENOBUFS >= 0
#if ENOBUFS == 0
#define posix_ENOBUFS DeeInt_Zero
#elif ENOBUFS == 1
#define posix_ENOBUFS DeeInt_One
#elif ENOBUFS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOBUFS, ENOBUFS);
#else
PRIVATE DEFINE_UINT75(posix_ENOBUFS, ENOBUFS);
#endif
#else /* ENOBUFS >= 0 */
#if ENOBUFS == -1
#define posix_ENOBUFS DeeInt_MinusOne
#elif ENOBUFS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOBUFS, ENOBUFS);
#elif ENOBUFS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOBUFS, ENOBUFS);
#else
PRIVATE DEFINE_INT75(posix_ENOBUFS, ENOBUFS);
#endif
#endif /* ENOBUFS < 0 */
#else /* ENOBUFS */
#define POSIX_ENOBUFS_DEF /* nothing */
#endif /* !ENOBUFS */
#ifdef EISCONN
#define POSIX_EISCONN_DEF \
	{ "EISCONN", (DeeObject *)&posix_EISCONN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Transport endpoint is already connected" },
#if EISCONN >= 0
#if EISCONN == 0
#define posix_EISCONN DeeInt_Zero
#elif EISCONN == 1
#define posix_EISCONN DeeInt_One
#elif EISCONN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EISCONN, EISCONN);
#elif EISCONN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EISCONN, EISCONN);
#elif EISCONN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EISCONN, EISCONN);
#elif EISCONN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EISCONN, EISCONN);
#else
PRIVATE DEFINE_UINT75(posix_EISCONN, EISCONN);
#endif
#else /* EISCONN >= 0 */
#if EISCONN == -1
#define posix_EISCONN DeeInt_MinusOne
#elif EISCONN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EISCONN, EISCONN);
#elif EISCONN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EISCONN, EISCONN);
#elif EISCONN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EISCONN, EISCONN);
#elif EISCONN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EISCONN, EISCONN);
#else
PRIVATE DEFINE_INT75(posix_EISCONN, EISCONN);
#endif
#endif /* EISCONN < 0 */
#else /* EISCONN */
#define POSIX_EISCONN_DEF /* nothing */
#endif /* !EISCONN */
#ifdef ENOTCONN
#define POSIX_ENOTCONN_DEF \
	{ "ENOTCONN", (DeeObject *)&posix_ENOTCONN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Transport endpoint is not connected" },
#if ENOTCONN >= 0
#if ENOTCONN == 0
#define posix_ENOTCONN DeeInt_Zero
#elif ENOTCONN == 1
#define posix_ENOTCONN DeeInt_One
#elif ENOTCONN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTCONN, ENOTCONN);
#else
PRIVATE DEFINE_UINT75(posix_ENOTCONN, ENOTCONN);
#endif
#else /* ENOTCONN >= 0 */
#if ENOTCONN == -1
#define posix_ENOTCONN DeeInt_MinusOne
#elif ENOTCONN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTCONN, ENOTCONN);
#elif ENOTCONN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTCONN, ENOTCONN);
#else
PRIVATE DEFINE_INT75(posix_ENOTCONN, ENOTCONN);
#endif
#endif /* ENOTCONN < 0 */
#else /* ENOTCONN */
#define POSIX_ENOTCONN_DEF /* nothing */
#endif /* !ENOTCONN */
#ifdef ESHUTDOWN
#define POSIX_ESHUTDOWN_DEF \
	{ "ESHUTDOWN", (DeeObject *)&posix_ESHUTDOWN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Cannot send after transport endpoint shutdown" },
#if ESHUTDOWN >= 0
#if ESHUTDOWN == 0
#define posix_ESHUTDOWN DeeInt_Zero
#elif ESHUTDOWN == 1
#define posix_ESHUTDOWN DeeInt_One
#elif ESHUTDOWN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESHUTDOWN, ESHUTDOWN);
#else
PRIVATE DEFINE_UINT75(posix_ESHUTDOWN, ESHUTDOWN);
#endif
#else /* ESHUTDOWN >= 0 */
#if ESHUTDOWN == -1
#define posix_ESHUTDOWN DeeInt_MinusOne
#elif ESHUTDOWN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESHUTDOWN, ESHUTDOWN);
#elif ESHUTDOWN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESHUTDOWN, ESHUTDOWN);
#else
PRIVATE DEFINE_INT75(posix_ESHUTDOWN, ESHUTDOWN);
#endif
#endif /* ESHUTDOWN < 0 */
#else /* ESHUTDOWN */
#define POSIX_ESHUTDOWN_DEF /* nothing */
#endif /* !ESHUTDOWN */
#ifdef ETOOMANYREFS
#define POSIX_ETOOMANYREFS_DEF \
	{ "ETOOMANYREFS", (DeeObject *)&posix_ETOOMANYREFS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Too many references: cannot splice" },
#if ETOOMANYREFS >= 0
#if ETOOMANYREFS == 0
#define posix_ETOOMANYREFS DeeInt_Zero
#elif ETOOMANYREFS == 1
#define posix_ETOOMANYREFS DeeInt_One
#elif ETOOMANYREFS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ETOOMANYREFS, ETOOMANYREFS);
#else
PRIVATE DEFINE_UINT75(posix_ETOOMANYREFS, ETOOMANYREFS);
#endif
#else /* ETOOMANYREFS >= 0 */
#if ETOOMANYREFS == -1
#define posix_ETOOMANYREFS DeeInt_MinusOne
#elif ETOOMANYREFS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ETOOMANYREFS, ETOOMANYREFS);
#elif ETOOMANYREFS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ETOOMANYREFS, ETOOMANYREFS);
#else
PRIVATE DEFINE_INT75(posix_ETOOMANYREFS, ETOOMANYREFS);
#endif
#endif /* ETOOMANYREFS < 0 */
#else /* ETOOMANYREFS */
#define POSIX_ETOOMANYREFS_DEF /* nothing */
#endif /* !ETOOMANYREFS */
#ifdef ETIMEDOUT
#define POSIX_ETIMEDOUT_DEF \
	{ "ETIMEDOUT", (DeeObject *)&posix_ETIMEDOUT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Connection timed out" },
#if ETIMEDOUT >= 0
#if ETIMEDOUT == 0
#define posix_ETIMEDOUT DeeInt_Zero
#elif ETIMEDOUT == 1
#define posix_ETIMEDOUT DeeInt_One
#elif ETIMEDOUT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ETIMEDOUT, ETIMEDOUT);
#else
PRIVATE DEFINE_UINT75(posix_ETIMEDOUT, ETIMEDOUT);
#endif
#else /* ETIMEDOUT >= 0 */
#if ETIMEDOUT == -1
#define posix_ETIMEDOUT DeeInt_MinusOne
#elif ETIMEDOUT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ETIMEDOUT, ETIMEDOUT);
#elif ETIMEDOUT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ETIMEDOUT, ETIMEDOUT);
#else
PRIVATE DEFINE_INT75(posix_ETIMEDOUT, ETIMEDOUT);
#endif
#endif /* ETIMEDOUT < 0 */
#else /* ETIMEDOUT */
#define POSIX_ETIMEDOUT_DEF /* nothing */
#endif /* !ETIMEDOUT */
#ifdef ECONNREFUSED
#define POSIX_ECONNREFUSED_DEF \
	{ "ECONNREFUSED", (DeeObject *)&posix_ECONNREFUSED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Connection refused" },
#if ECONNREFUSED >= 0
#if ECONNREFUSED == 0
#define posix_ECONNREFUSED DeeInt_Zero
#elif ECONNREFUSED == 1
#define posix_ECONNREFUSED DeeInt_One
#elif ECONNREFUSED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECONNREFUSED, ECONNREFUSED);
#else
PRIVATE DEFINE_UINT75(posix_ECONNREFUSED, ECONNREFUSED);
#endif
#else /* ECONNREFUSED >= 0 */
#if ECONNREFUSED == -1
#define posix_ECONNREFUSED DeeInt_MinusOne
#elif ECONNREFUSED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECONNREFUSED, ECONNREFUSED);
#elif ECONNREFUSED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECONNREFUSED, ECONNREFUSED);
#else
PRIVATE DEFINE_INT75(posix_ECONNREFUSED, ECONNREFUSED);
#endif
#endif /* ECONNREFUSED < 0 */
#else /* ECONNREFUSED */
#define POSIX_ECONNREFUSED_DEF /* nothing */
#endif /* !ECONNREFUSED */
#ifdef EHOSTDOWN
#define POSIX_EHOSTDOWN_DEF \
	{ "EHOSTDOWN", (DeeObject *)&posix_EHOSTDOWN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Host is down" },
#if EHOSTDOWN >= 0
#if EHOSTDOWN == 0
#define posix_EHOSTDOWN DeeInt_Zero
#elif EHOSTDOWN == 1
#define posix_EHOSTDOWN DeeInt_One
#elif EHOSTDOWN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EHOSTDOWN, EHOSTDOWN);
#else
PRIVATE DEFINE_UINT75(posix_EHOSTDOWN, EHOSTDOWN);
#endif
#else /* EHOSTDOWN >= 0 */
#if EHOSTDOWN == -1
#define posix_EHOSTDOWN DeeInt_MinusOne
#elif EHOSTDOWN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EHOSTDOWN, EHOSTDOWN);
#elif EHOSTDOWN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EHOSTDOWN, EHOSTDOWN);
#else
PRIVATE DEFINE_INT75(posix_EHOSTDOWN, EHOSTDOWN);
#endif
#endif /* EHOSTDOWN < 0 */
#else /* EHOSTDOWN */
#define POSIX_EHOSTDOWN_DEF /* nothing */
#endif /* !EHOSTDOWN */
#ifdef EHOSTUNREACH
#define POSIX_EHOSTUNREACH_DEF \
	{ "EHOSTUNREACH", (DeeObject *)&posix_EHOSTUNREACH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No route to host" },
#if EHOSTUNREACH >= 0
#if EHOSTUNREACH == 0
#define posix_EHOSTUNREACH DeeInt_Zero
#elif EHOSTUNREACH == 1
#define posix_EHOSTUNREACH DeeInt_One
#elif EHOSTUNREACH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EHOSTUNREACH, EHOSTUNREACH);
#else
PRIVATE DEFINE_UINT75(posix_EHOSTUNREACH, EHOSTUNREACH);
#endif
#else /* EHOSTUNREACH >= 0 */
#if EHOSTUNREACH == -1
#define posix_EHOSTUNREACH DeeInt_MinusOne
#elif EHOSTUNREACH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EHOSTUNREACH, EHOSTUNREACH);
#elif EHOSTUNREACH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EHOSTUNREACH, EHOSTUNREACH);
#else
PRIVATE DEFINE_INT75(posix_EHOSTUNREACH, EHOSTUNREACH);
#endif
#endif /* EHOSTUNREACH < 0 */
#else /* EHOSTUNREACH */
#define POSIX_EHOSTUNREACH_DEF /* nothing */
#endif /* !EHOSTUNREACH */
#ifdef EALREADY
#define POSIX_EALREADY_DEF \
	{ "EALREADY", (DeeObject *)&posix_EALREADY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation already in progress" },
#if EALREADY >= 0
#if EALREADY == 0
#define posix_EALREADY DeeInt_Zero
#elif EALREADY == 1
#define posix_EALREADY DeeInt_One
#elif EALREADY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EALREADY, EALREADY);
#elif EALREADY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EALREADY, EALREADY);
#elif EALREADY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EALREADY, EALREADY);
#elif EALREADY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EALREADY, EALREADY);
#else
PRIVATE DEFINE_UINT75(posix_EALREADY, EALREADY);
#endif
#else /* EALREADY >= 0 */
#if EALREADY == -1
#define posix_EALREADY DeeInt_MinusOne
#elif EALREADY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EALREADY, EALREADY);
#elif EALREADY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EALREADY, EALREADY);
#elif EALREADY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EALREADY, EALREADY);
#elif EALREADY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EALREADY, EALREADY);
#else
PRIVATE DEFINE_INT75(posix_EALREADY, EALREADY);
#endif
#endif /* EALREADY < 0 */
#else /* EALREADY */
#define POSIX_EALREADY_DEF /* nothing */
#endif /* !EALREADY */
#ifdef EINPROGRESS
#define POSIX_EINPROGRESS_DEF \
	{ "EINPROGRESS", (DeeObject *)&posix_EINPROGRESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation now in progress" },
#if EINPROGRESS >= 0
#if EINPROGRESS == 0
#define posix_EINPROGRESS DeeInt_Zero
#elif EINPROGRESS == 1
#define posix_EINPROGRESS DeeInt_One
#elif EINPROGRESS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EINPROGRESS, EINPROGRESS);
#else
PRIVATE DEFINE_UINT75(posix_EINPROGRESS, EINPROGRESS);
#endif
#else /* EINPROGRESS >= 0 */
#if EINPROGRESS == -1
#define posix_EINPROGRESS DeeInt_MinusOne
#elif EINPROGRESS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EINPROGRESS, EINPROGRESS);
#elif EINPROGRESS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EINPROGRESS, EINPROGRESS);
#else
PRIVATE DEFINE_INT75(posix_EINPROGRESS, EINPROGRESS);
#endif
#endif /* EINPROGRESS < 0 */
#else /* EINPROGRESS */
#define POSIX_EINPROGRESS_DEF /* nothing */
#endif /* !EINPROGRESS */
#ifdef ESTALE
#define POSIX_ESTALE_DEF \
	{ "ESTALE", (DeeObject *)&posix_ESTALE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Stale NFS file handle" },
#if ESTALE >= 0
#if ESTALE == 0
#define posix_ESTALE DeeInt_Zero
#elif ESTALE == 1
#define posix_ESTALE DeeInt_One
#elif ESTALE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ESTALE, ESTALE);
#elif ESTALE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ESTALE, ESTALE);
#elif ESTALE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ESTALE, ESTALE);
#elif ESTALE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ESTALE, ESTALE);
#else
PRIVATE DEFINE_UINT75(posix_ESTALE, ESTALE);
#endif
#else /* ESTALE >= 0 */
#if ESTALE == -1
#define posix_ESTALE DeeInt_MinusOne
#elif ESTALE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ESTALE, ESTALE);
#elif ESTALE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ESTALE, ESTALE);
#elif ESTALE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ESTALE, ESTALE);
#elif ESTALE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ESTALE, ESTALE);
#else
PRIVATE DEFINE_INT75(posix_ESTALE, ESTALE);
#endif
#endif /* ESTALE < 0 */
#else /* ESTALE */
#define POSIX_ESTALE_DEF /* nothing */
#endif /* !ESTALE */
#ifdef EUCLEAN
#define POSIX_EUCLEAN_DEF \
	{ "EUCLEAN", (DeeObject *)&posix_EUCLEAN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Structure needs cleaning" },
#if EUCLEAN >= 0
#if EUCLEAN == 0
#define posix_EUCLEAN DeeInt_Zero
#elif EUCLEAN == 1
#define posix_EUCLEAN DeeInt_One
#elif EUCLEAN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EUCLEAN, EUCLEAN);
#else
PRIVATE DEFINE_UINT75(posix_EUCLEAN, EUCLEAN);
#endif
#else /* EUCLEAN >= 0 */
#if EUCLEAN == -1
#define posix_EUCLEAN DeeInt_MinusOne
#elif EUCLEAN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EUCLEAN, EUCLEAN);
#elif EUCLEAN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EUCLEAN, EUCLEAN);
#else
PRIVATE DEFINE_INT75(posix_EUCLEAN, EUCLEAN);
#endif
#endif /* EUCLEAN < 0 */
#else /* EUCLEAN */
#define POSIX_EUCLEAN_DEF /* nothing */
#endif /* !EUCLEAN */
#ifdef ENOTNAM
#define POSIX_ENOTNAM_DEF \
	{ "ENOTNAM", (DeeObject *)&posix_ENOTNAM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Not a XENIX named type file" },
#if ENOTNAM >= 0
#if ENOTNAM == 0
#define posix_ENOTNAM DeeInt_Zero
#elif ENOTNAM == 1
#define posix_ENOTNAM DeeInt_One
#elif ENOTNAM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTNAM, ENOTNAM);
#else
PRIVATE DEFINE_UINT75(posix_ENOTNAM, ENOTNAM);
#endif
#else /* ENOTNAM >= 0 */
#if ENOTNAM == -1
#define posix_ENOTNAM DeeInt_MinusOne
#elif ENOTNAM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTNAM, ENOTNAM);
#elif ENOTNAM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTNAM, ENOTNAM);
#else
PRIVATE DEFINE_INT75(posix_ENOTNAM, ENOTNAM);
#endif
#endif /* ENOTNAM < 0 */
#else /* ENOTNAM */
#define POSIX_ENOTNAM_DEF /* nothing */
#endif /* !ENOTNAM */
#ifdef ENAVAIL
#define POSIX_ENAVAIL_DEF \
	{ "ENAVAIL", (DeeObject *)&posix_ENAVAIL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No XENIX semaphores available" },
#if ENAVAIL >= 0
#if ENAVAIL == 0
#define posix_ENAVAIL DeeInt_Zero
#elif ENAVAIL == 1
#define posix_ENAVAIL DeeInt_One
#elif ENAVAIL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENAVAIL, ENAVAIL);
#else
PRIVATE DEFINE_UINT75(posix_ENAVAIL, ENAVAIL);
#endif
#else /* ENAVAIL >= 0 */
#if ENAVAIL == -1
#define posix_ENAVAIL DeeInt_MinusOne
#elif ENAVAIL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENAVAIL, ENAVAIL);
#elif ENAVAIL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENAVAIL, ENAVAIL);
#else
PRIVATE DEFINE_INT75(posix_ENAVAIL, ENAVAIL);
#endif
#endif /* ENAVAIL < 0 */
#else /* ENAVAIL */
#define POSIX_ENAVAIL_DEF /* nothing */
#endif /* !ENAVAIL */
#ifdef EISNAM
#define POSIX_EISNAM_DEF \
	{ "EISNAM", (DeeObject *)&posix_EISNAM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Is a named type file" },
#if EISNAM >= 0
#if EISNAM == 0
#define posix_EISNAM DeeInt_Zero
#elif EISNAM == 1
#define posix_EISNAM DeeInt_One
#elif EISNAM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EISNAM, EISNAM);
#elif EISNAM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EISNAM, EISNAM);
#elif EISNAM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EISNAM, EISNAM);
#elif EISNAM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EISNAM, EISNAM);
#else
PRIVATE DEFINE_UINT75(posix_EISNAM, EISNAM);
#endif
#else /* EISNAM >= 0 */
#if EISNAM == -1
#define posix_EISNAM DeeInt_MinusOne
#elif EISNAM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EISNAM, EISNAM);
#elif EISNAM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EISNAM, EISNAM);
#elif EISNAM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EISNAM, EISNAM);
#elif EISNAM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EISNAM, EISNAM);
#else
PRIVATE DEFINE_INT75(posix_EISNAM, EISNAM);
#endif
#endif /* EISNAM < 0 */
#else /* EISNAM */
#define POSIX_EISNAM_DEF /* nothing */
#endif /* !EISNAM */
#ifdef EREMOTEIO
#define POSIX_EREMOTEIO_DEF \
	{ "EREMOTEIO", (DeeObject *)&posix_EREMOTEIO, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Remote I/O error" },
#if EREMOTEIO >= 0
#if EREMOTEIO == 0
#define posix_EREMOTEIO DeeInt_Zero
#elif EREMOTEIO == 1
#define posix_EREMOTEIO DeeInt_One
#elif EREMOTEIO <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EREMOTEIO, EREMOTEIO);
#else
PRIVATE DEFINE_UINT75(posix_EREMOTEIO, EREMOTEIO);
#endif
#else /* EREMOTEIO >= 0 */
#if EREMOTEIO == -1
#define posix_EREMOTEIO DeeInt_MinusOne
#elif EREMOTEIO >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EREMOTEIO, EREMOTEIO);
#elif EREMOTEIO >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EREMOTEIO, EREMOTEIO);
#else
PRIVATE DEFINE_INT75(posix_EREMOTEIO, EREMOTEIO);
#endif
#endif /* EREMOTEIO < 0 */
#else /* EREMOTEIO */
#define POSIX_EREMOTEIO_DEF /* nothing */
#endif /* !EREMOTEIO */
#ifdef EDQUOT
#define POSIX_EDQUOT_DEF \
	{ "EDQUOT", (DeeObject *)&posix_EDQUOT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Quota exceeded" },
#if EDQUOT >= 0
#if EDQUOT == 0
#define posix_EDQUOT DeeInt_Zero
#elif EDQUOT == 1
#define posix_EDQUOT DeeInt_One
#elif EDQUOT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EDQUOT, EDQUOT);
#elif EDQUOT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EDQUOT, EDQUOT);
#elif EDQUOT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EDQUOT, EDQUOT);
#elif EDQUOT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EDQUOT, EDQUOT);
#else
PRIVATE DEFINE_UINT75(posix_EDQUOT, EDQUOT);
#endif
#else /* EDQUOT >= 0 */
#if EDQUOT == -1
#define posix_EDQUOT DeeInt_MinusOne
#elif EDQUOT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EDQUOT, EDQUOT);
#elif EDQUOT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EDQUOT, EDQUOT);
#elif EDQUOT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EDQUOT, EDQUOT);
#elif EDQUOT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EDQUOT, EDQUOT);
#else
PRIVATE DEFINE_INT75(posix_EDQUOT, EDQUOT);
#endif
#endif /* EDQUOT < 0 */
#else /* EDQUOT */
#define POSIX_EDQUOT_DEF /* nothing */
#endif /* !EDQUOT */
#ifdef ENOMEDIUM
#define POSIX_ENOMEDIUM_DEF \
	{ "ENOMEDIUM", (DeeObject *)&posix_ENOMEDIUM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No medium found" },
#if ENOMEDIUM >= 0
#if ENOMEDIUM == 0
#define posix_ENOMEDIUM DeeInt_Zero
#elif ENOMEDIUM == 1
#define posix_ENOMEDIUM DeeInt_One
#elif ENOMEDIUM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOMEDIUM, ENOMEDIUM);
#else
PRIVATE DEFINE_UINT75(posix_ENOMEDIUM, ENOMEDIUM);
#endif
#else /* ENOMEDIUM >= 0 */
#if ENOMEDIUM == -1
#define posix_ENOMEDIUM DeeInt_MinusOne
#elif ENOMEDIUM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOMEDIUM, ENOMEDIUM);
#elif ENOMEDIUM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOMEDIUM, ENOMEDIUM);
#else
PRIVATE DEFINE_INT75(posix_ENOMEDIUM, ENOMEDIUM);
#endif
#endif /* ENOMEDIUM < 0 */
#else /* ENOMEDIUM */
#define POSIX_ENOMEDIUM_DEF /* nothing */
#endif /* !ENOMEDIUM */
#ifdef EMEDIUMTYPE
#define POSIX_EMEDIUMTYPE_DEF \
	{ "EMEDIUMTYPE", (DeeObject *)&posix_EMEDIUMTYPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Wrong medium type" },
#if EMEDIUMTYPE >= 0
#if EMEDIUMTYPE == 0
#define posix_EMEDIUMTYPE DeeInt_Zero
#elif EMEDIUMTYPE == 1
#define posix_EMEDIUMTYPE DeeInt_One
#elif EMEDIUMTYPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#else
PRIVATE DEFINE_UINT75(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#endif
#else /* EMEDIUMTYPE >= 0 */
#if EMEDIUMTYPE == -1
#define posix_EMEDIUMTYPE DeeInt_MinusOne
#elif EMEDIUMTYPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#elif EMEDIUMTYPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#else
PRIVATE DEFINE_INT75(posix_EMEDIUMTYPE, EMEDIUMTYPE);
#endif
#endif /* EMEDIUMTYPE < 0 */
#else /* EMEDIUMTYPE */
#define POSIX_EMEDIUMTYPE_DEF /* nothing */
#endif /* !EMEDIUMTYPE */
#ifdef ECANCELED
#define POSIX_ECANCELED_DEF \
	{ "ECANCELED", (DeeObject *)&posix_ECANCELED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation Canceled" },
#if ECANCELED >= 0
#if ECANCELED == 0
#define posix_ECANCELED DeeInt_Zero
#elif ECANCELED == 1
#define posix_ECANCELED DeeInt_One
#elif ECANCELED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECANCELED, ECANCELED);
#elif ECANCELED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECANCELED, ECANCELED);
#elif ECANCELED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECANCELED, ECANCELED);
#elif ECANCELED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECANCELED, ECANCELED);
#else
PRIVATE DEFINE_UINT75(posix_ECANCELED, ECANCELED);
#endif
#else /* ECANCELED >= 0 */
#if ECANCELED == -1
#define posix_ECANCELED DeeInt_MinusOne
#elif ECANCELED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECANCELED, ECANCELED);
#elif ECANCELED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECANCELED, ECANCELED);
#elif ECANCELED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECANCELED, ECANCELED);
#elif ECANCELED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECANCELED, ECANCELED);
#else
PRIVATE DEFINE_INT75(posix_ECANCELED, ECANCELED);
#endif
#endif /* ECANCELED < 0 */
#else /* ECANCELED */
#define POSIX_ECANCELED_DEF /* nothing */
#endif /* !ECANCELED */
#ifdef ENOKEY
#define POSIX_ENOKEY_DEF \
	{ "ENOKEY", (DeeObject *)&posix_ENOKEY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Required key not available" },
#if ENOKEY >= 0
#if ENOKEY == 0
#define posix_ENOKEY DeeInt_Zero
#elif ENOKEY == 1
#define posix_ENOKEY DeeInt_One
#elif ENOKEY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOKEY, ENOKEY);
#elif ENOKEY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOKEY, ENOKEY);
#elif ENOKEY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOKEY, ENOKEY);
#elif ENOKEY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOKEY, ENOKEY);
#else
PRIVATE DEFINE_UINT75(posix_ENOKEY, ENOKEY);
#endif
#else /* ENOKEY >= 0 */
#if ENOKEY == -1
#define posix_ENOKEY DeeInt_MinusOne
#elif ENOKEY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOKEY, ENOKEY);
#elif ENOKEY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOKEY, ENOKEY);
#elif ENOKEY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOKEY, ENOKEY);
#elif ENOKEY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOKEY, ENOKEY);
#else
PRIVATE DEFINE_INT75(posix_ENOKEY, ENOKEY);
#endif
#endif /* ENOKEY < 0 */
#else /* ENOKEY */
#define POSIX_ENOKEY_DEF /* nothing */
#endif /* !ENOKEY */
#ifdef EKEYEXPIRED
#define POSIX_EKEYEXPIRED_DEF \
	{ "EKEYEXPIRED", (DeeObject *)&posix_EKEYEXPIRED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Key has expired" },
#if EKEYEXPIRED >= 0
#if EKEYEXPIRED == 0
#define posix_EKEYEXPIRED DeeInt_Zero
#elif EKEYEXPIRED == 1
#define posix_EKEYEXPIRED DeeInt_One
#elif EKEYEXPIRED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EKEYEXPIRED, EKEYEXPIRED);
#else
PRIVATE DEFINE_UINT75(posix_EKEYEXPIRED, EKEYEXPIRED);
#endif
#else /* EKEYEXPIRED >= 0 */
#if EKEYEXPIRED == -1
#define posix_EKEYEXPIRED DeeInt_MinusOne
#elif EKEYEXPIRED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EKEYEXPIRED, EKEYEXPIRED);
#elif EKEYEXPIRED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EKEYEXPIRED, EKEYEXPIRED);
#else
PRIVATE DEFINE_INT75(posix_EKEYEXPIRED, EKEYEXPIRED);
#endif
#endif /* EKEYEXPIRED < 0 */
#else /* EKEYEXPIRED */
#define POSIX_EKEYEXPIRED_DEF /* nothing */
#endif /* !EKEYEXPIRED */
#ifdef EKEYREVOKED
#define POSIX_EKEYREVOKED_DEF \
	{ "EKEYREVOKED", (DeeObject *)&posix_EKEYREVOKED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Key has been revoked" },
#if EKEYREVOKED >= 0
#if EKEYREVOKED == 0
#define posix_EKEYREVOKED DeeInt_Zero
#elif EKEYREVOKED == 1
#define posix_EKEYREVOKED DeeInt_One
#elif EKEYREVOKED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EKEYREVOKED, EKEYREVOKED);
#else
PRIVATE DEFINE_UINT75(posix_EKEYREVOKED, EKEYREVOKED);
#endif
#else /* EKEYREVOKED >= 0 */
#if EKEYREVOKED == -1
#define posix_EKEYREVOKED DeeInt_MinusOne
#elif EKEYREVOKED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EKEYREVOKED, EKEYREVOKED);
#elif EKEYREVOKED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EKEYREVOKED, EKEYREVOKED);
#else
PRIVATE DEFINE_INT75(posix_EKEYREVOKED, EKEYREVOKED);
#endif
#endif /* EKEYREVOKED < 0 */
#else /* EKEYREVOKED */
#define POSIX_EKEYREVOKED_DEF /* nothing */
#endif /* !EKEYREVOKED */
#ifdef EKEYREJECTED
#define POSIX_EKEYREJECTED_DEF \
	{ "EKEYREJECTED", (DeeObject *)&posix_EKEYREJECTED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Key was rejected by service" },
#if EKEYREJECTED >= 0
#if EKEYREJECTED == 0
#define posix_EKEYREJECTED DeeInt_Zero
#elif EKEYREJECTED == 1
#define posix_EKEYREJECTED DeeInt_One
#elif EKEYREJECTED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EKEYREJECTED, EKEYREJECTED);
#else
PRIVATE DEFINE_UINT75(posix_EKEYREJECTED, EKEYREJECTED);
#endif
#else /* EKEYREJECTED >= 0 */
#if EKEYREJECTED == -1
#define posix_EKEYREJECTED DeeInt_MinusOne
#elif EKEYREJECTED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EKEYREJECTED, EKEYREJECTED);
#elif EKEYREJECTED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EKEYREJECTED, EKEYREJECTED);
#else
PRIVATE DEFINE_INT75(posix_EKEYREJECTED, EKEYREJECTED);
#endif
#endif /* EKEYREJECTED < 0 */
#else /* EKEYREJECTED */
#define POSIX_EKEYREJECTED_DEF /* nothing */
#endif /* !EKEYREJECTED */
#ifdef EOWNERDEAD
#define POSIX_EOWNERDEAD_DEF \
	{ "EOWNERDEAD", (DeeObject *)&posix_EOWNERDEAD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Owner died" },
#if EOWNERDEAD >= 0
#if EOWNERDEAD == 0
#define posix_EOWNERDEAD DeeInt_Zero
#elif EOWNERDEAD == 1
#define posix_EOWNERDEAD DeeInt_One
#elif EOWNERDEAD <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EOWNERDEAD, EOWNERDEAD);
#else
PRIVATE DEFINE_UINT75(posix_EOWNERDEAD, EOWNERDEAD);
#endif
#else /* EOWNERDEAD >= 0 */
#if EOWNERDEAD == -1
#define posix_EOWNERDEAD DeeInt_MinusOne
#elif EOWNERDEAD >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EOWNERDEAD, EOWNERDEAD);
#elif EOWNERDEAD >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EOWNERDEAD, EOWNERDEAD);
#else
PRIVATE DEFINE_INT75(posix_EOWNERDEAD, EOWNERDEAD);
#endif
#endif /* EOWNERDEAD < 0 */
#else /* EOWNERDEAD */
#define POSIX_EOWNERDEAD_DEF /* nothing */
#endif /* !EOWNERDEAD */
#ifdef ENOTRECOVERABLE
#define POSIX_ENOTRECOVERABLE_DEF \
	{ "ENOTRECOVERABLE", (DeeObject *)&posix_ENOTRECOVERABLE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "State not recoverable" },
#if ENOTRECOVERABLE >= 0
#if ENOTRECOVERABLE == 0
#define posix_ENOTRECOVERABLE DeeInt_Zero
#elif ENOTRECOVERABLE == 1
#define posix_ENOTRECOVERABLE DeeInt_One
#elif ENOTRECOVERABLE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#else
PRIVATE DEFINE_UINT75(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#endif
#else /* ENOTRECOVERABLE >= 0 */
#if ENOTRECOVERABLE == -1
#define posix_ENOTRECOVERABLE DeeInt_MinusOne
#elif ENOTRECOVERABLE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#elif ENOTRECOVERABLE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#else
PRIVATE DEFINE_INT75(posix_ENOTRECOVERABLE, ENOTRECOVERABLE);
#endif
#endif /* ENOTRECOVERABLE < 0 */
#else /* ENOTRECOVERABLE */
#define POSIX_ENOTRECOVERABLE_DEF /* nothing */
#endif /* !ENOTRECOVERABLE */
#ifdef ERFKILL
#define POSIX_ERFKILL_DEF \
	{ "ERFKILL", (DeeObject *)&posix_ERFKILL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Operation not possible due to RF-kill" },
#if ERFKILL >= 0
#if ERFKILL == 0
#define posix_ERFKILL DeeInt_Zero
#elif ERFKILL == 1
#define posix_ERFKILL DeeInt_One
#elif ERFKILL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ERFKILL, ERFKILL);
#elif ERFKILL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ERFKILL, ERFKILL);
#elif ERFKILL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ERFKILL, ERFKILL);
#elif ERFKILL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ERFKILL, ERFKILL);
#else
PRIVATE DEFINE_UINT75(posix_ERFKILL, ERFKILL);
#endif
#else /* ERFKILL >= 0 */
#if ERFKILL == -1
#define posix_ERFKILL DeeInt_MinusOne
#elif ERFKILL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ERFKILL, ERFKILL);
#elif ERFKILL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ERFKILL, ERFKILL);
#elif ERFKILL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ERFKILL, ERFKILL);
#elif ERFKILL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ERFKILL, ERFKILL);
#else
PRIVATE DEFINE_INT75(posix_ERFKILL, ERFKILL);
#endif
#endif /* ERFKILL < 0 */
#else /* ERFKILL */
#define POSIX_ERFKILL_DEF /* nothing */
#endif /* !ERFKILL */
#ifdef EHWPOISON
#define POSIX_EHWPOISON_DEF \
	{ "EHWPOISON", (DeeObject *)&posix_EHWPOISON, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Memory page has hardware error" },
#if EHWPOISON >= 0
#if EHWPOISON == 0
#define posix_EHWPOISON DeeInt_Zero
#elif EHWPOISON == 1
#define posix_EHWPOISON DeeInt_One
#elif EHWPOISON <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EHWPOISON, EHWPOISON);
#else
PRIVATE DEFINE_UINT75(posix_EHWPOISON, EHWPOISON);
#endif
#else /* EHWPOISON >= 0 */
#if EHWPOISON == -1
#define posix_EHWPOISON DeeInt_MinusOne
#elif EHWPOISON >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EHWPOISON, EHWPOISON);
#elif EHWPOISON >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EHWPOISON, EHWPOISON);
#else
PRIVATE DEFINE_INT75(posix_EHWPOISON, EHWPOISON);
#endif
#endif /* EHWPOISON < 0 */
#else /* EHWPOISON */
#define POSIX_EHWPOISON_DEF /* nothing */
#endif /* !EHWPOISON */
#ifdef ELBIN
#define POSIX_ELBIN_DEF \
	{ "ELBIN", (DeeObject *)&posix_ELBIN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Inode is remote (not really error)" },
#if ELBIN >= 0
#if ELBIN == 0
#define posix_ELBIN DeeInt_Zero
#elif ELBIN == 1
#define posix_ELBIN DeeInt_One
#elif ELBIN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELBIN, ELBIN);
#elif ELBIN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELBIN, ELBIN);
#elif ELBIN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELBIN, ELBIN);
#elif ELBIN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELBIN, ELBIN);
#else
PRIVATE DEFINE_UINT75(posix_ELBIN, ELBIN);
#endif
#else /* ELBIN >= 0 */
#if ELBIN == -1
#define posix_ELBIN DeeInt_MinusOne
#elif ELBIN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELBIN, ELBIN);
#elif ELBIN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELBIN, ELBIN);
#elif ELBIN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELBIN, ELBIN);
#elif ELBIN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELBIN, ELBIN);
#else
PRIVATE DEFINE_INT75(posix_ELBIN, ELBIN);
#endif
#endif /* ELBIN < 0 */
#else /* ELBIN */
#define POSIX_ELBIN_DEF /* nothing */
#endif /* !ELBIN */
#ifdef EPROCLIM
#define POSIX_EPROCLIM_DEF \
	{ "EPROCLIM", (DeeObject *)&posix_EPROCLIM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EPROCLIM >= 0
#if EPROCLIM == 0
#define posix_EPROCLIM DeeInt_Zero
#elif EPROCLIM == 1
#define posix_EPROCLIM DeeInt_One
#elif EPROCLIM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROCLIM, EPROCLIM);
#else
PRIVATE DEFINE_UINT75(posix_EPROCLIM, EPROCLIM);
#endif
#else /* EPROCLIM >= 0 */
#if EPROCLIM == -1
#define posix_EPROCLIM DeeInt_MinusOne
#elif EPROCLIM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROCLIM, EPROCLIM);
#elif EPROCLIM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROCLIM, EPROCLIM);
#else
PRIVATE DEFINE_INT75(posix_EPROCLIM, EPROCLIM);
#endif
#endif /* EPROCLIM < 0 */
#else /* EPROCLIM */
#define POSIX_EPROCLIM_DEF /* nothing */
#endif /* !EPROCLIM */
#ifdef EFTYPE
#define POSIX_EFTYPE_DEF \
	{ "EFTYPE", (DeeObject *)&posix_EFTYPE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Inappropriate file type or format" },
#if EFTYPE >= 0
#if EFTYPE == 0
#define posix_EFTYPE DeeInt_Zero
#elif EFTYPE == 1
#define posix_EFTYPE DeeInt_One
#elif EFTYPE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EFTYPE, EFTYPE);
#elif EFTYPE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EFTYPE, EFTYPE);
#elif EFTYPE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EFTYPE, EFTYPE);
#elif EFTYPE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EFTYPE, EFTYPE);
#else
PRIVATE DEFINE_UINT75(posix_EFTYPE, EFTYPE);
#endif
#else /* EFTYPE >= 0 */
#if EFTYPE == -1
#define posix_EFTYPE DeeInt_MinusOne
#elif EFTYPE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EFTYPE, EFTYPE);
#elif EFTYPE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EFTYPE, EFTYPE);
#elif EFTYPE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EFTYPE, EFTYPE);
#elif EFTYPE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EFTYPE, EFTYPE);
#else
PRIVATE DEFINE_INT75(posix_EFTYPE, EFTYPE);
#endif
#endif /* EFTYPE < 0 */
#else /* EFTYPE */
#define POSIX_EFTYPE_DEF /* nothing */
#endif /* !EFTYPE */
#ifdef ENMFILE
#define POSIX_ENMFILE_DEF \
	{ "ENMFILE", (DeeObject *)&posix_ENMFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No more files" },
#if ENMFILE >= 0
#if ENMFILE == 0
#define posix_ENMFILE DeeInt_Zero
#elif ENMFILE == 1
#define posix_ENMFILE DeeInt_One
#elif ENMFILE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENMFILE, ENMFILE);
#elif ENMFILE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENMFILE, ENMFILE);
#elif ENMFILE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENMFILE, ENMFILE);
#elif ENMFILE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENMFILE, ENMFILE);
#else
PRIVATE DEFINE_UINT75(posix_ENMFILE, ENMFILE);
#endif
#else /* ENMFILE >= 0 */
#if ENMFILE == -1
#define posix_ENMFILE DeeInt_MinusOne
#elif ENMFILE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENMFILE, ENMFILE);
#elif ENMFILE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENMFILE, ENMFILE);
#elif ENMFILE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENMFILE, ENMFILE);
#elif ENMFILE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENMFILE, ENMFILE);
#else
PRIVATE DEFINE_INT75(posix_ENMFILE, ENMFILE);
#endif
#endif /* ENMFILE < 0 */
#else /* ENMFILE */
#define POSIX_ENMFILE_DEF /* nothing */
#endif /* !ENMFILE */
#ifdef ENOTSUP
#define POSIX_ENOTSUP_DEF \
	{ "ENOTSUP", (DeeObject *)&posix_ENOTSUP, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Not supported" },
#if ENOTSUP >= 0
#if ENOTSUP == 0
#define posix_ENOTSUP DeeInt_Zero
#elif ENOTSUP == 1
#define posix_ENOTSUP DeeInt_One
#elif ENOTSUP <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTSUP, ENOTSUP);
#else
PRIVATE DEFINE_UINT75(posix_ENOTSUP, ENOTSUP);
#endif
#else /* ENOTSUP >= 0 */
#if ENOTSUP == -1
#define posix_ENOTSUP DeeInt_MinusOne
#elif ENOTSUP >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTSUP, ENOTSUP);
#elif ENOTSUP >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTSUP, ENOTSUP);
#else
PRIVATE DEFINE_INT75(posix_ENOTSUP, ENOTSUP);
#endif
#endif /* ENOTSUP < 0 */
#else /* ENOTSUP */
#define POSIX_ENOTSUP_DEF /* nothing */
#endif /* !ENOTSUP */
#ifdef ENOSHARE
#define POSIX_ENOSHARE_DEF \
	{ "ENOSHARE", (DeeObject *)&posix_ENOSHARE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "No such host or network path" },
#if ENOSHARE >= 0
#if ENOSHARE == 0
#define posix_ENOSHARE DeeInt_Zero
#elif ENOSHARE == 1
#define posix_ENOSHARE DeeInt_One
#elif ENOSHARE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOSHARE, ENOSHARE);
#else
PRIVATE DEFINE_UINT75(posix_ENOSHARE, ENOSHARE);
#endif
#else /* ENOSHARE >= 0 */
#if ENOSHARE == -1
#define posix_ENOSHARE DeeInt_MinusOne
#elif ENOSHARE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOSHARE, ENOSHARE);
#elif ENOSHARE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOSHARE, ENOSHARE);
#else
PRIVATE DEFINE_INT75(posix_ENOSHARE, ENOSHARE);
#endif
#endif /* ENOSHARE < 0 */
#else /* ENOSHARE */
#define POSIX_ENOSHARE_DEF /* nothing */
#endif /* !ENOSHARE */
#ifdef ECASECLASH
#define POSIX_ECASECLASH_DEF \
	{ "ECASECLASH", (DeeObject *)&posix_ECASECLASH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Filename exists with different case" },
#if ECASECLASH >= 0
#if ECASECLASH == 0
#define posix_ECASECLASH DeeInt_Zero
#elif ECASECLASH == 1
#define posix_ECASECLASH DeeInt_One
#elif ECASECLASH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECASECLASH, ECASECLASH);
#else
PRIVATE DEFINE_UINT75(posix_ECASECLASH, ECASECLASH);
#endif
#else /* ECASECLASH >= 0 */
#if ECASECLASH == -1
#define posix_ECASECLASH DeeInt_MinusOne
#elif ECASECLASH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECASECLASH, ECASECLASH);
#elif ECASECLASH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECASECLASH, ECASECLASH);
#else
PRIVATE DEFINE_INT75(posix_ECASECLASH, ECASECLASH);
#endif
#endif /* ECASECLASH < 0 */
#else /* ECASECLASH */
#define POSIX_ECASECLASH_DEF /* nothing */
#endif /* !ECASECLASH */
#ifdef EOTHER
#define POSIX_EOTHER_DEF \
	{ "EOTHER", (DeeObject *)&posix_EOTHER, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Other" },
#if EOTHER >= 0
#if EOTHER == 0
#define posix_EOTHER DeeInt_Zero
#elif EOTHER == 1
#define posix_EOTHER DeeInt_One
#elif EOTHER <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EOTHER, EOTHER);
#elif EOTHER <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EOTHER, EOTHER);
#elif EOTHER <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EOTHER, EOTHER);
#elif EOTHER <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EOTHER, EOTHER);
#else
PRIVATE DEFINE_UINT75(posix_EOTHER, EOTHER);
#endif
#else /* EOTHER >= 0 */
#if EOTHER == -1
#define posix_EOTHER DeeInt_MinusOne
#elif EOTHER >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EOTHER, EOTHER);
#elif EOTHER >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EOTHER, EOTHER);
#elif EOTHER >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EOTHER, EOTHER);
#elif EOTHER >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EOTHER, EOTHER);
#else
PRIVATE DEFINE_INT75(posix_EOTHER, EOTHER);
#endif
#endif /* EOTHER < 0 */
#else /* EOTHER */
#define POSIX_EOTHER_DEF /* nothing */
#endif /* !EOTHER */
#ifdef EAUTH
#define POSIX_EAUTH_DEF \
	{ "EAUTH", (DeeObject *)&posix_EAUTH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EAUTH >= 0
#if EAUTH == 0
#define posix_EAUTH DeeInt_Zero
#elif EAUTH == 1
#define posix_EAUTH DeeInt_One
#elif EAUTH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EAUTH, EAUTH);
#elif EAUTH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EAUTH, EAUTH);
#elif EAUTH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EAUTH, EAUTH);
#elif EAUTH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EAUTH, EAUTH);
#else
PRIVATE DEFINE_UINT75(posix_EAUTH, EAUTH);
#endif
#else /* EAUTH >= 0 */
#if EAUTH == -1
#define posix_EAUTH DeeInt_MinusOne
#elif EAUTH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EAUTH, EAUTH);
#elif EAUTH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EAUTH, EAUTH);
#elif EAUTH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EAUTH, EAUTH);
#elif EAUTH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EAUTH, EAUTH);
#else
PRIVATE DEFINE_INT75(posix_EAUTH, EAUTH);
#endif
#endif /* EAUTH < 0 */
#else /* EAUTH */
#define POSIX_EAUTH_DEF /* nothing */
#endif /* !EAUTH */
#ifdef EBADRPC
#define POSIX_EBADRPC_DEF \
	{ "EBADRPC", (DeeObject *)&posix_EBADRPC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EBADRPC >= 0
#if EBADRPC == 0
#define posix_EBADRPC DeeInt_Zero
#elif EBADRPC == 1
#define posix_EBADRPC DeeInt_One
#elif EBADRPC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EBADRPC, EBADRPC);
#elif EBADRPC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EBADRPC, EBADRPC);
#elif EBADRPC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EBADRPC, EBADRPC);
#elif EBADRPC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EBADRPC, EBADRPC);
#else
PRIVATE DEFINE_UINT75(posix_EBADRPC, EBADRPC);
#endif
#else /* EBADRPC >= 0 */
#if EBADRPC == -1
#define posix_EBADRPC DeeInt_MinusOne
#elif EBADRPC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EBADRPC, EBADRPC);
#elif EBADRPC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EBADRPC, EBADRPC);
#elif EBADRPC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EBADRPC, EBADRPC);
#elif EBADRPC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EBADRPC, EBADRPC);
#else
PRIVATE DEFINE_INT75(posix_EBADRPC, EBADRPC);
#endif
#endif /* EBADRPC < 0 */
#else /* EBADRPC */
#define POSIX_EBADRPC_DEF /* nothing */
#endif /* !EBADRPC */
#ifdef ELASTERROR
#define POSIX_ELASTERROR_DEF \
	{ "ELASTERROR", (DeeObject *)&posix_ELASTERROR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ELASTERROR >= 0
#if ELASTERROR == 0
#define posix_ELASTERROR DeeInt_Zero
#elif ELASTERROR == 1
#define posix_ELASTERROR DeeInt_One
#elif ELASTERROR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELASTERROR, ELASTERROR);
#else
PRIVATE DEFINE_UINT75(posix_ELASTERROR, ELASTERROR);
#endif
#else /* ELASTERROR >= 0 */
#if ELASTERROR == -1
#define posix_ELASTERROR DeeInt_MinusOne
#elif ELASTERROR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELASTERROR, ELASTERROR);
#elif ELASTERROR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELASTERROR, ELASTERROR);
#else
PRIVATE DEFINE_INT75(posix_ELASTERROR, ELASTERROR);
#endif
#endif /* ELASTERROR < 0 */
#else /* ELASTERROR */
#define POSIX_ELASTERROR_DEF /* nothing */
#endif /* !ELASTERROR */
#ifdef ELOCKUNMAPPED
#define POSIX_ELOCKUNMAPPED_DEF \
	{ "ELOCKUNMAPPED", (DeeObject *)&posix_ELOCKUNMAPPED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ELOCKUNMAPPED >= 0
#if ELOCKUNMAPPED == 0
#define posix_ELOCKUNMAPPED DeeInt_Zero
#elif ELOCKUNMAPPED == 1
#define posix_ELOCKUNMAPPED DeeInt_One
#elif ELOCKUNMAPPED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#else
PRIVATE DEFINE_UINT75(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#endif
#else /* ELOCKUNMAPPED >= 0 */
#if ELOCKUNMAPPED == -1
#define posix_ELOCKUNMAPPED DeeInt_MinusOne
#elif ELOCKUNMAPPED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#elif ELOCKUNMAPPED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#else
PRIVATE DEFINE_INT75(posix_ELOCKUNMAPPED, ELOCKUNMAPPED);
#endif
#endif /* ELOCKUNMAPPED < 0 */
#else /* ELOCKUNMAPPED */
#define POSIX_ELOCKUNMAPPED_DEF /* nothing */
#endif /* !ELOCKUNMAPPED */
#ifdef ENEEDAUTH
#define POSIX_ENEEDAUTH_DEF \
	{ "ENEEDAUTH", (DeeObject *)&posix_ENEEDAUTH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ENEEDAUTH >= 0
#if ENEEDAUTH == 0
#define posix_ENEEDAUTH DeeInt_Zero
#elif ENEEDAUTH == 1
#define posix_ENEEDAUTH DeeInt_One
#elif ENEEDAUTH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENEEDAUTH, ENEEDAUTH);
#else
PRIVATE DEFINE_UINT75(posix_ENEEDAUTH, ENEEDAUTH);
#endif
#else /* ENEEDAUTH >= 0 */
#if ENEEDAUTH == -1
#define posix_ENEEDAUTH DeeInt_MinusOne
#elif ENEEDAUTH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENEEDAUTH, ENEEDAUTH);
#elif ENEEDAUTH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENEEDAUTH, ENEEDAUTH);
#else
PRIVATE DEFINE_INT75(posix_ENEEDAUTH, ENEEDAUTH);
#endif
#endif /* ENEEDAUTH < 0 */
#else /* ENEEDAUTH */
#define POSIX_ENEEDAUTH_DEF /* nothing */
#endif /* !ENEEDAUTH */
#ifdef ENOATTR
#define POSIX_ENOATTR_DEF \
	{ "ENOATTR", (DeeObject *)&posix_ENOATTR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ENOATTR >= 0
#if ENOATTR == 0
#define posix_ENOATTR DeeInt_Zero
#elif ENOATTR == 1
#define posix_ENOATTR DeeInt_One
#elif ENOATTR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOATTR, ENOATTR);
#elif ENOATTR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOATTR, ENOATTR);
#elif ENOATTR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOATTR, ENOATTR);
#elif ENOATTR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOATTR, ENOATTR);
#else
PRIVATE DEFINE_UINT75(posix_ENOATTR, ENOATTR);
#endif
#else /* ENOATTR >= 0 */
#if ENOATTR == -1
#define posix_ENOATTR DeeInt_MinusOne
#elif ENOATTR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOATTR, ENOATTR);
#elif ENOATTR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOATTR, ENOATTR);
#elif ENOATTR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOATTR, ENOATTR);
#elif ENOATTR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOATTR, ENOATTR);
#else
PRIVATE DEFINE_INT75(posix_ENOATTR, ENOATTR);
#endif
#endif /* ENOATTR < 0 */
#else /* ENOATTR */
#define POSIX_ENOATTR_DEF /* nothing */
#endif /* !ENOATTR */
#ifdef ENOTACTIVE
#define POSIX_ENOTACTIVE_DEF \
	{ "ENOTACTIVE", (DeeObject *)&posix_ENOTACTIVE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ENOTACTIVE >= 0
#if ENOTACTIVE == 0
#define posix_ENOTACTIVE DeeInt_Zero
#elif ENOTACTIVE == 1
#define posix_ENOTACTIVE DeeInt_One
#elif ENOTACTIVE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ENOTACTIVE, ENOTACTIVE);
#else
PRIVATE DEFINE_UINT75(posix_ENOTACTIVE, ENOTACTIVE);
#endif
#else /* ENOTACTIVE >= 0 */
#if ENOTACTIVE == -1
#define posix_ENOTACTIVE DeeInt_MinusOne
#elif ENOTACTIVE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ENOTACTIVE, ENOTACTIVE);
#elif ENOTACTIVE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ENOTACTIVE, ENOTACTIVE);
#else
PRIVATE DEFINE_INT75(posix_ENOTACTIVE, ENOTACTIVE);
#endif
#endif /* ENOTACTIVE < 0 */
#else /* ENOTACTIVE */
#define POSIX_ENOTACTIVE_DEF /* nothing */
#endif /* !ENOTACTIVE */
#ifdef EPROCUNAVAIL
#define POSIX_EPROCUNAVAIL_DEF \
	{ "EPROCUNAVAIL", (DeeObject *)&posix_EPROCUNAVAIL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EPROCUNAVAIL >= 0
#if EPROCUNAVAIL == 0
#define posix_EPROCUNAVAIL DeeInt_Zero
#elif EPROCUNAVAIL == 1
#define posix_EPROCUNAVAIL DeeInt_One
#elif EPROCUNAVAIL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#else
PRIVATE DEFINE_UINT75(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#endif
#else /* EPROCUNAVAIL >= 0 */
#if EPROCUNAVAIL == -1
#define posix_EPROCUNAVAIL DeeInt_MinusOne
#elif EPROCUNAVAIL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#elif EPROCUNAVAIL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#else
PRIVATE DEFINE_INT75(posix_EPROCUNAVAIL, EPROCUNAVAIL);
#endif
#endif /* EPROCUNAVAIL < 0 */
#else /* EPROCUNAVAIL */
#define POSIX_EPROCUNAVAIL_DEF /* nothing */
#endif /* !EPROCUNAVAIL */
#ifdef EPROGMISMATCH
#define POSIX_EPROGMISMATCH_DEF \
	{ "EPROGMISMATCH", (DeeObject *)&posix_EPROGMISMATCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EPROGMISMATCH >= 0
#if EPROGMISMATCH == 0
#define posix_EPROGMISMATCH DeeInt_Zero
#elif EPROGMISMATCH == 1
#define posix_EPROGMISMATCH DeeInt_One
#elif EPROGMISMATCH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROGMISMATCH, EPROGMISMATCH);
#else
PRIVATE DEFINE_UINT75(posix_EPROGMISMATCH, EPROGMISMATCH);
#endif
#else /* EPROGMISMATCH >= 0 */
#if EPROGMISMATCH == -1
#define posix_EPROGMISMATCH DeeInt_MinusOne
#elif EPROGMISMATCH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROGMISMATCH, EPROGMISMATCH);
#elif EPROGMISMATCH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROGMISMATCH, EPROGMISMATCH);
#else
PRIVATE DEFINE_INT75(posix_EPROGMISMATCH, EPROGMISMATCH);
#endif
#endif /* EPROGMISMATCH < 0 */
#else /* EPROGMISMATCH */
#define POSIX_EPROGMISMATCH_DEF /* nothing */
#endif /* !EPROGMISMATCH */
#ifdef EPROGUNAVAIL
#define POSIX_EPROGUNAVAIL_DEF \
	{ "EPROGUNAVAIL", (DeeObject *)&posix_EPROGUNAVAIL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EPROGUNAVAIL >= 0
#if EPROGUNAVAIL == 0
#define posix_EPROGUNAVAIL DeeInt_Zero
#elif EPROGUNAVAIL == 1
#define posix_EPROGUNAVAIL DeeInt_One
#elif EPROGUNAVAIL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#else
PRIVATE DEFINE_UINT75(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#endif
#else /* EPROGUNAVAIL >= 0 */
#if EPROGUNAVAIL == -1
#define posix_EPROGUNAVAIL DeeInt_MinusOne
#elif EPROGUNAVAIL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#elif EPROGUNAVAIL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#else
PRIVATE DEFINE_INT75(posix_EPROGUNAVAIL, EPROGUNAVAIL);
#endif
#endif /* EPROGUNAVAIL < 0 */
#else /* EPROGUNAVAIL */
#define POSIX_EPROGUNAVAIL_DEF /* nothing */
#endif /* !EPROGUNAVAIL */
#ifdef ERPCMISMATCH
#define POSIX_ERPCMISMATCH_DEF \
	{ "ERPCMISMATCH", (DeeObject *)&posix_ERPCMISMATCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if ERPCMISMATCH >= 0
#if ERPCMISMATCH == 0
#define posix_ERPCMISMATCH DeeInt_Zero
#elif ERPCMISMATCH == 1
#define posix_ERPCMISMATCH DeeInt_One
#elif ERPCMISMATCH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ERPCMISMATCH, ERPCMISMATCH);
#else
PRIVATE DEFINE_UINT75(posix_ERPCMISMATCH, ERPCMISMATCH);
#endif
#else /* ERPCMISMATCH >= 0 */
#if ERPCMISMATCH == -1
#define posix_ERPCMISMATCH DeeInt_MinusOne
#elif ERPCMISMATCH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ERPCMISMATCH, ERPCMISMATCH);
#elif ERPCMISMATCH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ERPCMISMATCH, ERPCMISMATCH);
#else
PRIVATE DEFINE_INT75(posix_ERPCMISMATCH, ERPCMISMATCH);
#endif
#endif /* ERPCMISMATCH < 0 */
#else /* ERPCMISMATCH */
#define POSIX_ERPCMISMATCH_DEF /* nothing */
#endif /* !ERPCMISMATCH */
#ifdef STRUNCATE
#define POSIX_STRUNCATE_DEF \
	{ "STRUNCATE", (DeeObject *)&posix_STRUNCATE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Truncated" },
#if STRUNCATE >= 0
#if STRUNCATE == 0
#define posix_STRUNCATE DeeInt_Zero
#elif STRUNCATE == 1
#define posix_STRUNCATE DeeInt_One
#elif STRUNCATE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_STRUNCATE, STRUNCATE);
#else
PRIVATE DEFINE_UINT75(posix_STRUNCATE, STRUNCATE);
#endif
#else /* STRUNCATE >= 0 */
#if STRUNCATE == -1
#define posix_STRUNCATE DeeInt_MinusOne
#elif STRUNCATE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_STRUNCATE, STRUNCATE);
#elif STRUNCATE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_STRUNCATE, STRUNCATE);
#else
PRIVATE DEFINE_INT75(posix_STRUNCATE, STRUNCATE);
#endif
#endif /* STRUNCATE < 0 */
#else /* STRUNCATE */
#define POSIX_STRUNCATE_DEF /* nothing */
#endif /* !STRUNCATE */
#ifndef ELIMIT
#define ELIMIT (-1)
#if defined(EOK) && EOK > ELIMIT
#undef ELIMIT
#define ELIMIT EOK
#endif /* EOK && EOK > ELIMIT */
#if defined(EPERM) && EPERM > ELIMIT
#undef ELIMIT
#define ELIMIT EPERM
#endif /* EPERM && EPERM > ELIMIT */
#if defined(ENOENT) && ENOENT > ELIMIT
#undef ELIMIT
#define ELIMIT ENOENT
#endif /* ENOENT && ENOENT > ELIMIT */
#if defined(ESRCH) && ESRCH > ELIMIT
#undef ELIMIT
#define ELIMIT ESRCH
#endif /* ESRCH && ESRCH > ELIMIT */
#if defined(EINTR) && EINTR > ELIMIT
#undef ELIMIT
#define ELIMIT EINTR
#endif /* EINTR && EINTR > ELIMIT */
#if defined(EIO) && EIO > ELIMIT
#undef ELIMIT
#define ELIMIT EIO
#endif /* EIO && EIO > ELIMIT */
#if defined(ENXIO) && ENXIO > ELIMIT
#undef ELIMIT
#define ELIMIT ENXIO
#endif /* ENXIO && ENXIO > ELIMIT */
#if defined(E2BIG) && E2BIG > ELIMIT
#undef ELIMIT
#define ELIMIT E2BIG
#endif /* E2BIG && E2BIG > ELIMIT */
#if defined(ENOEXEC) && ENOEXEC > ELIMIT
#undef ELIMIT
#define ELIMIT ENOEXEC
#endif /* ENOEXEC && ENOEXEC > ELIMIT */
#if defined(EBADF) && EBADF > ELIMIT
#undef ELIMIT
#define ELIMIT EBADF
#endif /* EBADF && EBADF > ELIMIT */
#if defined(ECHILD) && ECHILD > ELIMIT
#undef ELIMIT
#define ELIMIT ECHILD
#endif /* ECHILD && ECHILD > ELIMIT */
#if defined(EAGAIN) && EAGAIN > ELIMIT
#undef ELIMIT
#define ELIMIT EAGAIN
#endif /* EAGAIN && EAGAIN > ELIMIT */
#if defined(ENOMEM) && ENOMEM > ELIMIT
#undef ELIMIT
#define ELIMIT ENOMEM
#endif /* ENOMEM && ENOMEM > ELIMIT */
#if defined(EACCES) && EACCES > ELIMIT
#undef ELIMIT
#define ELIMIT EACCES
#endif /* EACCES && EACCES > ELIMIT */
#if defined(EFAULT) && EFAULT > ELIMIT
#undef ELIMIT
#define ELIMIT EFAULT
#endif /* EFAULT && EFAULT > ELIMIT */
#if defined(ENOTBLK) && ENOTBLK > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTBLK
#endif /* ENOTBLK && ENOTBLK > ELIMIT */
#if defined(EBUSY) && EBUSY > ELIMIT
#undef ELIMIT
#define ELIMIT EBUSY
#endif /* EBUSY && EBUSY > ELIMIT */
#if defined(EEXIST) && EEXIST > ELIMIT
#undef ELIMIT
#define ELIMIT EEXIST
#endif /* EEXIST && EEXIST > ELIMIT */
#if defined(EXDEV) && EXDEV > ELIMIT
#undef ELIMIT
#define ELIMIT EXDEV
#endif /* EXDEV && EXDEV > ELIMIT */
#if defined(ENODEV) && ENODEV > ELIMIT
#undef ELIMIT
#define ELIMIT ENODEV
#endif /* ENODEV && ENODEV > ELIMIT */
#if defined(ENOTDIR) && ENOTDIR > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTDIR
#endif /* ENOTDIR && ENOTDIR > ELIMIT */
#if defined(EISDIR) && EISDIR > ELIMIT
#undef ELIMIT
#define ELIMIT EISDIR
#endif /* EISDIR && EISDIR > ELIMIT */
#if defined(EINVAL) && EINVAL > ELIMIT
#undef ELIMIT
#define ELIMIT EINVAL
#endif /* EINVAL && EINVAL > ELIMIT */
#if defined(ENFILE) && ENFILE > ELIMIT
#undef ELIMIT
#define ELIMIT ENFILE
#endif /* ENFILE && ENFILE > ELIMIT */
#if defined(EMFILE) && EMFILE > ELIMIT
#undef ELIMIT
#define ELIMIT EMFILE
#endif /* EMFILE && EMFILE > ELIMIT */
#if defined(ENOTTY) && ENOTTY > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTTY
#endif /* ENOTTY && ENOTTY > ELIMIT */
#if defined(ETXTBSY) && ETXTBSY > ELIMIT
#undef ELIMIT
#define ELIMIT ETXTBSY
#endif /* ETXTBSY && ETXTBSY > ELIMIT */
#if defined(EFBIG) && EFBIG > ELIMIT
#undef ELIMIT
#define ELIMIT EFBIG
#endif /* EFBIG && EFBIG > ELIMIT */
#if defined(ENOSPC) && ENOSPC > ELIMIT
#undef ELIMIT
#define ELIMIT ENOSPC
#endif /* ENOSPC && ENOSPC > ELIMIT */
#if defined(ESPIPE) && ESPIPE > ELIMIT
#undef ELIMIT
#define ELIMIT ESPIPE
#endif /* ESPIPE && ESPIPE > ELIMIT */
#if defined(EROFS) && EROFS > ELIMIT
#undef ELIMIT
#define ELIMIT EROFS
#endif /* EROFS && EROFS > ELIMIT */
#if defined(EMLINK) && EMLINK > ELIMIT
#undef ELIMIT
#define ELIMIT EMLINK
#endif /* EMLINK && EMLINK > ELIMIT */
#if defined(EPIPE) && EPIPE > ELIMIT
#undef ELIMIT
#define ELIMIT EPIPE
#endif /* EPIPE && EPIPE > ELIMIT */
#if defined(EDOM) && EDOM > ELIMIT
#undef ELIMIT
#define ELIMIT EDOM
#endif /* EDOM && EDOM > ELIMIT */
#if defined(ERANGE) && ERANGE > ELIMIT
#undef ELIMIT
#define ELIMIT ERANGE
#endif /* ERANGE && ERANGE > ELIMIT */
#if defined(EDEADLK) && EDEADLK > ELIMIT
#undef ELIMIT
#define ELIMIT EDEADLK
#endif /* EDEADLK && EDEADLK > ELIMIT */
#if defined(ENAMETOOLONG) && ENAMETOOLONG > ELIMIT
#undef ELIMIT
#define ELIMIT ENAMETOOLONG
#endif /* ENAMETOOLONG && ENAMETOOLONG > ELIMIT */
#if defined(ENOLCK) && ENOLCK > ELIMIT
#undef ELIMIT
#define ELIMIT ENOLCK
#endif /* ENOLCK && ENOLCK > ELIMIT */
#if defined(ENOSYS) && ENOSYS > ELIMIT
#undef ELIMIT
#define ELIMIT ENOSYS
#endif /* ENOSYS && ENOSYS > ELIMIT */
#if defined(ENOTEMPTY) && ENOTEMPTY > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTEMPTY
#endif /* ENOTEMPTY && ENOTEMPTY > ELIMIT */
#if defined(ELOOP) && ELOOP > ELIMIT
#undef ELIMIT
#define ELIMIT ELOOP
#endif /* ELOOP && ELOOP > ELIMIT */
#if defined(EWOULDBLOCK) && EWOULDBLOCK > ELIMIT
#undef ELIMIT
#define ELIMIT EWOULDBLOCK
#endif /* EWOULDBLOCK && EWOULDBLOCK > ELIMIT */
#if defined(ENOMSG) && ENOMSG > ELIMIT
#undef ELIMIT
#define ELIMIT ENOMSG
#endif /* ENOMSG && ENOMSG > ELIMIT */
#if defined(EIDRM) && EIDRM > ELIMIT
#undef ELIMIT
#define ELIMIT EIDRM
#endif /* EIDRM && EIDRM > ELIMIT */
#if defined(ECHRNG) && ECHRNG > ELIMIT
#undef ELIMIT
#define ELIMIT ECHRNG
#endif /* ECHRNG && ECHRNG > ELIMIT */
#if defined(EL2NSYNC) && EL2NSYNC > ELIMIT
#undef ELIMIT
#define ELIMIT EL2NSYNC
#endif /* EL2NSYNC && EL2NSYNC > ELIMIT */
#if defined(EL3HLT) && EL3HLT > ELIMIT
#undef ELIMIT
#define ELIMIT EL3HLT
#endif /* EL3HLT && EL3HLT > ELIMIT */
#if defined(EL3RST) && EL3RST > ELIMIT
#undef ELIMIT
#define ELIMIT EL3RST
#endif /* EL3RST && EL3RST > ELIMIT */
#if defined(ELNRNG) && ELNRNG > ELIMIT
#undef ELIMIT
#define ELIMIT ELNRNG
#endif /* ELNRNG && ELNRNG > ELIMIT */
#if defined(EUNATCH) && EUNATCH > ELIMIT
#undef ELIMIT
#define ELIMIT EUNATCH
#endif /* EUNATCH && EUNATCH > ELIMIT */
#if defined(ENOCSI) && ENOCSI > ELIMIT
#undef ELIMIT
#define ELIMIT ENOCSI
#endif /* ENOCSI && ENOCSI > ELIMIT */
#if defined(EL2HLT) && EL2HLT > ELIMIT
#undef ELIMIT
#define ELIMIT EL2HLT
#endif /* EL2HLT && EL2HLT > ELIMIT */
#if defined(EBADE) && EBADE > ELIMIT
#undef ELIMIT
#define ELIMIT EBADE
#endif /* EBADE && EBADE > ELIMIT */
#if defined(EBADR) && EBADR > ELIMIT
#undef ELIMIT
#define ELIMIT EBADR
#endif /* EBADR && EBADR > ELIMIT */
#if defined(EXFULL) && EXFULL > ELIMIT
#undef ELIMIT
#define ELIMIT EXFULL
#endif /* EXFULL && EXFULL > ELIMIT */
#if defined(ENOANO) && ENOANO > ELIMIT
#undef ELIMIT
#define ELIMIT ENOANO
#endif /* ENOANO && ENOANO > ELIMIT */
#if defined(EBADRQC) && EBADRQC > ELIMIT
#undef ELIMIT
#define ELIMIT EBADRQC
#endif /* EBADRQC && EBADRQC > ELIMIT */
#if defined(EBADSLT) && EBADSLT > ELIMIT
#undef ELIMIT
#define ELIMIT EBADSLT
#endif /* EBADSLT && EBADSLT > ELIMIT */
#if defined(EDEADLOCK) && EDEADLOCK > ELIMIT
#undef ELIMIT
#define ELIMIT EDEADLOCK
#endif /* EDEADLOCK && EDEADLOCK > ELIMIT */
#if defined(EBFONT) && EBFONT > ELIMIT
#undef ELIMIT
#define ELIMIT EBFONT
#endif /* EBFONT && EBFONT > ELIMIT */
#if defined(ENOSTR) && ENOSTR > ELIMIT
#undef ELIMIT
#define ELIMIT ENOSTR
#endif /* ENOSTR && ENOSTR > ELIMIT */
#if defined(ENODATA) && ENODATA > ELIMIT
#undef ELIMIT
#define ELIMIT ENODATA
#endif /* ENODATA && ENODATA > ELIMIT */
#if defined(ETIME) && ETIME > ELIMIT
#undef ELIMIT
#define ELIMIT ETIME
#endif /* ETIME && ETIME > ELIMIT */
#if defined(ENOSR) && ENOSR > ELIMIT
#undef ELIMIT
#define ELIMIT ENOSR
#endif /* ENOSR && ENOSR > ELIMIT */
#if defined(ENONET) && ENONET > ELIMIT
#undef ELIMIT
#define ELIMIT ENONET
#endif /* ENONET && ENONET > ELIMIT */
#if defined(ENOPKG) && ENOPKG > ELIMIT
#undef ELIMIT
#define ELIMIT ENOPKG
#endif /* ENOPKG && ENOPKG > ELIMIT */
#if defined(EREMOTE) && EREMOTE > ELIMIT
#undef ELIMIT
#define ELIMIT EREMOTE
#endif /* EREMOTE && EREMOTE > ELIMIT */
#if defined(ENOLINK) && ENOLINK > ELIMIT
#undef ELIMIT
#define ELIMIT ENOLINK
#endif /* ENOLINK && ENOLINK > ELIMIT */
#if defined(EADV) && EADV > ELIMIT
#undef ELIMIT
#define ELIMIT EADV
#endif /* EADV && EADV > ELIMIT */
#if defined(ESRMNT) && ESRMNT > ELIMIT
#undef ELIMIT
#define ELIMIT ESRMNT
#endif /* ESRMNT && ESRMNT > ELIMIT */
#if defined(ECOMM) && ECOMM > ELIMIT
#undef ELIMIT
#define ELIMIT ECOMM
#endif /* ECOMM && ECOMM > ELIMIT */
#if defined(EPROTO) && EPROTO > ELIMIT
#undef ELIMIT
#define ELIMIT EPROTO
#endif /* EPROTO && EPROTO > ELIMIT */
#if defined(EMULTIHOP) && EMULTIHOP > ELIMIT
#undef ELIMIT
#define ELIMIT EMULTIHOP
#endif /* EMULTIHOP && EMULTIHOP > ELIMIT */
#if defined(EDOTDOT) && EDOTDOT > ELIMIT
#undef ELIMIT
#define ELIMIT EDOTDOT
#endif /* EDOTDOT && EDOTDOT > ELIMIT */
#if defined(EBADMSG) && EBADMSG > ELIMIT
#undef ELIMIT
#define ELIMIT EBADMSG
#endif /* EBADMSG && EBADMSG > ELIMIT */
#if defined(EOVERFLOW) && EOVERFLOW > ELIMIT
#undef ELIMIT
#define ELIMIT EOVERFLOW
#endif /* EOVERFLOW && EOVERFLOW > ELIMIT */
#if defined(ENOTUNIQ) && ENOTUNIQ > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTUNIQ
#endif /* ENOTUNIQ && ENOTUNIQ > ELIMIT */
#if defined(EBADFD) && EBADFD > ELIMIT
#undef ELIMIT
#define ELIMIT EBADFD
#endif /* EBADFD && EBADFD > ELIMIT */
#if defined(EREMCHG) && EREMCHG > ELIMIT
#undef ELIMIT
#define ELIMIT EREMCHG
#endif /* EREMCHG && EREMCHG > ELIMIT */
#if defined(ELIBACC) && ELIBACC > ELIMIT
#undef ELIMIT
#define ELIMIT ELIBACC
#endif /* ELIBACC && ELIBACC > ELIMIT */
#if defined(ELIBBAD) && ELIBBAD > ELIMIT
#undef ELIMIT
#define ELIMIT ELIBBAD
#endif /* ELIBBAD && ELIBBAD > ELIMIT */
#if defined(ELIBSCN) && ELIBSCN > ELIMIT
#undef ELIMIT
#define ELIMIT ELIBSCN
#endif /* ELIBSCN && ELIBSCN > ELIMIT */
#if defined(ELIBMAX) && ELIBMAX > ELIMIT
#undef ELIMIT
#define ELIMIT ELIBMAX
#endif /* ELIBMAX && ELIBMAX > ELIMIT */
#if defined(ELIBEXEC) && ELIBEXEC > ELIMIT
#undef ELIMIT
#define ELIMIT ELIBEXEC
#endif /* ELIBEXEC && ELIBEXEC > ELIMIT */
#if defined(EILSEQ) && EILSEQ > ELIMIT
#undef ELIMIT
#define ELIMIT EILSEQ
#endif /* EILSEQ && EILSEQ > ELIMIT */
#if defined(ERESTART) && ERESTART > ELIMIT
#undef ELIMIT
#define ELIMIT ERESTART
#endif /* ERESTART && ERESTART > ELIMIT */
#if defined(ESTRPIPE) && ESTRPIPE > ELIMIT
#undef ELIMIT
#define ELIMIT ESTRPIPE
#endif /* ESTRPIPE && ESTRPIPE > ELIMIT */
#if defined(EUSERS) && EUSERS > ELIMIT
#undef ELIMIT
#define ELIMIT EUSERS
#endif /* EUSERS && EUSERS > ELIMIT */
#if defined(ENOTSOCK) && ENOTSOCK > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTSOCK
#endif /* ENOTSOCK && ENOTSOCK > ELIMIT */
#if defined(EDESTADDRREQ) && EDESTADDRREQ > ELIMIT
#undef ELIMIT
#define ELIMIT EDESTADDRREQ
#endif /* EDESTADDRREQ && EDESTADDRREQ > ELIMIT */
#if defined(EMSGSIZE) && EMSGSIZE > ELIMIT
#undef ELIMIT
#define ELIMIT EMSGSIZE
#endif /* EMSGSIZE && EMSGSIZE > ELIMIT */
#if defined(EPROTOTYPE) && EPROTOTYPE > ELIMIT
#undef ELIMIT
#define ELIMIT EPROTOTYPE
#endif /* EPROTOTYPE && EPROTOTYPE > ELIMIT */
#if defined(ENOPROTOOPT) && ENOPROTOOPT > ELIMIT
#undef ELIMIT
#define ELIMIT ENOPROTOOPT
#endif /* ENOPROTOOPT && ENOPROTOOPT > ELIMIT */
#if defined(EPROTONOSUPPORT) && EPROTONOSUPPORT > ELIMIT
#undef ELIMIT
#define ELIMIT EPROTONOSUPPORT
#endif /* EPROTONOSUPPORT && EPROTONOSUPPORT > ELIMIT */
#if defined(ESOCKTNOSUPPORT) && ESOCKTNOSUPPORT > ELIMIT
#undef ELIMIT
#define ELIMIT ESOCKTNOSUPPORT
#endif /* ESOCKTNOSUPPORT && ESOCKTNOSUPPORT > ELIMIT */
#if defined(EOPNOTSUPP) && EOPNOTSUPP > ELIMIT
#undef ELIMIT
#define ELIMIT EOPNOTSUPP
#endif /* EOPNOTSUPP && EOPNOTSUPP > ELIMIT */
#if defined(EPFNOSUPPORT) && EPFNOSUPPORT > ELIMIT
#undef ELIMIT
#define ELIMIT EPFNOSUPPORT
#endif /* EPFNOSUPPORT && EPFNOSUPPORT > ELIMIT */
#if defined(EAFNOSUPPORT) && EAFNOSUPPORT > ELIMIT
#undef ELIMIT
#define ELIMIT EAFNOSUPPORT
#endif /* EAFNOSUPPORT && EAFNOSUPPORT > ELIMIT */
#if defined(EADDRINUSE) && EADDRINUSE > ELIMIT
#undef ELIMIT
#define ELIMIT EADDRINUSE
#endif /* EADDRINUSE && EADDRINUSE > ELIMIT */
#if defined(EADDRNOTAVAIL) && EADDRNOTAVAIL > ELIMIT
#undef ELIMIT
#define ELIMIT EADDRNOTAVAIL
#endif /* EADDRNOTAVAIL && EADDRNOTAVAIL > ELIMIT */
#if defined(ENETDOWN) && ENETDOWN > ELIMIT
#undef ELIMIT
#define ELIMIT ENETDOWN
#endif /* ENETDOWN && ENETDOWN > ELIMIT */
#if defined(ENETUNREACH) && ENETUNREACH > ELIMIT
#undef ELIMIT
#define ELIMIT ENETUNREACH
#endif /* ENETUNREACH && ENETUNREACH > ELIMIT */
#if defined(ENETRESET) && ENETRESET > ELIMIT
#undef ELIMIT
#define ELIMIT ENETRESET
#endif /* ENETRESET && ENETRESET > ELIMIT */
#if defined(ECONNABORTED) && ECONNABORTED > ELIMIT
#undef ELIMIT
#define ELIMIT ECONNABORTED
#endif /* ECONNABORTED && ECONNABORTED > ELIMIT */
#if defined(ECONNRESET) && ECONNRESET > ELIMIT
#undef ELIMIT
#define ELIMIT ECONNRESET
#endif /* ECONNRESET && ECONNRESET > ELIMIT */
#if defined(ENOBUFS) && ENOBUFS > ELIMIT
#undef ELIMIT
#define ELIMIT ENOBUFS
#endif /* ENOBUFS && ENOBUFS > ELIMIT */
#if defined(EISCONN) && EISCONN > ELIMIT
#undef ELIMIT
#define ELIMIT EISCONN
#endif /* EISCONN && EISCONN > ELIMIT */
#if defined(ENOTCONN) && ENOTCONN > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTCONN
#endif /* ENOTCONN && ENOTCONN > ELIMIT */
#if defined(ESHUTDOWN) && ESHUTDOWN > ELIMIT
#undef ELIMIT
#define ELIMIT ESHUTDOWN
#endif /* ESHUTDOWN && ESHUTDOWN > ELIMIT */
#if defined(ETOOMANYREFS) && ETOOMANYREFS > ELIMIT
#undef ELIMIT
#define ELIMIT ETOOMANYREFS
#endif /* ETOOMANYREFS && ETOOMANYREFS > ELIMIT */
#if defined(ETIMEDOUT) && ETIMEDOUT > ELIMIT
#undef ELIMIT
#define ELIMIT ETIMEDOUT
#endif /* ETIMEDOUT && ETIMEDOUT > ELIMIT */
#if defined(ECONNREFUSED) && ECONNREFUSED > ELIMIT
#undef ELIMIT
#define ELIMIT ECONNREFUSED
#endif /* ECONNREFUSED && ECONNREFUSED > ELIMIT */
#if defined(EHOSTDOWN) && EHOSTDOWN > ELIMIT
#undef ELIMIT
#define ELIMIT EHOSTDOWN
#endif /* EHOSTDOWN && EHOSTDOWN > ELIMIT */
#if defined(EHOSTUNREACH) && EHOSTUNREACH > ELIMIT
#undef ELIMIT
#define ELIMIT EHOSTUNREACH
#endif /* EHOSTUNREACH && EHOSTUNREACH > ELIMIT */
#if defined(EALREADY) && EALREADY > ELIMIT
#undef ELIMIT
#define ELIMIT EALREADY
#endif /* EALREADY && EALREADY > ELIMIT */
#if defined(EINPROGRESS) && EINPROGRESS > ELIMIT
#undef ELIMIT
#define ELIMIT EINPROGRESS
#endif /* EINPROGRESS && EINPROGRESS > ELIMIT */
#if defined(ESTALE) && ESTALE > ELIMIT
#undef ELIMIT
#define ELIMIT ESTALE
#endif /* ESTALE && ESTALE > ELIMIT */
#if defined(EUCLEAN) && EUCLEAN > ELIMIT
#undef ELIMIT
#define ELIMIT EUCLEAN
#endif /* EUCLEAN && EUCLEAN > ELIMIT */
#if defined(ENOTNAM) && ENOTNAM > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTNAM
#endif /* ENOTNAM && ENOTNAM > ELIMIT */
#if defined(ENAVAIL) && ENAVAIL > ELIMIT
#undef ELIMIT
#define ELIMIT ENAVAIL
#endif /* ENAVAIL && ENAVAIL > ELIMIT */
#if defined(EISNAM) && EISNAM > ELIMIT
#undef ELIMIT
#define ELIMIT EISNAM
#endif /* EISNAM && EISNAM > ELIMIT */
#if defined(EREMOTEIO) && EREMOTEIO > ELIMIT
#undef ELIMIT
#define ELIMIT EREMOTEIO
#endif /* EREMOTEIO && EREMOTEIO > ELIMIT */
#if defined(EDQUOT) && EDQUOT > ELIMIT
#undef ELIMIT
#define ELIMIT EDQUOT
#endif /* EDQUOT && EDQUOT > ELIMIT */
#if defined(ENOMEDIUM) && ENOMEDIUM > ELIMIT
#undef ELIMIT
#define ELIMIT ENOMEDIUM
#endif /* ENOMEDIUM && ENOMEDIUM > ELIMIT */
#if defined(EMEDIUMTYPE) && EMEDIUMTYPE > ELIMIT
#undef ELIMIT
#define ELIMIT EMEDIUMTYPE
#endif /* EMEDIUMTYPE && EMEDIUMTYPE > ELIMIT */
#if defined(ECANCELED) && ECANCELED > ELIMIT
#undef ELIMIT
#define ELIMIT ECANCELED
#endif /* ECANCELED && ECANCELED > ELIMIT */
#if defined(ENOKEY) && ENOKEY > ELIMIT
#undef ELIMIT
#define ELIMIT ENOKEY
#endif /* ENOKEY && ENOKEY > ELIMIT */
#if defined(EKEYEXPIRED) && EKEYEXPIRED > ELIMIT
#undef ELIMIT
#define ELIMIT EKEYEXPIRED
#endif /* EKEYEXPIRED && EKEYEXPIRED > ELIMIT */
#if defined(EKEYREVOKED) && EKEYREVOKED > ELIMIT
#undef ELIMIT
#define ELIMIT EKEYREVOKED
#endif /* EKEYREVOKED && EKEYREVOKED > ELIMIT */
#if defined(EKEYREJECTED) && EKEYREJECTED > ELIMIT
#undef ELIMIT
#define ELIMIT EKEYREJECTED
#endif /* EKEYREJECTED && EKEYREJECTED > ELIMIT */
#if defined(EOWNERDEAD) && EOWNERDEAD > ELIMIT
#undef ELIMIT
#define ELIMIT EOWNERDEAD
#endif /* EOWNERDEAD && EOWNERDEAD > ELIMIT */
#if defined(ENOTRECOVERABLE) && ENOTRECOVERABLE > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTRECOVERABLE
#endif /* ENOTRECOVERABLE && ENOTRECOVERABLE > ELIMIT */
#if defined(ERFKILL) && ERFKILL > ELIMIT
#undef ELIMIT
#define ELIMIT ERFKILL
#endif /* ERFKILL && ERFKILL > ELIMIT */
#if defined(EHWPOISON) && EHWPOISON > ELIMIT
#undef ELIMIT
#define ELIMIT EHWPOISON
#endif /* EHWPOISON && EHWPOISON > ELIMIT */
#if defined(ELBIN) && ELBIN > ELIMIT
#undef ELIMIT
#define ELIMIT ELBIN
#endif /* ELBIN && ELBIN > ELIMIT */
#if defined(EPROCLIM) && EPROCLIM > ELIMIT
#undef ELIMIT
#define ELIMIT EPROCLIM
#endif /* EPROCLIM && EPROCLIM > ELIMIT */
#if defined(EFTYPE) && EFTYPE > ELIMIT
#undef ELIMIT
#define ELIMIT EFTYPE
#endif /* EFTYPE && EFTYPE > ELIMIT */
#if defined(ENMFILE) && ENMFILE > ELIMIT
#undef ELIMIT
#define ELIMIT ENMFILE
#endif /* ENMFILE && ENMFILE > ELIMIT */
#if defined(ENOTSUP) && ENOTSUP > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTSUP
#endif /* ENOTSUP && ENOTSUP > ELIMIT */
#if defined(ENOSHARE) && ENOSHARE > ELIMIT
#undef ELIMIT
#define ELIMIT ENOSHARE
#endif /* ENOSHARE && ENOSHARE > ELIMIT */
#if defined(ECASECLASH) && ECASECLASH > ELIMIT
#undef ELIMIT
#define ELIMIT ECASECLASH
#endif /* ECASECLASH && ECASECLASH > ELIMIT */
#if defined(EOTHER) && EOTHER > ELIMIT
#undef ELIMIT
#define ELIMIT EOTHER
#endif /* EOTHER && EOTHER > ELIMIT */
#if defined(EAUTH) && EAUTH > ELIMIT
#undef ELIMIT
#define ELIMIT EAUTH
#endif /* EAUTH && EAUTH > ELIMIT */
#if defined(EBADRPC) && EBADRPC > ELIMIT
#undef ELIMIT
#define ELIMIT EBADRPC
#endif /* EBADRPC && EBADRPC > ELIMIT */
#if defined(ELASTERROR) && ELASTERROR > ELIMIT
#undef ELIMIT
#define ELIMIT ELASTERROR
#endif /* ELASTERROR && ELASTERROR > ELIMIT */
#if defined(ELOCKUNMAPPED) && ELOCKUNMAPPED > ELIMIT
#undef ELIMIT
#define ELIMIT ELOCKUNMAPPED
#endif /* ELOCKUNMAPPED && ELOCKUNMAPPED > ELIMIT */
#if defined(ENEEDAUTH) && ENEEDAUTH > ELIMIT
#undef ELIMIT
#define ELIMIT ENEEDAUTH
#endif /* ENEEDAUTH && ENEEDAUTH > ELIMIT */
#if defined(ENOATTR) && ENOATTR > ELIMIT
#undef ELIMIT
#define ELIMIT ENOATTR
#endif /* ENOATTR && ENOATTR > ELIMIT */
#if defined(ENOTACTIVE) && ENOTACTIVE > ELIMIT
#undef ELIMIT
#define ELIMIT ENOTACTIVE
#endif /* ENOTACTIVE && ENOTACTIVE > ELIMIT */
#if defined(EPROCUNAVAIL) && EPROCUNAVAIL > ELIMIT
#undef ELIMIT
#define ELIMIT EPROCUNAVAIL
#endif /* EPROCUNAVAIL && EPROCUNAVAIL > ELIMIT */
#if defined(EPROGMISMATCH) && EPROGMISMATCH > ELIMIT
#undef ELIMIT
#define ELIMIT EPROGMISMATCH
#endif /* EPROGMISMATCH && EPROGMISMATCH > ELIMIT */
#if defined(EPROGUNAVAIL) && EPROGUNAVAIL > ELIMIT
#undef ELIMIT
#define ELIMIT EPROGUNAVAIL
#endif /* EPROGUNAVAIL && EPROGUNAVAIL > ELIMIT */
#if defined(ERPCMISMATCH) && ERPCMISMATCH > ELIMIT
#undef ELIMIT
#define ELIMIT ERPCMISMATCH
#endif /* ERPCMISMATCH && ERPCMISMATCH > ELIMIT */
#if defined(STRUNCATE) && STRUNCATE > ELIMIT
#undef ELIMIT
#define ELIMIT STRUNCATE
#endif /* STRUNCATE && STRUNCATE > ELIMIT */
#if ELIMIT < 0
#undef ELIMIT
#endif /* ELIMIT < 0 */
#endif /* !ELIMIT */
#if !defined(ECOUNT) && defined(ELIMIT)
#define ECOUNT (ELIMIT + 1)
#endif /* !ECOUNT && ELIMIT */
#ifdef ELIMIT
#define POSIX_ELIMIT_DEF \
	{ "ELIMIT", (DeeObject *)&posix_ELIMIT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Max possible errno" },
#if ELIMIT >= 0
#if ELIMIT == 0
#define posix_ELIMIT DeeInt_Zero
#elif ELIMIT == 1
#define posix_ELIMIT DeeInt_One
#elif ELIMIT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ELIMIT, ELIMIT);
#elif ELIMIT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ELIMIT, ELIMIT);
#elif ELIMIT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ELIMIT, ELIMIT);
#elif ELIMIT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ELIMIT, ELIMIT);
#else
PRIVATE DEFINE_UINT75(posix_ELIMIT, ELIMIT);
#endif
#else /* ELIMIT >= 0 */
#if ELIMIT == -1
#define posix_ELIMIT DeeInt_MinusOne
#elif ELIMIT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ELIMIT, ELIMIT);
#elif ELIMIT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ELIMIT, ELIMIT);
#elif ELIMIT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ELIMIT, ELIMIT);
#elif ELIMIT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ELIMIT, ELIMIT);
#else
PRIVATE DEFINE_INT75(posix_ELIMIT, ELIMIT);
#endif
#endif /* ELIMIT < 0 */
#else /* ELIMIT */
#define POSIX_ELIMIT_DEF /* nothing */
#endif /* !ELIMIT */
#ifdef ECOUNT
#define POSIX_ECOUNT_DEF \
	{ "ECOUNT", (DeeObject *)&posix_ECOUNT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "One plus ?GELIMIT" },
#if ECOUNT >= 0
#if ECOUNT == 0
#define posix_ECOUNT DeeInt_Zero
#elif ECOUNT == 1
#define posix_ECOUNT DeeInt_One
#elif ECOUNT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_ECOUNT, ECOUNT);
#elif ECOUNT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_ECOUNT, ECOUNT);
#elif ECOUNT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_ECOUNT, ECOUNT);
#elif ECOUNT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_ECOUNT, ECOUNT);
#else
PRIVATE DEFINE_UINT75(posix_ECOUNT, ECOUNT);
#endif
#else /* ECOUNT >= 0 */
#if ECOUNT == -1
#define posix_ECOUNT DeeInt_MinusOne
#elif ECOUNT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_ECOUNT, ECOUNT);
#elif ECOUNT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_ECOUNT, ECOUNT);
#elif ECOUNT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_ECOUNT, ECOUNT);
#elif ECOUNT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_ECOUNT, ECOUNT);
#else
PRIVATE DEFINE_INT75(posix_ECOUNT, ECOUNT);
#endif
#endif /* ECOUNT < 0 */
#else /* ECOUNT */
#define POSIX_ECOUNT_DEF /* nothing */
#endif /* !ECOUNT */
#ifdef ELIMIT
#define POSIX_EMAX_DEF \
	{ "EMAX", (DeeObject *)&posix_ELIMIT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Max possible errno" },
#else /* ELIMIT */
#define POSIX_EMAX_DEF /* nothing */
#endif /* !ELIMIT */
