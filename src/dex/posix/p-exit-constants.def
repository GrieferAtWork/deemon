/* Copyright (c) 2018-2022 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2022 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
/* WARNING: Autogenerated file "p-exit-constants.def" */
#ifdef EXIT_SUCCESS
#define POSIX_EXIT_SUCCESS_DEF \
	{ "EXIT_SUCCESS", (DeeObject *)&posix_EXIT_SUCCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EXIT_SUCCESS >= 0
#if EXIT_SUCCESS == 0
#define posix_EXIT_SUCCESS DeeInt_Zero
#elif EXIT_SUCCESS == 1
#define posix_EXIT_SUCCESS DeeInt_One
#elif EXIT_SUCCESS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#else
PRIVATE DEFINE_UINT75(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#endif
#else /* EXIT_SUCCESS >= 0 */
#if EXIT_SUCCESS == -1
#define posix_EXIT_SUCCESS DeeInt_MinusOne
#elif EXIT_SUCCESS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#elif EXIT_SUCCESS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#else
PRIVATE DEFINE_INT75(posix_EXIT_SUCCESS, EXIT_SUCCESS);
#endif
#endif /* EXIT_SUCCESS < 0 */
#else /* EXIT_SUCCESS */
#define POSIX_EXIT_SUCCESS_DEF /* nothing */
#endif /* !EXIT_SUCCESS */
#ifdef EXIT_FAILURE
#define POSIX_EXIT_FAILURE_DEF \
	{ "EXIT_FAILURE", (DeeObject *)&posix_EXIT_FAILURE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if EXIT_FAILURE >= 0
#if EXIT_FAILURE == 0
#define posix_EXIT_FAILURE DeeInt_Zero
#elif EXIT_FAILURE == 1
#define posix_EXIT_FAILURE DeeInt_One
#elif EXIT_FAILURE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_EXIT_FAILURE, EXIT_FAILURE);
#else
PRIVATE DEFINE_UINT75(posix_EXIT_FAILURE, EXIT_FAILURE);
#endif
#else /* EXIT_FAILURE >= 0 */
#if EXIT_FAILURE == -1
#define posix_EXIT_FAILURE DeeInt_MinusOne
#elif EXIT_FAILURE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_EXIT_FAILURE, EXIT_FAILURE);
#elif EXIT_FAILURE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_EXIT_FAILURE, EXIT_FAILURE);
#else
PRIVATE DEFINE_INT75(posix_EXIT_FAILURE, EXIT_FAILURE);
#endif
#endif /* EXIT_FAILURE < 0 */
#else /* EXIT_FAILURE */
#define POSIX_EXIT_FAILURE_DEF /* nothing */
#endif /* !EXIT_FAILURE */
