/* Copyright (c) 2018-2023 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2023 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
/* WARNING: Autogenerated file "p-open-constants.def" */
#ifdef CONFIG_HAVE_O_RDONLY
#define POSIX_O_RDONLY_DEF \
	{ "O_RDONLY", (DeeObject *)&posix_O_RDONLY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_RDONLY >= 0
#if O_RDONLY == 0
#define posix_O_RDONLY DeeInt_Zero
#elif O_RDONLY == 1
#define posix_O_RDONLY DeeInt_One
#elif O_RDONLY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_RDONLY, O_RDONLY);
#else
PRIVATE DEFINE_UINT75(posix_O_RDONLY, O_RDONLY);
#endif
#else /* O_RDONLY >= 0 */
#if O_RDONLY == -1
#define posix_O_RDONLY DeeInt_MinusOne
#elif O_RDONLY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_RDONLY, O_RDONLY);
#else
PRIVATE DEFINE_INT75(posix_O_RDONLY, O_RDONLY);
#endif
#endif /* O_RDONLY < 0 */
#else /* CONFIG_HAVE_O_RDONLY */
#define POSIX_O_RDONLY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RDONLY */
#ifdef CONFIG_HAVE_O_WRONLY
#define POSIX_O_WRONLY_DEF \
	{ "O_WRONLY", (DeeObject *)&posix_O_WRONLY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_WRONLY >= 0
#if O_WRONLY == 0
#define posix_O_WRONLY DeeInt_Zero
#elif O_WRONLY == 1
#define posix_O_WRONLY DeeInt_One
#elif O_WRONLY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_WRONLY, O_WRONLY);
#else
PRIVATE DEFINE_UINT75(posix_O_WRONLY, O_WRONLY);
#endif
#else /* O_WRONLY >= 0 */
#if O_WRONLY == -1
#define posix_O_WRONLY DeeInt_MinusOne
#elif O_WRONLY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_WRONLY, O_WRONLY);
#else
PRIVATE DEFINE_INT75(posix_O_WRONLY, O_WRONLY);
#endif
#endif /* O_WRONLY < 0 */
#else /* CONFIG_HAVE_O_WRONLY */
#define POSIX_O_WRONLY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_WRONLY */
#ifdef CONFIG_HAVE_O_RDWR
#define POSIX_O_RDWR_DEF \
	{ "O_RDWR", (DeeObject *)&posix_O_RDWR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_RDWR >= 0
#if O_RDWR == 0
#define posix_O_RDWR DeeInt_Zero
#elif O_RDWR == 1
#define posix_O_RDWR DeeInt_One
#elif O_RDWR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_RDWR, O_RDWR);
#else
PRIVATE DEFINE_UINT75(posix_O_RDWR, O_RDWR);
#endif
#else /* O_RDWR >= 0 */
#if O_RDWR == -1
#define posix_O_RDWR DeeInt_MinusOne
#elif O_RDWR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_RDWR, O_RDWR);
#else
PRIVATE DEFINE_INT75(posix_O_RDWR, O_RDWR);
#endif
#endif /* O_RDWR < 0 */
#else /* CONFIG_HAVE_O_RDWR */
#define POSIX_O_RDWR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RDWR */
#ifdef CONFIG_HAVE_O_APPEND
#define POSIX_O_APPEND_DEF \
	{ "O_APPEND", (DeeObject *)&posix_O_APPEND, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Always append data to the end of the file" },
#if O_APPEND >= 0
#if O_APPEND == 0
#define posix_O_APPEND DeeInt_Zero
#elif O_APPEND == 1
#define posix_O_APPEND DeeInt_One
#elif O_APPEND <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_APPEND, O_APPEND);
#else
PRIVATE DEFINE_UINT75(posix_O_APPEND, O_APPEND);
#endif
#else /* O_APPEND >= 0 */
#if O_APPEND == -1
#define posix_O_APPEND DeeInt_MinusOne
#elif O_APPEND >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_APPEND, O_APPEND);
#else
PRIVATE DEFINE_INT75(posix_O_APPEND, O_APPEND);
#endif
#endif /* O_APPEND < 0 */
#else /* CONFIG_HAVE_O_APPEND */
#define POSIX_O_APPEND_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_APPEND */
#ifdef CONFIG_HAVE_O_CREAT
#define POSIX_O_CREAT_DEF \
	{ "O_CREAT", (DeeObject *)&posix_O_CREAT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "If missing, create a new file" },
#if O_CREAT >= 0
#if O_CREAT == 0
#define posix_O_CREAT DeeInt_Zero
#elif O_CREAT == 1
#define posix_O_CREAT DeeInt_One
#elif O_CREAT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_CREAT, O_CREAT);
#else
PRIVATE DEFINE_UINT75(posix_O_CREAT, O_CREAT);
#endif
#else /* O_CREAT >= 0 */
#if O_CREAT == -1
#define posix_O_CREAT DeeInt_MinusOne
#elif O_CREAT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_CREAT, O_CREAT);
#else
PRIVATE DEFINE_INT75(posix_O_CREAT, O_CREAT);
#endif
#endif /* O_CREAT < 0 */
#else /* CONFIG_HAVE_O_CREAT */
#define POSIX_O_CREAT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CREAT */
#ifdef CONFIG_HAVE_O_TRUNC
#define POSIX_O_TRUNC_DEF \
	{ "O_TRUNC", (DeeObject *)&posix_O_TRUNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_TRUNC >= 0
#if O_TRUNC == 0
#define posix_O_TRUNC DeeInt_Zero
#elif O_TRUNC == 1
#define posix_O_TRUNC DeeInt_One
#elif O_TRUNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_TRUNC, O_TRUNC);
#else
PRIVATE DEFINE_UINT75(posix_O_TRUNC, O_TRUNC);
#endif
#else /* O_TRUNC >= 0 */
#if O_TRUNC == -1
#define posix_O_TRUNC DeeInt_MinusOne
#elif O_TRUNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_TRUNC, O_TRUNC);
#else
PRIVATE DEFINE_INT75(posix_O_TRUNC, O_TRUNC);
#endif
#endif /* O_TRUNC < 0 */
#else /* CONFIG_HAVE_O_TRUNC */
#define POSIX_O_TRUNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TRUNC */
#ifdef CONFIG_HAVE_O_EXCL
#define POSIX_O_EXCL_DEF \
	{ "O_EXCL", (DeeObject *)&posix_O_EXCL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "When used with #O_CREAT, set #EEXIST if the file already exists" },
#if O_EXCL >= 0
#if O_EXCL == 0
#define posix_O_EXCL DeeInt_Zero
#elif O_EXCL == 1
#define posix_O_EXCL DeeInt_One
#elif O_EXCL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_EXCL, O_EXCL);
#else
PRIVATE DEFINE_UINT75(posix_O_EXCL, O_EXCL);
#endif
#else /* O_EXCL >= 0 */
#if O_EXCL == -1
#define posix_O_EXCL DeeInt_MinusOne
#elif O_EXCL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_EXCL, O_EXCL);
#else
PRIVATE DEFINE_INT75(posix_O_EXCL, O_EXCL);
#endif
#endif /* O_EXCL < 0 */
#else /* CONFIG_HAVE_O_EXCL */
#define POSIX_O_EXCL_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXCL */
#ifdef CONFIG_HAVE_O_TEXT
#define POSIX_O_TEXT_DEF \
	{ "O_TEXT", (DeeObject *)&posix_O_TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_TEXT >= 0
#if O_TEXT == 0
#define posix_O_TEXT DeeInt_Zero
#elif O_TEXT == 1
#define posix_O_TEXT DeeInt_One
#elif O_TEXT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_TEXT, O_TEXT);
#else
PRIVATE DEFINE_UINT75(posix_O_TEXT, O_TEXT);
#endif
#else /* O_TEXT >= 0 */
#if O_TEXT == -1
#define posix_O_TEXT DeeInt_MinusOne
#elif O_TEXT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_TEXT, O_TEXT);
#else
PRIVATE DEFINE_INT75(posix_O_TEXT, O_TEXT);
#endif
#endif /* O_TEXT < 0 */
#else /* CONFIG_HAVE_O_TEXT */
#define POSIX_O_TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TEXT */
#ifdef CONFIG_HAVE_O_BINARY
#define POSIX_O_BINARY_DEF \
	{ "O_BINARY", (DeeObject *)&posix_O_BINARY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_BINARY >= 0
#if O_BINARY == 0
#define posix_O_BINARY DeeInt_Zero
#elif O_BINARY == 1
#define posix_O_BINARY DeeInt_One
#elif O_BINARY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_BINARY, O_BINARY);
#else
PRIVATE DEFINE_UINT75(posix_O_BINARY, O_BINARY);
#endif
#else /* O_BINARY >= 0 */
#if O_BINARY == -1
#define posix_O_BINARY DeeInt_MinusOne
#elif O_BINARY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_BINARY, O_BINARY);
#else
PRIVATE DEFINE_INT75(posix_O_BINARY, O_BINARY);
#endif
#endif /* O_BINARY < 0 */
#else /* CONFIG_HAVE_O_BINARY */
#define POSIX_O_BINARY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_BINARY */
#ifdef CONFIG_HAVE_O_WTEXT
#define POSIX_O_WTEXT_DEF \
	{ "O_WTEXT", (DeeObject *)&posix_O_WTEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_WTEXT >= 0
#if O_WTEXT == 0
#define posix_O_WTEXT DeeInt_Zero
#elif O_WTEXT == 1
#define posix_O_WTEXT DeeInt_One
#elif O_WTEXT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_WTEXT, O_WTEXT);
#else
PRIVATE DEFINE_UINT75(posix_O_WTEXT, O_WTEXT);
#endif
#else /* O_WTEXT >= 0 */
#if O_WTEXT == -1
#define posix_O_WTEXT DeeInt_MinusOne
#elif O_WTEXT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_WTEXT, O_WTEXT);
#else
PRIVATE DEFINE_INT75(posix_O_WTEXT, O_WTEXT);
#endif
#endif /* O_WTEXT < 0 */
#else /* CONFIG_HAVE_O_WTEXT */
#define POSIX_O_WTEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_WTEXT */
#ifdef CONFIG_HAVE_O_U16TEXT
#define POSIX_O_U16TEXT_DEF \
	{ "O_U16TEXT", (DeeObject *)&posix_O_U16TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_U16TEXT >= 0
#if O_U16TEXT == 0
#define posix_O_U16TEXT DeeInt_Zero
#elif O_U16TEXT == 1
#define posix_O_U16TEXT DeeInt_One
#elif O_U16TEXT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_U16TEXT, O_U16TEXT);
#else
PRIVATE DEFINE_UINT75(posix_O_U16TEXT, O_U16TEXT);
#endif
#else /* O_U16TEXT >= 0 */
#if O_U16TEXT == -1
#define posix_O_U16TEXT DeeInt_MinusOne
#elif O_U16TEXT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_U16TEXT, O_U16TEXT);
#else
PRIVATE DEFINE_INT75(posix_O_U16TEXT, O_U16TEXT);
#endif
#endif /* O_U16TEXT < 0 */
#else /* CONFIG_HAVE_O_U16TEXT */
#define POSIX_O_U16TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_U16TEXT */
#ifdef CONFIG_HAVE_O_U8TEXT
#define POSIX_O_U8TEXT_DEF \
	{ "O_U8TEXT", (DeeObject *)&posix_O_U8TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_U8TEXT >= 0
#if O_U8TEXT == 0
#define posix_O_U8TEXT DeeInt_Zero
#elif O_U8TEXT == 1
#define posix_O_U8TEXT DeeInt_One
#elif O_U8TEXT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_U8TEXT, O_U8TEXT);
#else
PRIVATE DEFINE_UINT75(posix_O_U8TEXT, O_U8TEXT);
#endif
#else /* O_U8TEXT >= 0 */
#if O_U8TEXT == -1
#define posix_O_U8TEXT DeeInt_MinusOne
#elif O_U8TEXT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_U8TEXT, O_U8TEXT);
#else
PRIVATE DEFINE_INT75(posix_O_U8TEXT, O_U8TEXT);
#endif
#endif /* O_U8TEXT < 0 */
#else /* CONFIG_HAVE_O_U8TEXT */
#define POSIX_O_U8TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_U8TEXT */
#ifdef CONFIG_HAVE_O_CLOEXEC
#define POSIX_O_CLOEXEC_DEF \
	{ "O_CLOEXEC", (DeeObject *)&posix_O_CLOEXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Close the file during ${exec()}" },
#if O_CLOEXEC >= 0
#if O_CLOEXEC == 0
#define posix_O_CLOEXEC DeeInt_Zero
#elif O_CLOEXEC == 1
#define posix_O_CLOEXEC DeeInt_One
#elif O_CLOEXEC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_CLOEXEC, O_CLOEXEC);
#else
PRIVATE DEFINE_UINT75(posix_O_CLOEXEC, O_CLOEXEC);
#endif
#else /* O_CLOEXEC >= 0 */
#if O_CLOEXEC == -1
#define posix_O_CLOEXEC DeeInt_MinusOne
#elif O_CLOEXEC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_CLOEXEC, O_CLOEXEC);
#else
PRIVATE DEFINE_INT75(posix_O_CLOEXEC, O_CLOEXEC);
#endif
#endif /* O_CLOEXEC < 0 */
#else /* CONFIG_HAVE_O_CLOEXEC */
#define POSIX_O_CLOEXEC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CLOEXEC */
#ifdef CONFIG_HAVE_O_TEMPORARY
#define POSIX_O_TEMPORARY_DEF \
	{ "O_TEMPORARY", (DeeObject *)&posix_O_TEMPORARY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_TEMPORARY >= 0
#if O_TEMPORARY == 0
#define posix_O_TEMPORARY DeeInt_Zero
#elif O_TEMPORARY == 1
#define posix_O_TEMPORARY DeeInt_One
#elif O_TEMPORARY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_TEMPORARY, O_TEMPORARY);
#else
PRIVATE DEFINE_UINT75(posix_O_TEMPORARY, O_TEMPORARY);
#endif
#else /* O_TEMPORARY >= 0 */
#if O_TEMPORARY == -1
#define posix_O_TEMPORARY DeeInt_MinusOne
#elif O_TEMPORARY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_TEMPORARY, O_TEMPORARY);
#else
PRIVATE DEFINE_INT75(posix_O_TEMPORARY, O_TEMPORARY);
#endif
#endif /* O_TEMPORARY < 0 */
#else /* CONFIG_HAVE_O_TEMPORARY */
#define POSIX_O_TEMPORARY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TEMPORARY */
#ifdef CONFIG_HAVE_O_SHORT_LIVED
#define POSIX_O_SHORT_LIVED_DEF \
	{ "O_SHORT_LIVED", (DeeObject *)&posix_O_SHORT_LIVED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_SHORT_LIVED >= 0
#if O_SHORT_LIVED == 0
#define posix_O_SHORT_LIVED DeeInt_Zero
#elif O_SHORT_LIVED == 1
#define posix_O_SHORT_LIVED DeeInt_One
#elif O_SHORT_LIVED <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#else
PRIVATE DEFINE_UINT75(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#endif
#else /* O_SHORT_LIVED >= 0 */
#if O_SHORT_LIVED == -1
#define posix_O_SHORT_LIVED DeeInt_MinusOne
#elif O_SHORT_LIVED >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#else
PRIVATE DEFINE_INT75(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#endif
#endif /* O_SHORT_LIVED < 0 */
#else /* CONFIG_HAVE_O_SHORT_LIVED */
#define POSIX_O_SHORT_LIVED_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SHORT_LIVED */
#ifdef CONFIG_HAVE_O_OBTAIN_DIR
#define POSIX_O_OBTAIN_DIR_DEF \
	{ "O_OBTAIN_DIR", (DeeObject *)&posix_O_OBTAIN_DIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_OBTAIN_DIR >= 0
#if O_OBTAIN_DIR == 0
#define posix_O_OBTAIN_DIR DeeInt_Zero
#elif O_OBTAIN_DIR == 1
#define posix_O_OBTAIN_DIR DeeInt_One
#elif O_OBTAIN_DIR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#else
PRIVATE DEFINE_UINT75(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#endif
#else /* O_OBTAIN_DIR >= 0 */
#if O_OBTAIN_DIR == -1
#define posix_O_OBTAIN_DIR DeeInt_MinusOne
#elif O_OBTAIN_DIR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#else
PRIVATE DEFINE_INT75(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#endif
#endif /* O_OBTAIN_DIR < 0 */
#else /* CONFIG_HAVE_O_OBTAIN_DIR */
#define POSIX_O_OBTAIN_DIR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_OBTAIN_DIR */
#ifdef CONFIG_HAVE_O_SEQUENTIAL
#define POSIX_O_SEQUENTIAL_DEF \
	{ "O_SEQUENTIAL", (DeeObject *)&posix_O_SEQUENTIAL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_SEQUENTIAL >= 0
#if O_SEQUENTIAL == 0
#define posix_O_SEQUENTIAL DeeInt_Zero
#elif O_SEQUENTIAL == 1
#define posix_O_SEQUENTIAL DeeInt_One
#elif O_SEQUENTIAL <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#else
PRIVATE DEFINE_UINT75(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#endif
#else /* O_SEQUENTIAL >= 0 */
#if O_SEQUENTIAL == -1
#define posix_O_SEQUENTIAL DeeInt_MinusOne
#elif O_SEQUENTIAL >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#else
PRIVATE DEFINE_INT75(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#endif
#endif /* O_SEQUENTIAL < 0 */
#else /* CONFIG_HAVE_O_SEQUENTIAL */
#define POSIX_O_SEQUENTIAL_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SEQUENTIAL */
#ifdef CONFIG_HAVE_O_RANDOM
#define POSIX_O_RANDOM_DEF \
	{ "O_RANDOM", (DeeObject *)&posix_O_RANDOM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_RANDOM >= 0
#if O_RANDOM == 0
#define posix_O_RANDOM DeeInt_Zero
#elif O_RANDOM == 1
#define posix_O_RANDOM DeeInt_One
#elif O_RANDOM <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_RANDOM, O_RANDOM);
#else
PRIVATE DEFINE_UINT75(posix_O_RANDOM, O_RANDOM);
#endif
#else /* O_RANDOM >= 0 */
#if O_RANDOM == -1
#define posix_O_RANDOM DeeInt_MinusOne
#elif O_RANDOM >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_RANDOM, O_RANDOM);
#else
PRIVATE DEFINE_INT75(posix_O_RANDOM, O_RANDOM);
#endif
#endif /* O_RANDOM < 0 */
#else /* CONFIG_HAVE_O_RANDOM */
#define POSIX_O_RANDOM_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RANDOM */
#ifdef CONFIG_HAVE_O_NOCTTY
#define POSIX_O_NOCTTY_DEF \
	{ "O_NOCTTY", (DeeObject *)&posix_O_NOCTTY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "If the calling process does not have a controlling terminal assigned, do not attempt to assign the newly opened file as terminal, even when ${isatty(open(...))} would be true" },
#if O_NOCTTY >= 0
#if O_NOCTTY == 0
#define posix_O_NOCTTY DeeInt_Zero
#elif O_NOCTTY == 1
#define posix_O_NOCTTY DeeInt_One
#elif O_NOCTTY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_NOCTTY, O_NOCTTY);
#else
PRIVATE DEFINE_UINT75(posix_O_NOCTTY, O_NOCTTY);
#endif
#else /* O_NOCTTY >= 0 */
#if O_NOCTTY == -1
#define posix_O_NOCTTY DeeInt_MinusOne
#elif O_NOCTTY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_NOCTTY, O_NOCTTY);
#else
PRIVATE DEFINE_INT75(posix_O_NOCTTY, O_NOCTTY);
#endif
#endif /* O_NOCTTY < 0 */
#else /* CONFIG_HAVE_O_NOCTTY */
#define POSIX_O_NOCTTY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOCTTY */
#ifdef CONFIG_HAVE_O_NONBLOCK
#define POSIX_O_NONBLOCK_DEF \
	{ "O_NONBLOCK", (DeeObject *)&posix_O_NONBLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Do not block when trying to read data that hasn\'t been written, yet" },
#if O_NONBLOCK >= 0
#if O_NONBLOCK == 0
#define posix_O_NONBLOCK DeeInt_Zero
#elif O_NONBLOCK == 1
#define posix_O_NONBLOCK DeeInt_One
#elif O_NONBLOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_NONBLOCK, O_NONBLOCK);
#else
PRIVATE DEFINE_UINT75(posix_O_NONBLOCK, O_NONBLOCK);
#endif
#else /* O_NONBLOCK >= 0 */
#if O_NONBLOCK == -1
#define posix_O_NONBLOCK DeeInt_MinusOne
#elif O_NONBLOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_NONBLOCK, O_NONBLOCK);
#else
PRIVATE DEFINE_INT75(posix_O_NONBLOCK, O_NONBLOCK);
#endif
#endif /* O_NONBLOCK < 0 */
#else /* CONFIG_HAVE_O_NONBLOCK */
#define POSIX_O_NONBLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NONBLOCK */
#ifdef CONFIG_HAVE_O_SYNC
#define POSIX_O_SYNC_DEF \
	{ "O_SYNC", (DeeObject *)&posix_O_SYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_SYNC >= 0
#if O_SYNC == 0
#define posix_O_SYNC DeeInt_Zero
#elif O_SYNC == 1
#define posix_O_SYNC DeeInt_One
#elif O_SYNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SYNC, O_SYNC);
#else
PRIVATE DEFINE_UINT75(posix_O_SYNC, O_SYNC);
#endif
#else /* O_SYNC >= 0 */
#if O_SYNC == -1
#define posix_O_SYNC DeeInt_MinusOne
#elif O_SYNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SYNC, O_SYNC);
#else
PRIVATE DEFINE_INT75(posix_O_SYNC, O_SYNC);
#endif
#endif /* O_SYNC < 0 */
#else /* CONFIG_HAVE_O_SYNC */
#define POSIX_O_SYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SYNC */
#ifdef CONFIG_HAVE_O_RSYNC
#define POSIX_O_RSYNC_DEF \
	{ "O_RSYNC", (DeeObject *)&posix_O_RSYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_RSYNC >= 0
#if O_RSYNC == 0
#define posix_O_RSYNC DeeInt_Zero
#elif O_RSYNC == 1
#define posix_O_RSYNC DeeInt_One
#elif O_RSYNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_RSYNC, O_RSYNC);
#else
PRIVATE DEFINE_UINT75(posix_O_RSYNC, O_RSYNC);
#endif
#else /* O_RSYNC >= 0 */
#if O_RSYNC == -1
#define posix_O_RSYNC DeeInt_MinusOne
#elif O_RSYNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_RSYNC, O_RSYNC);
#else
PRIVATE DEFINE_INT75(posix_O_RSYNC, O_RSYNC);
#endif
#endif /* O_RSYNC < 0 */
#else /* CONFIG_HAVE_O_RSYNC */
#define POSIX_O_RSYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RSYNC */
#ifdef CONFIG_HAVE_O_DSYNC
#define POSIX_O_DSYNC_DEF \
	{ "O_DSYNC", (DeeObject *)&posix_O_DSYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_DSYNC >= 0
#if O_DSYNC == 0
#define posix_O_DSYNC DeeInt_Zero
#elif O_DSYNC == 1
#define posix_O_DSYNC DeeInt_One
#elif O_DSYNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_DSYNC, O_DSYNC);
#else
PRIVATE DEFINE_UINT75(posix_O_DSYNC, O_DSYNC);
#endif
#else /* O_DSYNC >= 0 */
#if O_DSYNC == -1
#define posix_O_DSYNC DeeInt_MinusOne
#elif O_DSYNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_DSYNC, O_DSYNC);
#else
PRIVATE DEFINE_INT75(posix_O_DSYNC, O_DSYNC);
#endif
#endif /* O_DSYNC < 0 */
#else /* CONFIG_HAVE_O_DSYNC */
#define POSIX_O_DSYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DSYNC */
#ifdef CONFIG_HAVE_O_ASYNC
#define POSIX_O_ASYNC_DEF \
	{ "O_ASYNC", (DeeObject *)&posix_O_ASYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_ASYNC >= 0
#if O_ASYNC == 0
#define posix_O_ASYNC DeeInt_Zero
#elif O_ASYNC == 1
#define posix_O_ASYNC DeeInt_One
#elif O_ASYNC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_ASYNC, O_ASYNC);
#else
PRIVATE DEFINE_UINT75(posix_O_ASYNC, O_ASYNC);
#endif
#else /* O_ASYNC >= 0 */
#if O_ASYNC == -1
#define posix_O_ASYNC DeeInt_MinusOne
#elif O_ASYNC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_ASYNC, O_ASYNC);
#else
PRIVATE DEFINE_INT75(posix_O_ASYNC, O_ASYNC);
#endif
#endif /* O_ASYNC < 0 */
#else /* CONFIG_HAVE_O_ASYNC */
#define POSIX_O_ASYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_ASYNC */
#ifdef CONFIG_HAVE_O_DIRECT
#define POSIX_O_DIRECT_DEF \
	{ "O_DIRECT", (DeeObject *)&posix_O_DIRECT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_DIRECT >= 0
#if O_DIRECT == 0
#define posix_O_DIRECT DeeInt_Zero
#elif O_DIRECT == 1
#define posix_O_DIRECT DeeInt_One
#elif O_DIRECT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_DIRECT, O_DIRECT);
#else
PRIVATE DEFINE_UINT75(posix_O_DIRECT, O_DIRECT);
#endif
#else /* O_DIRECT >= 0 */
#if O_DIRECT == -1
#define posix_O_DIRECT DeeInt_MinusOne
#elif O_DIRECT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_DIRECT, O_DIRECT);
#else
PRIVATE DEFINE_INT75(posix_O_DIRECT, O_DIRECT);
#endif
#endif /* O_DIRECT < 0 */
#else /* CONFIG_HAVE_O_DIRECT */
#define POSIX_O_DIRECT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DIRECT */
#ifdef CONFIG_HAVE_O_LARGEFILE
#define POSIX_O_LARGEFILE_DEF \
	{ "O_LARGEFILE", (DeeObject *)&posix_O_LARGEFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_LARGEFILE >= 0
#if O_LARGEFILE == 0
#define posix_O_LARGEFILE DeeInt_Zero
#elif O_LARGEFILE == 1
#define posix_O_LARGEFILE DeeInt_One
#elif O_LARGEFILE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_LARGEFILE, O_LARGEFILE);
#else
PRIVATE DEFINE_UINT75(posix_O_LARGEFILE, O_LARGEFILE);
#endif
#else /* O_LARGEFILE >= 0 */
#if O_LARGEFILE == -1
#define posix_O_LARGEFILE DeeInt_MinusOne
#elif O_LARGEFILE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_LARGEFILE, O_LARGEFILE);
#else
PRIVATE DEFINE_INT75(posix_O_LARGEFILE, O_LARGEFILE);
#endif
#endif /* O_LARGEFILE < 0 */
#else /* CONFIG_HAVE_O_LARGEFILE */
#define POSIX_O_LARGEFILE_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_LARGEFILE */
#ifdef CONFIG_HAVE_O_DIRECTORY
#define POSIX_O_DIRECTORY_DEF \
	{ "O_DIRECTORY", (DeeObject *)&posix_O_DIRECTORY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Set #ENOTDIR when the final path component of an open() system call turns out to be something other than a directory" },
#if O_DIRECTORY >= 0
#if O_DIRECTORY == 0
#define posix_O_DIRECTORY DeeInt_Zero
#elif O_DIRECTORY == 1
#define posix_O_DIRECTORY DeeInt_One
#elif O_DIRECTORY <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_DIRECTORY, O_DIRECTORY);
#else
PRIVATE DEFINE_UINT75(posix_O_DIRECTORY, O_DIRECTORY);
#endif
#else /* O_DIRECTORY >= 0 */
#if O_DIRECTORY == -1
#define posix_O_DIRECTORY DeeInt_MinusOne
#elif O_DIRECTORY >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_DIRECTORY, O_DIRECTORY);
#else
PRIVATE DEFINE_INT75(posix_O_DIRECTORY, O_DIRECTORY);
#endif
#endif /* O_DIRECTORY < 0 */
#else /* CONFIG_HAVE_O_DIRECTORY */
#define POSIX_O_DIRECTORY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DIRECTORY */
#ifdef CONFIG_HAVE_O_NOFOLLOW
#define POSIX_O_NOFOLLOW_DEF \
	{ "O_NOFOLLOW", (DeeObject *)&posix_O_NOFOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Set #ELOOP when the final path component of an open() system call turns out to be a symbolic link" },
#if O_NOFOLLOW >= 0
#if O_NOFOLLOW == 0
#define posix_O_NOFOLLOW DeeInt_Zero
#elif O_NOFOLLOW == 1
#define posix_O_NOFOLLOW DeeInt_One
#elif O_NOFOLLOW <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_NOFOLLOW, O_NOFOLLOW);
#else
PRIVATE DEFINE_UINT75(posix_O_NOFOLLOW, O_NOFOLLOW);
#endif
#else /* O_NOFOLLOW >= 0 */
#if O_NOFOLLOW == -1
#define posix_O_NOFOLLOW DeeInt_MinusOne
#elif O_NOFOLLOW >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_NOFOLLOW, O_NOFOLLOW);
#else
PRIVATE DEFINE_INT75(posix_O_NOFOLLOW, O_NOFOLLOW);
#endif
#endif /* O_NOFOLLOW < 0 */
#else /* CONFIG_HAVE_O_NOFOLLOW */
#define POSIX_O_NOFOLLOW_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOFOLLOW */
#ifdef CONFIG_HAVE_O_NOATIME
#define POSIX_O_NOATIME_DEF \
	{ "O_NOATIME", (DeeObject *)&posix_O_NOATIME, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Don\'t update last-accessed time stamps" },
#if O_NOATIME >= 0
#if O_NOATIME == 0
#define posix_O_NOATIME DeeInt_Zero
#elif O_NOATIME == 1
#define posix_O_NOATIME DeeInt_One
#elif O_NOATIME <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_NOATIME, O_NOATIME);
#else
PRIVATE DEFINE_UINT75(posix_O_NOATIME, O_NOATIME);
#endif
#else /* O_NOATIME >= 0 */
#if O_NOATIME == -1
#define posix_O_NOATIME DeeInt_MinusOne
#elif O_NOATIME >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_NOATIME, O_NOATIME);
#else
PRIVATE DEFINE_INT75(posix_O_NOATIME, O_NOATIME);
#endif
#endif /* O_NOATIME < 0 */
#else /* CONFIG_HAVE_O_NOATIME */
#define POSIX_O_NOATIME_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOATIME */
#ifdef CONFIG_HAVE_O_PATH
#define POSIX_O_PATH_DEF \
	{ "O_PATH", (DeeObject *)&posix_O_PATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Open a path for *at system calls" },
#if O_PATH >= 0
#if O_PATH == 0
#define posix_O_PATH DeeInt_Zero
#elif O_PATH == 1
#define posix_O_PATH DeeInt_One
#elif O_PATH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_PATH, O_PATH);
#elif O_PATH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_PATH, O_PATH);
#elif O_PATH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_PATH, O_PATH);
#elif O_PATH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_PATH, O_PATH);
#else
PRIVATE DEFINE_UINT75(posix_O_PATH, O_PATH);
#endif
#else /* O_PATH >= 0 */
#if O_PATH == -1
#define posix_O_PATH DeeInt_MinusOne
#elif O_PATH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_PATH, O_PATH);
#else
PRIVATE DEFINE_INT75(posix_O_PATH, O_PATH);
#endif
#endif /* O_PATH < 0 */
#else /* CONFIG_HAVE_O_PATH */
#define POSIX_O_PATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_PATH */
#ifdef CONFIG_HAVE_O_TMPFILE
#define POSIX_O_TMPFILE_DEF \
	{ "O_TMPFILE", (DeeObject *)&posix_O_TMPFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_TMPFILE >= 0
#if O_TMPFILE == 0
#define posix_O_TMPFILE DeeInt_Zero
#elif O_TMPFILE == 1
#define posix_O_TMPFILE DeeInt_One
#elif O_TMPFILE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_TMPFILE, O_TMPFILE);
#else
PRIVATE DEFINE_UINT75(posix_O_TMPFILE, O_TMPFILE);
#endif
#else /* O_TMPFILE >= 0 */
#if O_TMPFILE == -1
#define posix_O_TMPFILE DeeInt_MinusOne
#elif O_TMPFILE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_TMPFILE, O_TMPFILE);
#else
PRIVATE DEFINE_INT75(posix_O_TMPFILE, O_TMPFILE);
#endif
#endif /* O_TMPFILE < 0 */
#else /* CONFIG_HAVE_O_TMPFILE */
#define POSIX_O_TMPFILE_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TMPFILE */
#ifdef CONFIG_HAVE_O_CLOFORK
#define POSIX_O_CLOFORK_DEF \
	{ "O_CLOFORK", (DeeObject *)&posix_O_CLOFORK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Close the handle when the file descriptors are unshared" },
#if O_CLOFORK >= 0
#if O_CLOFORK == 0
#define posix_O_CLOFORK DeeInt_Zero
#elif O_CLOFORK == 1
#define posix_O_CLOFORK DeeInt_One
#elif O_CLOFORK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_CLOFORK, O_CLOFORK);
#else
PRIVATE DEFINE_UINT75(posix_O_CLOFORK, O_CLOFORK);
#endif
#else /* O_CLOFORK >= 0 */
#if O_CLOFORK == -1
#define posix_O_CLOFORK DeeInt_MinusOne
#elif O_CLOFORK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_CLOFORK, O_CLOFORK);
#else
PRIVATE DEFINE_INT75(posix_O_CLOFORK, O_CLOFORK);
#endif
#endif /* O_CLOFORK < 0 */
#else /* CONFIG_HAVE_O_CLOFORK */
#define POSIX_O_CLOFORK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CLOFORK */
#ifdef CONFIG_HAVE_O_SYMLINK
#define POSIX_O_SYMLINK_DEF \
	{ "O_SYMLINK", (DeeObject *)&posix_O_SYMLINK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Open a symlink itself, rather than dereferencing it" },
#if O_SYMLINK >= 0
#if O_SYMLINK == 0
#define posix_O_SYMLINK DeeInt_Zero
#elif O_SYMLINK == 1
#define posix_O_SYMLINK DeeInt_One
#elif O_SYMLINK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SYMLINK, O_SYMLINK);
#else
PRIVATE DEFINE_UINT75(posix_O_SYMLINK, O_SYMLINK);
#endif
#else /* O_SYMLINK >= 0 */
#if O_SYMLINK == -1
#define posix_O_SYMLINK DeeInt_MinusOne
#elif O_SYMLINK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SYMLINK, O_SYMLINK);
#else
PRIVATE DEFINE_INT75(posix_O_SYMLINK, O_SYMLINK);
#endif
#endif /* O_SYMLINK < 0 */
#else /* CONFIG_HAVE_O_SYMLINK */
#define POSIX_O_SYMLINK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SYMLINK */
#ifdef CONFIG_HAVE_O_DOSPATH
#define POSIX_O_DOSPATH_DEF \
	{ "O_DOSPATH", (DeeObject *)&posix_O_DOSPATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interpret $\"\\\" as $\"/\", and ignore casing during path resolution. Additionally, recognize DOS mounting points, and interpret leading slashes as relative to the closest DOS mounting point" },
#if O_DOSPATH >= 0
#if O_DOSPATH == 0
#define posix_O_DOSPATH DeeInt_Zero
#elif O_DOSPATH == 1
#define posix_O_DOSPATH DeeInt_One
#elif O_DOSPATH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_DOSPATH, O_DOSPATH);
#else
PRIVATE DEFINE_UINT75(posix_O_DOSPATH, O_DOSPATH);
#endif
#else /* O_DOSPATH >= 0 */
#if O_DOSPATH == -1
#define posix_O_DOSPATH DeeInt_MinusOne
#elif O_DOSPATH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_DOSPATH, O_DOSPATH);
#else
PRIVATE DEFINE_INT75(posix_O_DOSPATH, O_DOSPATH);
#endif
#endif /* O_DOSPATH < 0 */
#else /* CONFIG_HAVE_O_DOSPATH */
#define POSIX_O_DOSPATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DOSPATH */
#ifdef CONFIG_HAVE_O_SHLOCK
#define POSIX_O_SHLOCK_DEF \
	{ "O_SHLOCK", (DeeObject *)&posix_O_SHLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_SHLOCK >= 0
#if O_SHLOCK == 0
#define posix_O_SHLOCK DeeInt_Zero
#elif O_SHLOCK == 1
#define posix_O_SHLOCK DeeInt_One
#elif O_SHLOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SHLOCK, O_SHLOCK);
#else
PRIVATE DEFINE_UINT75(posix_O_SHLOCK, O_SHLOCK);
#endif
#else /* O_SHLOCK >= 0 */
#if O_SHLOCK == -1
#define posix_O_SHLOCK DeeInt_MinusOne
#elif O_SHLOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SHLOCK, O_SHLOCK);
#else
PRIVATE DEFINE_INT75(posix_O_SHLOCK, O_SHLOCK);
#endif
#endif /* O_SHLOCK < 0 */
#else /* CONFIG_HAVE_O_SHLOCK */
#define POSIX_O_SHLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SHLOCK */
#ifdef CONFIG_HAVE_O_EXLOCK
#define POSIX_O_EXLOCK_DEF \
	{ "O_EXLOCK", (DeeObject *)&posix_O_EXLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_EXLOCK >= 0
#if O_EXLOCK == 0
#define posix_O_EXLOCK DeeInt_Zero
#elif O_EXLOCK == 1
#define posix_O_EXLOCK DeeInt_One
#elif O_EXLOCK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_EXLOCK, O_EXLOCK);
#else
PRIVATE DEFINE_UINT75(posix_O_EXLOCK, O_EXLOCK);
#endif
#else /* O_EXLOCK >= 0 */
#if O_EXLOCK == -1
#define posix_O_EXLOCK DeeInt_MinusOne
#elif O_EXLOCK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_EXLOCK, O_EXLOCK);
#else
PRIVATE DEFINE_INT75(posix_O_EXLOCK, O_EXLOCK);
#endif
#endif /* O_EXLOCK < 0 */
#else /* CONFIG_HAVE_O_EXLOCK */
#define POSIX_O_EXLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXLOCK */
#ifdef CONFIG_HAVE_O_XATTR
#define POSIX_O_XATTR_DEF \
	{ "O_XATTR", (DeeObject *)&posix_O_XATTR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_XATTR >= 0
#if O_XATTR == 0
#define posix_O_XATTR DeeInt_Zero
#elif O_XATTR == 1
#define posix_O_XATTR DeeInt_One
#elif O_XATTR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_XATTR, O_XATTR);
#else
PRIVATE DEFINE_UINT75(posix_O_XATTR, O_XATTR);
#endif
#else /* O_XATTR >= 0 */
#if O_XATTR == -1
#define posix_O_XATTR DeeInt_MinusOne
#elif O_XATTR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_XATTR, O_XATTR);
#else
PRIVATE DEFINE_INT75(posix_O_XATTR, O_XATTR);
#endif
#endif /* O_XATTR < 0 */
#else /* CONFIG_HAVE_O_XATTR */
#define POSIX_O_XATTR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_XATTR */
#ifdef CONFIG_HAVE_O_EXEC
#define POSIX_O_EXEC_DEF \
	{ "O_EXEC", (DeeObject *)&posix_O_EXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_EXEC >= 0
#if O_EXEC == 0
#define posix_O_EXEC DeeInt_Zero
#elif O_EXEC == 1
#define posix_O_EXEC DeeInt_One
#elif O_EXEC <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_EXEC, O_EXEC);
#else
PRIVATE DEFINE_UINT75(posix_O_EXEC, O_EXEC);
#endif
#else /* O_EXEC >= 0 */
#if O_EXEC == -1
#define posix_O_EXEC DeeInt_MinusOne
#elif O_EXEC >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_EXEC, O_EXEC);
#else
PRIVATE DEFINE_INT75(posix_O_EXEC, O_EXEC);
#endif
#endif /* O_EXEC < 0 */
#else /* CONFIG_HAVE_O_EXEC */
#define POSIX_O_EXEC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXEC */
#ifdef CONFIG_HAVE_O_SEARCH
#define POSIX_O_SEARCH_DEF \
	{ "O_SEARCH", (DeeObject *)&posix_O_SEARCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_SEARCH >= 0
#if O_SEARCH == 0
#define posix_O_SEARCH DeeInt_Zero
#elif O_SEARCH == 1
#define posix_O_SEARCH DeeInt_One
#elif O_SEARCH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_SEARCH, O_SEARCH);
#else
PRIVATE DEFINE_UINT75(posix_O_SEARCH, O_SEARCH);
#endif
#else /* O_SEARCH >= 0 */
#if O_SEARCH == -1
#define posix_O_SEARCH DeeInt_MinusOne
#elif O_SEARCH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_SEARCH, O_SEARCH);
#else
PRIVATE DEFINE_INT75(posix_O_SEARCH, O_SEARCH);
#endif
#endif /* O_SEARCH < 0 */
#else /* CONFIG_HAVE_O_SEARCH */
#define POSIX_O_SEARCH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SEARCH */
#ifdef CONFIG_HAVE_O_TTY_INIT
#define POSIX_O_TTY_INIT_DEF \
	{ "O_TTY_INIT", (DeeObject *)&posix_O_TTY_INIT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_TTY_INIT >= 0
#if O_TTY_INIT == 0
#define posix_O_TTY_INIT DeeInt_Zero
#elif O_TTY_INIT == 1
#define posix_O_TTY_INIT DeeInt_One
#elif O_TTY_INIT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_TTY_INIT, O_TTY_INIT);
#else
PRIVATE DEFINE_UINT75(posix_O_TTY_INIT, O_TTY_INIT);
#endif
#else /* O_TTY_INIT >= 0 */
#if O_TTY_INIT == -1
#define posix_O_TTY_INIT DeeInt_MinusOne
#elif O_TTY_INIT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_TTY_INIT, O_TTY_INIT);
#else
PRIVATE DEFINE_INT75(posix_O_TTY_INIT, O_TTY_INIT);
#endif
#endif /* O_TTY_INIT < 0 */
#else /* CONFIG_HAVE_O_TTY_INIT */
#define POSIX_O_TTY_INIT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TTY_INIT */
#ifdef CONFIG_HAVE_O_NOLINKS
#define POSIX_O_NOLINKS_DEF \
	{ "O_NOLINKS", (DeeObject *)&posix_O_NOLINKS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if O_NOLINKS >= 0
#if O_NOLINKS == 0
#define posix_O_NOLINKS DeeInt_Zero
#elif O_NOLINKS == 1
#define posix_O_NOLINKS DeeInt_One
#elif O_NOLINKS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_O_NOLINKS, O_NOLINKS);
#else
PRIVATE DEFINE_UINT75(posix_O_NOLINKS, O_NOLINKS);
#endif
#else /* O_NOLINKS >= 0 */
#if O_NOLINKS == -1
#define posix_O_NOLINKS DeeInt_MinusOne
#elif O_NOLINKS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_O_NOLINKS, O_NOLINKS);
#else
PRIVATE DEFINE_INT75(posix_O_NOLINKS, O_NOLINKS);
#endif
#endif /* O_NOLINKS < 0 */
#else /* CONFIG_HAVE_O_NOLINKS */
#define POSIX_O_NOLINKS_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOLINKS */
#define POSIX_AT_FDCWD_DEF \
	{ "AT_FDCWD", (DeeObject *)&posix_AT_FDCWD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Special value used to indicate the *at functions should use the current working directory" },
#if AT_FDCWD >= 0
#if AT_FDCWD == 0
#define posix_AT_FDCWD DeeInt_Zero
#elif AT_FDCWD == 1
#define posix_AT_FDCWD DeeInt_One
#elif AT_FDCWD <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_FDCWD, AT_FDCWD);
#else
PRIVATE DEFINE_UINT75(posix_AT_FDCWD, AT_FDCWD);
#endif
#else /* AT_FDCWD >= 0 */
#if AT_FDCWD == -1
#define posix_AT_FDCWD DeeInt_MinusOne
#elif AT_FDCWD >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_FDCWD, AT_FDCWD);
#else
PRIVATE DEFINE_INT75(posix_AT_FDCWD, AT_FDCWD);
#endif
#endif /* AT_FDCWD < 0 */
#define POSIX_AT_SYMLINK_NOFOLLOW_DEF \
	{ "AT_SYMLINK_NOFOLLOW", (DeeObject *)&posix_AT_SYMLINK_NOFOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Do not follow symbolic links" },
#if AT_SYMLINK_NOFOLLOW >= 0
#if AT_SYMLINK_NOFOLLOW == 0
#define posix_AT_SYMLINK_NOFOLLOW DeeInt_Zero
#elif AT_SYMLINK_NOFOLLOW == 1
#define posix_AT_SYMLINK_NOFOLLOW DeeInt_One
#elif AT_SYMLINK_NOFOLLOW <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#else
PRIVATE DEFINE_UINT75(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#endif
#else /* AT_SYMLINK_NOFOLLOW >= 0 */
#if AT_SYMLINK_NOFOLLOW == -1
#define posix_AT_SYMLINK_NOFOLLOW DeeInt_MinusOne
#elif AT_SYMLINK_NOFOLLOW >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#else
PRIVATE DEFINE_INT75(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#endif
#endif /* AT_SYMLINK_NOFOLLOW < 0 */
#define POSIX_AT_REMOVEDIR_DEF \
	{ "AT_REMOVEDIR", (DeeObject *)&posix_AT_REMOVEDIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Remove directory instead of unlinking file" },
#if AT_REMOVEDIR >= 0
#if AT_REMOVEDIR == 0
#define posix_AT_REMOVEDIR DeeInt_Zero
#elif AT_REMOVEDIR == 1
#define posix_AT_REMOVEDIR DeeInt_One
#elif AT_REMOVEDIR <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#else
PRIVATE DEFINE_UINT75(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#endif
#else /* AT_REMOVEDIR >= 0 */
#if AT_REMOVEDIR == -1
#define posix_AT_REMOVEDIR DeeInt_MinusOne
#elif AT_REMOVEDIR >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#else
PRIVATE DEFINE_INT75(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#endif
#endif /* AT_REMOVEDIR < 0 */
#ifdef CONFIG_HAVE_AT_SYMLINK_FOLLOW
#define POSIX_AT_SYMLINK_FOLLOW_DEF \
	{ "AT_SYMLINK_FOLLOW", (DeeObject *)&posix_AT_SYMLINK_FOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Follow symbolic links" },
#if AT_SYMLINK_FOLLOW >= 0
#if AT_SYMLINK_FOLLOW == 0
#define posix_AT_SYMLINK_FOLLOW DeeInt_Zero
#elif AT_SYMLINK_FOLLOW == 1
#define posix_AT_SYMLINK_FOLLOW DeeInt_One
#elif AT_SYMLINK_FOLLOW <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#else
PRIVATE DEFINE_UINT75(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#endif
#else /* AT_SYMLINK_FOLLOW >= 0 */
#if AT_SYMLINK_FOLLOW == -1
#define posix_AT_SYMLINK_FOLLOW DeeInt_MinusOne
#elif AT_SYMLINK_FOLLOW >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#else
PRIVATE DEFINE_INT75(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#endif
#endif /* AT_SYMLINK_FOLLOW < 0 */
#else /* CONFIG_HAVE_AT_SYMLINK_FOLLOW */
#define POSIX_AT_SYMLINK_FOLLOW_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_SYMLINK_FOLLOW */
#ifdef CONFIG_HAVE_AT_NO_AUTOMOUNT
#define POSIX_AT_NO_AUTOMOUNT_DEF \
	{ "AT_NO_AUTOMOUNT", (DeeObject *)&posix_AT_NO_AUTOMOUNT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Suppress terminal automount traversal" },
#if AT_NO_AUTOMOUNT >= 0
#if AT_NO_AUTOMOUNT == 0
#define posix_AT_NO_AUTOMOUNT DeeInt_Zero
#elif AT_NO_AUTOMOUNT == 1
#define posix_AT_NO_AUTOMOUNT DeeInt_One
#elif AT_NO_AUTOMOUNT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#else
PRIVATE DEFINE_UINT75(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#endif
#else /* AT_NO_AUTOMOUNT >= 0 */
#if AT_NO_AUTOMOUNT == -1
#define posix_AT_NO_AUTOMOUNT DeeInt_MinusOne
#elif AT_NO_AUTOMOUNT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#else
PRIVATE DEFINE_INT75(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#endif
#endif /* AT_NO_AUTOMOUNT < 0 */
#else /* CONFIG_HAVE_AT_NO_AUTOMOUNT */
#define POSIX_AT_NO_AUTOMOUNT_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_NO_AUTOMOUNT */
#ifdef CONFIG_HAVE_AT_EMPTY_PATH
#define POSIX_AT_EMPTY_PATH_DEF \
	{ "AT_EMPTY_PATH", (DeeObject *)&posix_AT_EMPTY_PATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Allow empty relative pathname" },
#if AT_EMPTY_PATH >= 0
#if AT_EMPTY_PATH == 0
#define posix_AT_EMPTY_PATH DeeInt_Zero
#elif AT_EMPTY_PATH == 1
#define posix_AT_EMPTY_PATH DeeInt_One
#elif AT_EMPTY_PATH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#else
PRIVATE DEFINE_UINT75(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#endif
#else /* AT_EMPTY_PATH >= 0 */
#if AT_EMPTY_PATH == -1
#define posix_AT_EMPTY_PATH DeeInt_MinusOne
#elif AT_EMPTY_PATH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#else
PRIVATE DEFINE_INT75(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#endif
#endif /* AT_EMPTY_PATH < 0 */
#else /* CONFIG_HAVE_AT_EMPTY_PATH */
#define POSIX_AT_EMPTY_PATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_EMPTY_PATH */
#ifdef CONFIG_HAVE_AT_EACCESS
#define POSIX_AT_EACCESS_DEF \
	{ "AT_EACCESS", (DeeObject *)&posix_AT_EACCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Test access permitted for effective IDs, not real IDs" },
#if AT_EACCESS >= 0
#if AT_EACCESS == 0
#define posix_AT_EACCESS DeeInt_Zero
#elif AT_EACCESS == 1
#define posix_AT_EACCESS DeeInt_One
#elif AT_EACCESS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_EACCESS, AT_EACCESS);
#else
PRIVATE DEFINE_UINT75(posix_AT_EACCESS, AT_EACCESS);
#endif
#else /* AT_EACCESS >= 0 */
#if AT_EACCESS == -1
#define posix_AT_EACCESS DeeInt_MinusOne
#elif AT_EACCESS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_EACCESS, AT_EACCESS);
#else
PRIVATE DEFINE_INT75(posix_AT_EACCESS, AT_EACCESS);
#endif
#endif /* AT_EACCESS < 0 */
#else /* CONFIG_HAVE_AT_EACCESS */
#define POSIX_AT_EACCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_EACCESS */
#define POSIX_AT_REMOVEREG_DEF \
	{ "AT_REMOVEREG", (DeeObject *)&posix_AT_REMOVEREG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Explicitly allow removing anything that unlink() removes. (Default; Set in addition to ?GAT_REMOVEDIR to implement ?Gremove semantics)" },
#if AT_REMOVEREG >= 0
#if AT_REMOVEREG == 0
#define posix_AT_REMOVEREG DeeInt_Zero
#elif AT_REMOVEREG == 1
#define posix_AT_REMOVEREG DeeInt_One
#elif AT_REMOVEREG <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_REMOVEREG, AT_REMOVEREG);
#else
PRIVATE DEFINE_UINT75(posix_AT_REMOVEREG, AT_REMOVEREG);
#endif
#else /* AT_REMOVEREG >= 0 */
#if AT_REMOVEREG == -1
#define posix_AT_REMOVEREG DeeInt_MinusOne
#elif AT_REMOVEREG >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_REMOVEREG, AT_REMOVEREG);
#else
PRIVATE DEFINE_INT75(posix_AT_REMOVEREG, AT_REMOVEREG);
#endif
#endif /* AT_REMOVEREG < 0 */
#ifdef CONFIG_HAVE_AT_DOSPATH
#define POSIX_AT_DOSPATH_DEF \
	{ "AT_DOSPATH", (DeeObject *)&posix_AT_DOSPATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interpret $\"\\\" as $\"/\", and ignore casing during path resolution" },
#if AT_DOSPATH >= 0
#if AT_DOSPATH == 0
#define posix_AT_DOSPATH DeeInt_Zero
#elif AT_DOSPATH == 1
#define posix_AT_DOSPATH DeeInt_One
#elif AT_DOSPATH <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_DOSPATH, AT_DOSPATH);
#else
PRIVATE DEFINE_UINT75(posix_AT_DOSPATH, AT_DOSPATH);
#endif
#else /* AT_DOSPATH >= 0 */
#if AT_DOSPATH == -1
#define posix_AT_DOSPATH DeeInt_MinusOne
#elif AT_DOSPATH >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_DOSPATH, AT_DOSPATH);
#else
PRIVATE DEFINE_INT75(posix_AT_DOSPATH, AT_DOSPATH);
#endif
#endif /* AT_DOSPATH < 0 */
#else /* CONFIG_HAVE_AT_DOSPATH */
#define POSIX_AT_DOSPATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOSPATH */
#ifdef CONFIG_HAVE_AT_FDROOT
#define POSIX_AT_FDROOT_DEF \
	{ "AT_FDROOT", (DeeObject *)&posix_AT_FDROOT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Same as ?GAT_FDCWD but sets the filesystem root (using this, you can ?Gchroot with ?Gdup2)" },
#if AT_FDROOT >= 0
#if AT_FDROOT == 0
#define posix_AT_FDROOT DeeInt_Zero
#elif AT_FDROOT == 1
#define posix_AT_FDROOT DeeInt_One
#elif AT_FDROOT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_FDROOT, AT_FDROOT);
#else
PRIVATE DEFINE_UINT75(posix_AT_FDROOT, AT_FDROOT);
#endif
#else /* AT_FDROOT >= 0 */
#if AT_FDROOT == -1
#define posix_AT_FDROOT DeeInt_MinusOne
#elif AT_FDROOT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_FDROOT, AT_FDROOT);
#else
PRIVATE DEFINE_INT75(posix_AT_FDROOT, AT_FDROOT);
#endif
#endif /* AT_FDROOT < 0 */
#else /* CONFIG_HAVE_AT_FDROOT */
#define POSIX_AT_FDROOT_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_FDROOT */
#ifdef CONFIG_HAVE_AT_THIS_TASK
#define POSIX_AT_THIS_TASK_DEF \
	{ "AT_THIS_TASK", (DeeObject *)&posix_AT_THIS_TASK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_THIS_TASK >= 0
#if AT_THIS_TASK == 0
#define posix_AT_THIS_TASK DeeInt_Zero
#elif AT_THIS_TASK == 1
#define posix_AT_THIS_TASK DeeInt_One
#elif AT_THIS_TASK <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_THIS_TASK, AT_THIS_TASK);
#else
PRIVATE DEFINE_UINT75(posix_AT_THIS_TASK, AT_THIS_TASK);
#endif
#else /* AT_THIS_TASK >= 0 */
#if AT_THIS_TASK == -1
#define posix_AT_THIS_TASK DeeInt_MinusOne
#elif AT_THIS_TASK >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_THIS_TASK, AT_THIS_TASK);
#else
PRIVATE DEFINE_INT75(posix_AT_THIS_TASK, AT_THIS_TASK);
#endif
#endif /* AT_THIS_TASK < 0 */
#else /* CONFIG_HAVE_AT_THIS_TASK */
#define POSIX_AT_THIS_TASK_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_THIS_TASK */
#ifdef CONFIG_HAVE_AT_THIS_PROCESS
#define POSIX_AT_THIS_PROCESS_DEF \
	{ "AT_THIS_PROCESS", (DeeObject *)&posix_AT_THIS_PROCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_THIS_PROCESS >= 0
#if AT_THIS_PROCESS == 0
#define posix_AT_THIS_PROCESS DeeInt_Zero
#elif AT_THIS_PROCESS == 1
#define posix_AT_THIS_PROCESS DeeInt_One
#elif AT_THIS_PROCESS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#else
PRIVATE DEFINE_UINT75(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#endif
#else /* AT_THIS_PROCESS >= 0 */
#if AT_THIS_PROCESS == -1
#define posix_AT_THIS_PROCESS DeeInt_MinusOne
#elif AT_THIS_PROCESS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#else
PRIVATE DEFINE_INT75(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#endif
#endif /* AT_THIS_PROCESS < 0 */
#else /* CONFIG_HAVE_AT_THIS_PROCESS */
#define POSIX_AT_THIS_PROCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_THIS_PROCESS */
#ifdef CONFIG_HAVE_AT_PARENT_PROCESS
#define POSIX_AT_PARENT_PROCESS_DEF \
	{ "AT_PARENT_PROCESS", (DeeObject *)&posix_AT_PARENT_PROCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_PARENT_PROCESS >= 0
#if AT_PARENT_PROCESS == 0
#define posix_AT_PARENT_PROCESS DeeInt_Zero
#elif AT_PARENT_PROCESS == 1
#define posix_AT_PARENT_PROCESS DeeInt_One
#elif AT_PARENT_PROCESS <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#else
PRIVATE DEFINE_UINT75(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#endif
#else /* AT_PARENT_PROCESS >= 0 */
#if AT_PARENT_PROCESS == -1
#define posix_AT_PARENT_PROCESS DeeInt_MinusOne
#elif AT_PARENT_PROCESS >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#else
PRIVATE DEFINE_INT75(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#endif
#endif /* AT_PARENT_PROCESS < 0 */
#else /* CONFIG_HAVE_AT_PARENT_PROCESS */
#define POSIX_AT_PARENT_PROCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_PARENT_PROCESS */
#ifdef CONFIG_HAVE_AT_GROUP_LEADER
#define POSIX_AT_GROUP_LEADER_DEF \
	{ "AT_GROUP_LEADER", (DeeObject *)&posix_AT_GROUP_LEADER, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_GROUP_LEADER >= 0
#if AT_GROUP_LEADER == 0
#define posix_AT_GROUP_LEADER DeeInt_Zero
#elif AT_GROUP_LEADER == 1
#define posix_AT_GROUP_LEADER DeeInt_One
#elif AT_GROUP_LEADER <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#else
PRIVATE DEFINE_UINT75(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#endif
#else /* AT_GROUP_LEADER >= 0 */
#if AT_GROUP_LEADER == -1
#define posix_AT_GROUP_LEADER DeeInt_MinusOne
#elif AT_GROUP_LEADER >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#else
PRIVATE DEFINE_INT75(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#endif
#endif /* AT_GROUP_LEADER < 0 */
#else /* CONFIG_HAVE_AT_GROUP_LEADER */
#define POSIX_AT_GROUP_LEADER_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_GROUP_LEADER */
#ifdef CONFIG_HAVE_AT_SESSION_LEADER
#define POSIX_AT_SESSION_LEADER_DEF \
	{ "AT_SESSION_LEADER", (DeeObject *)&posix_AT_SESSION_LEADER, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_SESSION_LEADER >= 0
#if AT_SESSION_LEADER == 0
#define posix_AT_SESSION_LEADER DeeInt_Zero
#elif AT_SESSION_LEADER == 1
#define posix_AT_SESSION_LEADER DeeInt_One
#elif AT_SESSION_LEADER <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#else
PRIVATE DEFINE_UINT75(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#endif
#else /* AT_SESSION_LEADER >= 0 */
#if AT_SESSION_LEADER == -1
#define posix_AT_SESSION_LEADER DeeInt_MinusOne
#elif AT_SESSION_LEADER >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#else
PRIVATE DEFINE_INT75(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#endif
#endif /* AT_SESSION_LEADER < 0 */
#else /* CONFIG_HAVE_AT_SESSION_LEADER */
#define POSIX_AT_SESSION_LEADER_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_SESSION_LEADER */
#ifdef CONFIG_HAVE_AT_DOS_DRIVEMIN
#define POSIX_AT_DOS_DRIVEMIN_DEF \
	{ "AT_DOS_DRIVEMIN", (DeeObject *)&posix_AT_DOS_DRIVEMIN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_DOS_DRIVEMIN >= 0
#if AT_DOS_DRIVEMIN == 0
#define posix_AT_DOS_DRIVEMIN DeeInt_Zero
#elif AT_DOS_DRIVEMIN == 1
#define posix_AT_DOS_DRIVEMIN DeeInt_One
#elif AT_DOS_DRIVEMIN <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#else
PRIVATE DEFINE_UINT75(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#endif
#else /* AT_DOS_DRIVEMIN >= 0 */
#if AT_DOS_DRIVEMIN == -1
#define posix_AT_DOS_DRIVEMIN DeeInt_MinusOne
#elif AT_DOS_DRIVEMIN >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#else
PRIVATE DEFINE_INT75(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#endif
#endif /* AT_DOS_DRIVEMIN < 0 */
#else /* CONFIG_HAVE_AT_DOS_DRIVEMIN */
#define POSIX_AT_DOS_DRIVEMIN_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOS_DRIVEMIN */
#ifdef CONFIG_HAVE_AT_DOS_DRIVEMAX
#define POSIX_AT_DOS_DRIVEMAX_DEF \
	{ "AT_DOS_DRIVEMAX", (DeeObject *)&posix_AT_DOS_DRIVEMAX, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if AT_DOS_DRIVEMAX >= 0
#if AT_DOS_DRIVEMAX == 0
#define posix_AT_DOS_DRIVEMAX DeeInt_Zero
#elif AT_DOS_DRIVEMAX == 1
#define posix_AT_DOS_DRIVEMAX DeeInt_One
#elif AT_DOS_DRIVEMAX <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#else
PRIVATE DEFINE_UINT75(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#endif
#else /* AT_DOS_DRIVEMAX >= 0 */
#if AT_DOS_DRIVEMAX == -1
#define posix_AT_DOS_DRIVEMAX DeeInt_MinusOne
#elif AT_DOS_DRIVEMAX >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#else
PRIVATE DEFINE_INT75(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#endif
#endif /* AT_DOS_DRIVEMAX < 0 */
#else /* CONFIG_HAVE_AT_DOS_DRIVEMAX */
#define POSIX_AT_DOS_DRIVEMAX_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOS_DRIVEMAX */
#ifdef RENAME_NOREPLACE
#define POSIX_RENAME_NOREPLACE_DEF \
	{ "RENAME_NOREPLACE", (DeeObject *)&posix_RENAME_NOREPLACE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Don\'t overwrite target" },
#if RENAME_NOREPLACE >= 0
#if RENAME_NOREPLACE == 0
#define posix_RENAME_NOREPLACE DeeInt_Zero
#elif RENAME_NOREPLACE == 1
#define posix_RENAME_NOREPLACE DeeInt_One
#elif RENAME_NOREPLACE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#else
PRIVATE DEFINE_UINT75(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#endif
#else /* RENAME_NOREPLACE >= 0 */
#if RENAME_NOREPLACE == -1
#define posix_RENAME_NOREPLACE DeeInt_MinusOne
#elif RENAME_NOREPLACE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#else
PRIVATE DEFINE_INT75(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#endif
#endif /* RENAME_NOREPLACE < 0 */
#else /* RENAME_NOREPLACE */
#define POSIX_RENAME_NOREPLACE_DEF /* nothing */
#endif /* !RENAME_NOREPLACE */
#ifdef CONFIG_HAVE_RENAME_EXCHANGE
#define POSIX_RENAME_EXCHANGE_DEF \
	{ "RENAME_EXCHANGE", (DeeObject *)&posix_RENAME_EXCHANGE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Exchange source and dest" },
#if RENAME_EXCHANGE >= 0
#if RENAME_EXCHANGE == 0
#define posix_RENAME_EXCHANGE DeeInt_Zero
#elif RENAME_EXCHANGE == 1
#define posix_RENAME_EXCHANGE DeeInt_One
#elif RENAME_EXCHANGE <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#else
PRIVATE DEFINE_UINT75(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#endif
#else /* RENAME_EXCHANGE >= 0 */
#if RENAME_EXCHANGE == -1
#define posix_RENAME_EXCHANGE DeeInt_MinusOne
#elif RENAME_EXCHANGE >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#else
PRIVATE DEFINE_INT75(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#endif
#endif /* RENAME_EXCHANGE < 0 */
#else /* CONFIG_HAVE_RENAME_EXCHANGE */
#define POSIX_RENAME_EXCHANGE_DEF /* nothing */
#endif /* !CONFIG_HAVE_RENAME_EXCHANGE */
#ifdef CONFIG_HAVE_RENAME_WHITEOUT
#define POSIX_RENAME_WHITEOUT_DEF \
	{ "RENAME_WHITEOUT", (DeeObject *)&posix_RENAME_WHITEOUT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Whiteout source" },
#if RENAME_WHITEOUT >= 0
#if RENAME_WHITEOUT == 0
#define posix_RENAME_WHITEOUT DeeInt_Zero
#elif RENAME_WHITEOUT == 1
#define posix_RENAME_WHITEOUT DeeInt_One
#elif RENAME_WHITEOUT <= 0x7fffull /* 15-bit */
PRIVATE DEFINE_UINT15(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0x3fffffffull /* 30-bit */
PRIVATE DEFINE_UINT30(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0x1fffffffffffull /* 45-bit */
PRIVATE DEFINE_UINT45(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0xfffffffffffffffull /* 60-bit */
PRIVATE DEFINE_UINT60(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#else
PRIVATE DEFINE_UINT75(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#endif
#else /* RENAME_WHITEOUT >= 0 */
#if RENAME_WHITEOUT == -1
#define posix_RENAME_WHITEOUT DeeInt_MinusOne
#elif RENAME_WHITEOUT >= -0x4000ll /* 15-bit */
PRIVATE DEFINE_INT15(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x20000000ll /* 30-bit */
PRIVATE DEFINE_INT30(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x100000000000ll /* 45-bit */
PRIVATE DEFINE_INT45(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x800000000000000ll /* 60-bit */
PRIVATE DEFINE_INT60(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#else
PRIVATE DEFINE_INT75(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#endif
#endif /* RENAME_WHITEOUT < 0 */
#else /* CONFIG_HAVE_RENAME_WHITEOUT */
#define POSIX_RENAME_WHITEOUT_DEF /* nothing */
#endif /* !CONFIG_HAVE_RENAME_WHITEOUT */
