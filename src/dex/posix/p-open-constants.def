/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
/* WARNING: Autogenerated file "p-open-constants.def" */
#ifdef CONFIG_HAVE_O_RDONLY
#define POSIX_O_RDONLY_DEF \
	{ "O_RDONLY", OBJ_posix_O_RDONLY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_RDONLY)
#define OBJ_posix_O_RDONLY DeeInt_ForSmallInt(O_RDONLY)
#elif O_RDONLY >= 0
#if O_RDONLY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_UINT15(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_UINT30(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_UINT45(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_UINT60(posix_O_RDONLY, O_RDONLY);
#else
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_UINT75(posix_O_RDONLY, O_RDONLY);
#endif
#else /* O_RDONLY >= 0 */
#if O_RDONLY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_INT15(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_INT30(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_INT45(posix_O_RDONLY, O_RDONLY);
#elif O_RDONLY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_INT60(posix_O_RDONLY, O_RDONLY);
#else
#define OBJ_posix_O_RDONLY ((DeeObject *)&posix_O_RDONLY)
PRIVATE DEFINE_INT75(posix_O_RDONLY, O_RDONLY);
#endif
#endif /* O_RDONLY < 0 */
#else /* CONFIG_HAVE_O_RDONLY */
#define POSIX_O_RDONLY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RDONLY */
#ifdef CONFIG_HAVE_O_WRONLY
#define POSIX_O_WRONLY_DEF \
	{ "O_WRONLY", OBJ_posix_O_WRONLY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_WRONLY)
#define OBJ_posix_O_WRONLY DeeInt_ForSmallInt(O_WRONLY)
#elif O_WRONLY >= 0
#if O_WRONLY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_UINT15(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_UINT30(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_UINT45(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_UINT60(posix_O_WRONLY, O_WRONLY);
#else
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_UINT75(posix_O_WRONLY, O_WRONLY);
#endif
#else /* O_WRONLY >= 0 */
#if O_WRONLY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_INT15(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_INT30(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_INT45(posix_O_WRONLY, O_WRONLY);
#elif O_WRONLY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_INT60(posix_O_WRONLY, O_WRONLY);
#else
#define OBJ_posix_O_WRONLY ((DeeObject *)&posix_O_WRONLY)
PRIVATE DEFINE_INT75(posix_O_WRONLY, O_WRONLY);
#endif
#endif /* O_WRONLY < 0 */
#else /* CONFIG_HAVE_O_WRONLY */
#define POSIX_O_WRONLY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_WRONLY */
#ifdef CONFIG_HAVE_O_RDWR
#define POSIX_O_RDWR_DEF \
	{ "O_RDWR", OBJ_posix_O_RDWR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_RDWR)
#define OBJ_posix_O_RDWR DeeInt_ForSmallInt(O_RDWR)
#elif O_RDWR >= 0
#if O_RDWR <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_UINT15(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_UINT30(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_UINT45(posix_O_RDWR, O_RDWR);
#elif O_RDWR <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_UINT60(posix_O_RDWR, O_RDWR);
#else
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_UINT75(posix_O_RDWR, O_RDWR);
#endif
#else /* O_RDWR >= 0 */
#if O_RDWR >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_INT15(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_INT30(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_INT45(posix_O_RDWR, O_RDWR);
#elif O_RDWR >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_INT60(posix_O_RDWR, O_RDWR);
#else
#define OBJ_posix_O_RDWR ((DeeObject *)&posix_O_RDWR)
PRIVATE DEFINE_INT75(posix_O_RDWR, O_RDWR);
#endif
#endif /* O_RDWR < 0 */
#else /* CONFIG_HAVE_O_RDWR */
#define POSIX_O_RDWR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RDWR */
#ifdef CONFIG_HAVE_O_APPEND
#define POSIX_O_APPEND_DEF \
	{ "O_APPEND", OBJ_posix_O_APPEND, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Always append data to the end of the file" },
#if DeeInt_IsSmallInt(O_APPEND)
#define OBJ_posix_O_APPEND DeeInt_ForSmallInt(O_APPEND)
#elif O_APPEND >= 0
#if O_APPEND <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_UINT15(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_UINT30(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_UINT45(posix_O_APPEND, O_APPEND);
#elif O_APPEND <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_UINT60(posix_O_APPEND, O_APPEND);
#else
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_UINT75(posix_O_APPEND, O_APPEND);
#endif
#else /* O_APPEND >= 0 */
#if O_APPEND >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_INT15(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_INT30(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_INT45(posix_O_APPEND, O_APPEND);
#elif O_APPEND >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_INT60(posix_O_APPEND, O_APPEND);
#else
#define OBJ_posix_O_APPEND ((DeeObject *)&posix_O_APPEND)
PRIVATE DEFINE_INT75(posix_O_APPEND, O_APPEND);
#endif
#endif /* O_APPEND < 0 */
#else /* CONFIG_HAVE_O_APPEND */
#define POSIX_O_APPEND_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_APPEND */
#ifdef CONFIG_HAVE_O_CREAT
#define POSIX_O_CREAT_DEF \
	{ "O_CREAT", OBJ_posix_O_CREAT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "If missing, create a new file" },
#if DeeInt_IsSmallInt(O_CREAT)
#define OBJ_posix_O_CREAT DeeInt_ForSmallInt(O_CREAT)
#elif O_CREAT >= 0
#if O_CREAT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_UINT15(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_UINT30(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_UINT45(posix_O_CREAT, O_CREAT);
#elif O_CREAT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_UINT60(posix_O_CREAT, O_CREAT);
#else
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_UINT75(posix_O_CREAT, O_CREAT);
#endif
#else /* O_CREAT >= 0 */
#if O_CREAT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_INT15(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_INT30(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_INT45(posix_O_CREAT, O_CREAT);
#elif O_CREAT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_INT60(posix_O_CREAT, O_CREAT);
#else
#define OBJ_posix_O_CREAT ((DeeObject *)&posix_O_CREAT)
PRIVATE DEFINE_INT75(posix_O_CREAT, O_CREAT);
#endif
#endif /* O_CREAT < 0 */
#else /* CONFIG_HAVE_O_CREAT */
#define POSIX_O_CREAT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CREAT */
#ifdef CONFIG_HAVE_O_TRUNC
#define POSIX_O_TRUNC_DEF \
	{ "O_TRUNC", OBJ_posix_O_TRUNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_TRUNC)
#define OBJ_posix_O_TRUNC DeeInt_ForSmallInt(O_TRUNC)
#elif O_TRUNC >= 0
#if O_TRUNC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_UINT15(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_UINT30(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_UINT45(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_UINT60(posix_O_TRUNC, O_TRUNC);
#else
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_UINT75(posix_O_TRUNC, O_TRUNC);
#endif
#else /* O_TRUNC >= 0 */
#if O_TRUNC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_INT15(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_INT30(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_INT45(posix_O_TRUNC, O_TRUNC);
#elif O_TRUNC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_INT60(posix_O_TRUNC, O_TRUNC);
#else
#define OBJ_posix_O_TRUNC ((DeeObject *)&posix_O_TRUNC)
PRIVATE DEFINE_INT75(posix_O_TRUNC, O_TRUNC);
#endif
#endif /* O_TRUNC < 0 */
#else /* CONFIG_HAVE_O_TRUNC */
#define POSIX_O_TRUNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TRUNC */
#ifdef CONFIG_HAVE_O_EXCL
#define POSIX_O_EXCL_DEF \
	{ "O_EXCL", OBJ_posix_O_EXCL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "When used with #O_CREAT, set #EEXIST if the file already exists" },
#if DeeInt_IsSmallInt(O_EXCL)
#define OBJ_posix_O_EXCL DeeInt_ForSmallInt(O_EXCL)
#elif O_EXCL >= 0
#if O_EXCL <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_UINT15(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_UINT30(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_UINT45(posix_O_EXCL, O_EXCL);
#elif O_EXCL <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_UINT60(posix_O_EXCL, O_EXCL);
#else
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_UINT75(posix_O_EXCL, O_EXCL);
#endif
#else /* O_EXCL >= 0 */
#if O_EXCL >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_INT15(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_INT30(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_INT45(posix_O_EXCL, O_EXCL);
#elif O_EXCL >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_INT60(posix_O_EXCL, O_EXCL);
#else
#define OBJ_posix_O_EXCL ((DeeObject *)&posix_O_EXCL)
PRIVATE DEFINE_INT75(posix_O_EXCL, O_EXCL);
#endif
#endif /* O_EXCL < 0 */
#else /* CONFIG_HAVE_O_EXCL */
#define POSIX_O_EXCL_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXCL */
#ifdef CONFIG_HAVE_O_TEXT
#define POSIX_O_TEXT_DEF \
	{ "O_TEXT", OBJ_posix_O_TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_TEXT)
#define OBJ_posix_O_TEXT DeeInt_ForSmallInt(O_TEXT)
#elif O_TEXT >= 0
#if O_TEXT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_UINT15(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_UINT30(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_UINT45(posix_O_TEXT, O_TEXT);
#elif O_TEXT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_UINT60(posix_O_TEXT, O_TEXT);
#else
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_UINT75(posix_O_TEXT, O_TEXT);
#endif
#else /* O_TEXT >= 0 */
#if O_TEXT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_INT15(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_INT30(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_INT45(posix_O_TEXT, O_TEXT);
#elif O_TEXT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_INT60(posix_O_TEXT, O_TEXT);
#else
#define OBJ_posix_O_TEXT ((DeeObject *)&posix_O_TEXT)
PRIVATE DEFINE_INT75(posix_O_TEXT, O_TEXT);
#endif
#endif /* O_TEXT < 0 */
#else /* CONFIG_HAVE_O_TEXT */
#define POSIX_O_TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TEXT */
#ifdef CONFIG_HAVE_O_BINARY
#define POSIX_O_BINARY_DEF \
	{ "O_BINARY", OBJ_posix_O_BINARY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_BINARY)
#define OBJ_posix_O_BINARY DeeInt_ForSmallInt(O_BINARY)
#elif O_BINARY >= 0
#if O_BINARY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_UINT15(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_UINT30(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_UINT45(posix_O_BINARY, O_BINARY);
#elif O_BINARY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_UINT60(posix_O_BINARY, O_BINARY);
#else
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_UINT75(posix_O_BINARY, O_BINARY);
#endif
#else /* O_BINARY >= 0 */
#if O_BINARY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_INT15(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_INT30(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_INT45(posix_O_BINARY, O_BINARY);
#elif O_BINARY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_INT60(posix_O_BINARY, O_BINARY);
#else
#define OBJ_posix_O_BINARY ((DeeObject *)&posix_O_BINARY)
PRIVATE DEFINE_INT75(posix_O_BINARY, O_BINARY);
#endif
#endif /* O_BINARY < 0 */
#else /* CONFIG_HAVE_O_BINARY */
#define POSIX_O_BINARY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_BINARY */
#ifdef CONFIG_HAVE_O_WTEXT
#define POSIX_O_WTEXT_DEF \
	{ "O_WTEXT", OBJ_posix_O_WTEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_WTEXT)
#define OBJ_posix_O_WTEXT DeeInt_ForSmallInt(O_WTEXT)
#elif O_WTEXT >= 0
#if O_WTEXT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_UINT15(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_UINT30(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_UINT45(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_UINT60(posix_O_WTEXT, O_WTEXT);
#else
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_UINT75(posix_O_WTEXT, O_WTEXT);
#endif
#else /* O_WTEXT >= 0 */
#if O_WTEXT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_INT15(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_INT30(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_INT45(posix_O_WTEXT, O_WTEXT);
#elif O_WTEXT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_INT60(posix_O_WTEXT, O_WTEXT);
#else
#define OBJ_posix_O_WTEXT ((DeeObject *)&posix_O_WTEXT)
PRIVATE DEFINE_INT75(posix_O_WTEXT, O_WTEXT);
#endif
#endif /* O_WTEXT < 0 */
#else /* CONFIG_HAVE_O_WTEXT */
#define POSIX_O_WTEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_WTEXT */
#ifdef CONFIG_HAVE_O_U16TEXT
#define POSIX_O_U16TEXT_DEF \
	{ "O_U16TEXT", OBJ_posix_O_U16TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_U16TEXT)
#define OBJ_posix_O_U16TEXT DeeInt_ForSmallInt(O_U16TEXT)
#elif O_U16TEXT >= 0
#if O_U16TEXT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_UINT15(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_UINT30(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_UINT45(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_UINT60(posix_O_U16TEXT, O_U16TEXT);
#else
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_UINT75(posix_O_U16TEXT, O_U16TEXT);
#endif
#else /* O_U16TEXT >= 0 */
#if O_U16TEXT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_INT15(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_INT30(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_INT45(posix_O_U16TEXT, O_U16TEXT);
#elif O_U16TEXT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_INT60(posix_O_U16TEXT, O_U16TEXT);
#else
#define OBJ_posix_O_U16TEXT ((DeeObject *)&posix_O_U16TEXT)
PRIVATE DEFINE_INT75(posix_O_U16TEXT, O_U16TEXT);
#endif
#endif /* O_U16TEXT < 0 */
#else /* CONFIG_HAVE_O_U16TEXT */
#define POSIX_O_U16TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_U16TEXT */
#ifdef CONFIG_HAVE_O_U8TEXT
#define POSIX_O_U8TEXT_DEF \
	{ "O_U8TEXT", OBJ_posix_O_U8TEXT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_U8TEXT)
#define OBJ_posix_O_U8TEXT DeeInt_ForSmallInt(O_U8TEXT)
#elif O_U8TEXT >= 0
#if O_U8TEXT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_UINT15(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_UINT30(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_UINT45(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_UINT60(posix_O_U8TEXT, O_U8TEXT);
#else
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_UINT75(posix_O_U8TEXT, O_U8TEXT);
#endif
#else /* O_U8TEXT >= 0 */
#if O_U8TEXT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_INT15(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_INT30(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_INT45(posix_O_U8TEXT, O_U8TEXT);
#elif O_U8TEXT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_INT60(posix_O_U8TEXT, O_U8TEXT);
#else
#define OBJ_posix_O_U8TEXT ((DeeObject *)&posix_O_U8TEXT)
PRIVATE DEFINE_INT75(posix_O_U8TEXT, O_U8TEXT);
#endif
#endif /* O_U8TEXT < 0 */
#else /* CONFIG_HAVE_O_U8TEXT */
#define POSIX_O_U8TEXT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_U8TEXT */
#ifdef CONFIG_HAVE_O_CLOEXEC
#define POSIX_O_CLOEXEC_DEF \
	{ "O_CLOEXEC", OBJ_posix_O_CLOEXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Close the file during ${exec()}" },
#if DeeInt_IsSmallInt(O_CLOEXEC)
#define OBJ_posix_O_CLOEXEC DeeInt_ForSmallInt(O_CLOEXEC)
#elif O_CLOEXEC >= 0
#if O_CLOEXEC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_UINT15(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_UINT30(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_UINT45(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_UINT60(posix_O_CLOEXEC, O_CLOEXEC);
#else
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_UINT75(posix_O_CLOEXEC, O_CLOEXEC);
#endif
#else /* O_CLOEXEC >= 0 */
#if O_CLOEXEC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_INT15(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_INT30(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_INT45(posix_O_CLOEXEC, O_CLOEXEC);
#elif O_CLOEXEC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_INT60(posix_O_CLOEXEC, O_CLOEXEC);
#else
#define OBJ_posix_O_CLOEXEC ((DeeObject *)&posix_O_CLOEXEC)
PRIVATE DEFINE_INT75(posix_O_CLOEXEC, O_CLOEXEC);
#endif
#endif /* O_CLOEXEC < 0 */
#else /* CONFIG_HAVE_O_CLOEXEC */
#define POSIX_O_CLOEXEC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CLOEXEC */
#ifdef CONFIG_HAVE_O_TEMPORARY
#define POSIX_O_TEMPORARY_DEF \
	{ "O_TEMPORARY", OBJ_posix_O_TEMPORARY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_TEMPORARY)
#define OBJ_posix_O_TEMPORARY DeeInt_ForSmallInt(O_TEMPORARY)
#elif O_TEMPORARY >= 0
#if O_TEMPORARY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_UINT15(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_UINT30(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_UINT45(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_UINT60(posix_O_TEMPORARY, O_TEMPORARY);
#else
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_UINT75(posix_O_TEMPORARY, O_TEMPORARY);
#endif
#else /* O_TEMPORARY >= 0 */
#if O_TEMPORARY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_INT15(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_INT30(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_INT45(posix_O_TEMPORARY, O_TEMPORARY);
#elif O_TEMPORARY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_INT60(posix_O_TEMPORARY, O_TEMPORARY);
#else
#define OBJ_posix_O_TEMPORARY ((DeeObject *)&posix_O_TEMPORARY)
PRIVATE DEFINE_INT75(posix_O_TEMPORARY, O_TEMPORARY);
#endif
#endif /* O_TEMPORARY < 0 */
#else /* CONFIG_HAVE_O_TEMPORARY */
#define POSIX_O_TEMPORARY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TEMPORARY */
#ifdef CONFIG_HAVE_O_SHORT_LIVED
#define POSIX_O_SHORT_LIVED_DEF \
	{ "O_SHORT_LIVED", OBJ_posix_O_SHORT_LIVED, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_SHORT_LIVED)
#define OBJ_posix_O_SHORT_LIVED DeeInt_ForSmallInt(O_SHORT_LIVED)
#elif O_SHORT_LIVED >= 0
#if O_SHORT_LIVED <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_UINT15(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_UINT30(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_UINT45(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_UINT60(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#else
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_UINT75(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#endif
#else /* O_SHORT_LIVED >= 0 */
#if O_SHORT_LIVED >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_INT15(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_INT30(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_INT45(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#elif O_SHORT_LIVED >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_INT60(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#else
#define OBJ_posix_O_SHORT_LIVED ((DeeObject *)&posix_O_SHORT_LIVED)
PRIVATE DEFINE_INT75(posix_O_SHORT_LIVED, O_SHORT_LIVED);
#endif
#endif /* O_SHORT_LIVED < 0 */
#else /* CONFIG_HAVE_O_SHORT_LIVED */
#define POSIX_O_SHORT_LIVED_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SHORT_LIVED */
#ifdef CONFIG_HAVE_O_OBTAIN_DIR
#define POSIX_O_OBTAIN_DIR_DEF \
	{ "O_OBTAIN_DIR", OBJ_posix_O_OBTAIN_DIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_OBTAIN_DIR)
#define OBJ_posix_O_OBTAIN_DIR DeeInt_ForSmallInt(O_OBTAIN_DIR)
#elif O_OBTAIN_DIR >= 0
#if O_OBTAIN_DIR <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_UINT15(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_UINT30(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_UINT45(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_UINT60(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#else
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_UINT75(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#endif
#else /* O_OBTAIN_DIR >= 0 */
#if O_OBTAIN_DIR >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_INT15(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_INT30(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_INT45(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#elif O_OBTAIN_DIR >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_INT60(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#else
#define OBJ_posix_O_OBTAIN_DIR ((DeeObject *)&posix_O_OBTAIN_DIR)
PRIVATE DEFINE_INT75(posix_O_OBTAIN_DIR, O_OBTAIN_DIR);
#endif
#endif /* O_OBTAIN_DIR < 0 */
#else /* CONFIG_HAVE_O_OBTAIN_DIR */
#define POSIX_O_OBTAIN_DIR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_OBTAIN_DIR */
#ifdef CONFIG_HAVE_O_SEQUENTIAL
#define POSIX_O_SEQUENTIAL_DEF \
	{ "O_SEQUENTIAL", OBJ_posix_O_SEQUENTIAL, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_SEQUENTIAL)
#define OBJ_posix_O_SEQUENTIAL DeeInt_ForSmallInt(O_SEQUENTIAL)
#elif O_SEQUENTIAL >= 0
#if O_SEQUENTIAL <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_UINT15(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_UINT30(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_UINT45(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_UINT60(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#else
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_UINT75(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#endif
#else /* O_SEQUENTIAL >= 0 */
#if O_SEQUENTIAL >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_INT15(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_INT30(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_INT45(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#elif O_SEQUENTIAL >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_INT60(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#else
#define OBJ_posix_O_SEQUENTIAL ((DeeObject *)&posix_O_SEQUENTIAL)
PRIVATE DEFINE_INT75(posix_O_SEQUENTIAL, O_SEQUENTIAL);
#endif
#endif /* O_SEQUENTIAL < 0 */
#else /* CONFIG_HAVE_O_SEQUENTIAL */
#define POSIX_O_SEQUENTIAL_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SEQUENTIAL */
#ifdef CONFIG_HAVE_O_RANDOM
#define POSIX_O_RANDOM_DEF \
	{ "O_RANDOM", OBJ_posix_O_RANDOM, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_RANDOM)
#define OBJ_posix_O_RANDOM DeeInt_ForSmallInt(O_RANDOM)
#elif O_RANDOM >= 0
#if O_RANDOM <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_UINT15(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_UINT30(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_UINT45(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_UINT60(posix_O_RANDOM, O_RANDOM);
#else
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_UINT75(posix_O_RANDOM, O_RANDOM);
#endif
#else /* O_RANDOM >= 0 */
#if O_RANDOM >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_INT15(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_INT30(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_INT45(posix_O_RANDOM, O_RANDOM);
#elif O_RANDOM >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_INT60(posix_O_RANDOM, O_RANDOM);
#else
#define OBJ_posix_O_RANDOM ((DeeObject *)&posix_O_RANDOM)
PRIVATE DEFINE_INT75(posix_O_RANDOM, O_RANDOM);
#endif
#endif /* O_RANDOM < 0 */
#else /* CONFIG_HAVE_O_RANDOM */
#define POSIX_O_RANDOM_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RANDOM */
#ifdef CONFIG_HAVE_O_NOCTTY
#define POSIX_O_NOCTTY_DEF \
	{ "O_NOCTTY", OBJ_posix_O_NOCTTY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "If the calling process does not have a controlling terminal assigned, do not attempt to assign the newly opened file as terminal, even when ${isatty(open(...))} would be true" },
#if DeeInt_IsSmallInt(O_NOCTTY)
#define OBJ_posix_O_NOCTTY DeeInt_ForSmallInt(O_NOCTTY)
#elif O_NOCTTY >= 0
#if O_NOCTTY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_UINT15(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_UINT30(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_UINT45(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_UINT60(posix_O_NOCTTY, O_NOCTTY);
#else
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_UINT75(posix_O_NOCTTY, O_NOCTTY);
#endif
#else /* O_NOCTTY >= 0 */
#if O_NOCTTY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_INT15(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_INT30(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_INT45(posix_O_NOCTTY, O_NOCTTY);
#elif O_NOCTTY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_INT60(posix_O_NOCTTY, O_NOCTTY);
#else
#define OBJ_posix_O_NOCTTY ((DeeObject *)&posix_O_NOCTTY)
PRIVATE DEFINE_INT75(posix_O_NOCTTY, O_NOCTTY);
#endif
#endif /* O_NOCTTY < 0 */
#else /* CONFIG_HAVE_O_NOCTTY */
#define POSIX_O_NOCTTY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOCTTY */
#ifdef CONFIG_HAVE_O_NONBLOCK
#define POSIX_O_NONBLOCK_DEF \
	{ "O_NONBLOCK", OBJ_posix_O_NONBLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Do not block when trying to read data that hasn\'t been written, yet" },
#if DeeInt_IsSmallInt(O_NONBLOCK)
#define OBJ_posix_O_NONBLOCK DeeInt_ForSmallInt(O_NONBLOCK)
#elif O_NONBLOCK >= 0
#if O_NONBLOCK <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_UINT15(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_UINT30(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_UINT45(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_UINT60(posix_O_NONBLOCK, O_NONBLOCK);
#else
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_UINT75(posix_O_NONBLOCK, O_NONBLOCK);
#endif
#else /* O_NONBLOCK >= 0 */
#if O_NONBLOCK >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_INT15(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_INT30(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_INT45(posix_O_NONBLOCK, O_NONBLOCK);
#elif O_NONBLOCK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_INT60(posix_O_NONBLOCK, O_NONBLOCK);
#else
#define OBJ_posix_O_NONBLOCK ((DeeObject *)&posix_O_NONBLOCK)
PRIVATE DEFINE_INT75(posix_O_NONBLOCK, O_NONBLOCK);
#endif
#endif /* O_NONBLOCK < 0 */
#else /* CONFIG_HAVE_O_NONBLOCK */
#define POSIX_O_NONBLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NONBLOCK */
#ifdef CONFIG_HAVE_O_SYNC
#define POSIX_O_SYNC_DEF \
	{ "O_SYNC", OBJ_posix_O_SYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_SYNC)
#define OBJ_posix_O_SYNC DeeInt_ForSmallInt(O_SYNC)
#elif O_SYNC >= 0
#if O_SYNC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_UINT15(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_UINT30(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_UINT45(posix_O_SYNC, O_SYNC);
#elif O_SYNC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_UINT60(posix_O_SYNC, O_SYNC);
#else
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_UINT75(posix_O_SYNC, O_SYNC);
#endif
#else /* O_SYNC >= 0 */
#if O_SYNC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_INT15(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_INT30(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_INT45(posix_O_SYNC, O_SYNC);
#elif O_SYNC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_INT60(posix_O_SYNC, O_SYNC);
#else
#define OBJ_posix_O_SYNC ((DeeObject *)&posix_O_SYNC)
PRIVATE DEFINE_INT75(posix_O_SYNC, O_SYNC);
#endif
#endif /* O_SYNC < 0 */
#else /* CONFIG_HAVE_O_SYNC */
#define POSIX_O_SYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SYNC */
#ifdef CONFIG_HAVE_O_RSYNC
#define POSIX_O_RSYNC_DEF \
	{ "O_RSYNC", OBJ_posix_O_RSYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_RSYNC)
#define OBJ_posix_O_RSYNC DeeInt_ForSmallInt(O_RSYNC)
#elif O_RSYNC >= 0
#if O_RSYNC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_UINT15(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_UINT30(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_UINT45(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_UINT60(posix_O_RSYNC, O_RSYNC);
#else
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_UINT75(posix_O_RSYNC, O_RSYNC);
#endif
#else /* O_RSYNC >= 0 */
#if O_RSYNC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_INT15(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_INT30(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_INT45(posix_O_RSYNC, O_RSYNC);
#elif O_RSYNC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_INT60(posix_O_RSYNC, O_RSYNC);
#else
#define OBJ_posix_O_RSYNC ((DeeObject *)&posix_O_RSYNC)
PRIVATE DEFINE_INT75(posix_O_RSYNC, O_RSYNC);
#endif
#endif /* O_RSYNC < 0 */
#else /* CONFIG_HAVE_O_RSYNC */
#define POSIX_O_RSYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_RSYNC */
#ifdef CONFIG_HAVE_O_DSYNC
#define POSIX_O_DSYNC_DEF \
	{ "O_DSYNC", OBJ_posix_O_DSYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_DSYNC)
#define OBJ_posix_O_DSYNC DeeInt_ForSmallInt(O_DSYNC)
#elif O_DSYNC >= 0
#if O_DSYNC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_UINT15(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_UINT30(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_UINT45(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_UINT60(posix_O_DSYNC, O_DSYNC);
#else
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_UINT75(posix_O_DSYNC, O_DSYNC);
#endif
#else /* O_DSYNC >= 0 */
#if O_DSYNC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_INT15(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_INT30(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_INT45(posix_O_DSYNC, O_DSYNC);
#elif O_DSYNC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_INT60(posix_O_DSYNC, O_DSYNC);
#else
#define OBJ_posix_O_DSYNC ((DeeObject *)&posix_O_DSYNC)
PRIVATE DEFINE_INT75(posix_O_DSYNC, O_DSYNC);
#endif
#endif /* O_DSYNC < 0 */
#else /* CONFIG_HAVE_O_DSYNC */
#define POSIX_O_DSYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DSYNC */
#ifdef CONFIG_HAVE_O_ASYNC
#define POSIX_O_ASYNC_DEF \
	{ "O_ASYNC", OBJ_posix_O_ASYNC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_ASYNC)
#define OBJ_posix_O_ASYNC DeeInt_ForSmallInt(O_ASYNC)
#elif O_ASYNC >= 0
#if O_ASYNC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_UINT15(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_UINT30(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_UINT45(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_UINT60(posix_O_ASYNC, O_ASYNC);
#else
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_UINT75(posix_O_ASYNC, O_ASYNC);
#endif
#else /* O_ASYNC >= 0 */
#if O_ASYNC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_INT15(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_INT30(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_INT45(posix_O_ASYNC, O_ASYNC);
#elif O_ASYNC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_INT60(posix_O_ASYNC, O_ASYNC);
#else
#define OBJ_posix_O_ASYNC ((DeeObject *)&posix_O_ASYNC)
PRIVATE DEFINE_INT75(posix_O_ASYNC, O_ASYNC);
#endif
#endif /* O_ASYNC < 0 */
#else /* CONFIG_HAVE_O_ASYNC */
#define POSIX_O_ASYNC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_ASYNC */
#ifdef CONFIG_HAVE_O_DIRECT
#define POSIX_O_DIRECT_DEF \
	{ "O_DIRECT", OBJ_posix_O_DIRECT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_DIRECT)
#define OBJ_posix_O_DIRECT DeeInt_ForSmallInt(O_DIRECT)
#elif O_DIRECT >= 0
#if O_DIRECT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_UINT15(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_UINT30(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_UINT45(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_UINT60(posix_O_DIRECT, O_DIRECT);
#else
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_UINT75(posix_O_DIRECT, O_DIRECT);
#endif
#else /* O_DIRECT >= 0 */
#if O_DIRECT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_INT15(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_INT30(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_INT45(posix_O_DIRECT, O_DIRECT);
#elif O_DIRECT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_INT60(posix_O_DIRECT, O_DIRECT);
#else
#define OBJ_posix_O_DIRECT ((DeeObject *)&posix_O_DIRECT)
PRIVATE DEFINE_INT75(posix_O_DIRECT, O_DIRECT);
#endif
#endif /* O_DIRECT < 0 */
#else /* CONFIG_HAVE_O_DIRECT */
#define POSIX_O_DIRECT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DIRECT */
#ifdef CONFIG_HAVE_O_LARGEFILE
#define POSIX_O_LARGEFILE_DEF \
	{ "O_LARGEFILE", OBJ_posix_O_LARGEFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_LARGEFILE)
#define OBJ_posix_O_LARGEFILE DeeInt_ForSmallInt(O_LARGEFILE)
#elif O_LARGEFILE >= 0
#if O_LARGEFILE <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_UINT15(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_UINT30(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_UINT45(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_UINT60(posix_O_LARGEFILE, O_LARGEFILE);
#else
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_UINT75(posix_O_LARGEFILE, O_LARGEFILE);
#endif
#else /* O_LARGEFILE >= 0 */
#if O_LARGEFILE >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_INT15(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_INT30(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_INT45(posix_O_LARGEFILE, O_LARGEFILE);
#elif O_LARGEFILE >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_INT60(posix_O_LARGEFILE, O_LARGEFILE);
#else
#define OBJ_posix_O_LARGEFILE ((DeeObject *)&posix_O_LARGEFILE)
PRIVATE DEFINE_INT75(posix_O_LARGEFILE, O_LARGEFILE);
#endif
#endif /* O_LARGEFILE < 0 */
#else /* CONFIG_HAVE_O_LARGEFILE */
#define POSIX_O_LARGEFILE_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_LARGEFILE */
#ifdef CONFIG_HAVE_O_DIRECTORY
#define POSIX_O_DIRECTORY_DEF \
	{ "O_DIRECTORY", OBJ_posix_O_DIRECTORY, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Set #ENOTDIR when the final path component of an open() system call turns out to be something other than a directory" },
#if DeeInt_IsSmallInt(O_DIRECTORY)
#define OBJ_posix_O_DIRECTORY DeeInt_ForSmallInt(O_DIRECTORY)
#elif O_DIRECTORY >= 0
#if O_DIRECTORY <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_UINT15(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_UINT30(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_UINT45(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_UINT60(posix_O_DIRECTORY, O_DIRECTORY);
#else
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_UINT75(posix_O_DIRECTORY, O_DIRECTORY);
#endif
#else /* O_DIRECTORY >= 0 */
#if O_DIRECTORY >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_INT15(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_INT30(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_INT45(posix_O_DIRECTORY, O_DIRECTORY);
#elif O_DIRECTORY >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_INT60(posix_O_DIRECTORY, O_DIRECTORY);
#else
#define OBJ_posix_O_DIRECTORY ((DeeObject *)&posix_O_DIRECTORY)
PRIVATE DEFINE_INT75(posix_O_DIRECTORY, O_DIRECTORY);
#endif
#endif /* O_DIRECTORY < 0 */
#else /* CONFIG_HAVE_O_DIRECTORY */
#define POSIX_O_DIRECTORY_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DIRECTORY */
#ifdef CONFIG_HAVE_O_NOFOLLOW
#define POSIX_O_NOFOLLOW_DEF \
	{ "O_NOFOLLOW", OBJ_posix_O_NOFOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Set #ELOOP when the final path component of an open() system call turns out to be a symbolic link" },
#if DeeInt_IsSmallInt(O_NOFOLLOW)
#define OBJ_posix_O_NOFOLLOW DeeInt_ForSmallInt(O_NOFOLLOW)
#elif O_NOFOLLOW >= 0
#if O_NOFOLLOW <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_UINT15(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_UINT30(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_UINT45(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_UINT60(posix_O_NOFOLLOW, O_NOFOLLOW);
#else
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_UINT75(posix_O_NOFOLLOW, O_NOFOLLOW);
#endif
#else /* O_NOFOLLOW >= 0 */
#if O_NOFOLLOW >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_INT15(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_INT30(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_INT45(posix_O_NOFOLLOW, O_NOFOLLOW);
#elif O_NOFOLLOW >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_INT60(posix_O_NOFOLLOW, O_NOFOLLOW);
#else
#define OBJ_posix_O_NOFOLLOW ((DeeObject *)&posix_O_NOFOLLOW)
PRIVATE DEFINE_INT75(posix_O_NOFOLLOW, O_NOFOLLOW);
#endif
#endif /* O_NOFOLLOW < 0 */
#else /* CONFIG_HAVE_O_NOFOLLOW */
#define POSIX_O_NOFOLLOW_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOFOLLOW */
#ifdef CONFIG_HAVE_O_NOATIME
#define POSIX_O_NOATIME_DEF \
	{ "O_NOATIME", OBJ_posix_O_NOATIME, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Don\'t update last-accessed time stamps" },
#if DeeInt_IsSmallInt(O_NOATIME)
#define OBJ_posix_O_NOATIME DeeInt_ForSmallInt(O_NOATIME)
#elif O_NOATIME >= 0
#if O_NOATIME <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_UINT15(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_UINT30(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_UINT45(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_UINT60(posix_O_NOATIME, O_NOATIME);
#else
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_UINT75(posix_O_NOATIME, O_NOATIME);
#endif
#else /* O_NOATIME >= 0 */
#if O_NOATIME >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_INT15(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_INT30(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_INT45(posix_O_NOATIME, O_NOATIME);
#elif O_NOATIME >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_INT60(posix_O_NOATIME, O_NOATIME);
#else
#define OBJ_posix_O_NOATIME ((DeeObject *)&posix_O_NOATIME)
PRIVATE DEFINE_INT75(posix_O_NOATIME, O_NOATIME);
#endif
#endif /* O_NOATIME < 0 */
#else /* CONFIG_HAVE_O_NOATIME */
#define POSIX_O_NOATIME_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOATIME */
#ifdef CONFIG_HAVE_O_PATH
#define POSIX_O_PATH_DEF \
	{ "O_PATH", OBJ_posix_O_PATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Open a path for *at system calls" },
#if DeeInt_IsSmallInt(O_PATH)
#define OBJ_posix_O_PATH DeeInt_ForSmallInt(O_PATH)
#elif O_PATH >= 0
#if O_PATH <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_UINT15(posix_O_PATH, O_PATH);
#elif O_PATH <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_UINT30(posix_O_PATH, O_PATH);
#elif O_PATH <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_UINT45(posix_O_PATH, O_PATH);
#elif O_PATH <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_UINT60(posix_O_PATH, O_PATH);
#else
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_UINT75(posix_O_PATH, O_PATH);
#endif
#else /* O_PATH >= 0 */
#if O_PATH >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_INT15(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_INT30(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_INT45(posix_O_PATH, O_PATH);
#elif O_PATH >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_INT60(posix_O_PATH, O_PATH);
#else
#define OBJ_posix_O_PATH ((DeeObject *)&posix_O_PATH)
PRIVATE DEFINE_INT75(posix_O_PATH, O_PATH);
#endif
#endif /* O_PATH < 0 */
#else /* CONFIG_HAVE_O_PATH */
#define POSIX_O_PATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_PATH */
#ifdef CONFIG_HAVE_O_TMPFILE
#define POSIX_O_TMPFILE_DEF \
	{ "O_TMPFILE", OBJ_posix_O_TMPFILE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_TMPFILE)
#define OBJ_posix_O_TMPFILE DeeInt_ForSmallInt(O_TMPFILE)
#elif O_TMPFILE >= 0
#if O_TMPFILE <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_UINT15(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_UINT30(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_UINT45(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_UINT60(posix_O_TMPFILE, O_TMPFILE);
#else
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_UINT75(posix_O_TMPFILE, O_TMPFILE);
#endif
#else /* O_TMPFILE >= 0 */
#if O_TMPFILE >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_INT15(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_INT30(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_INT45(posix_O_TMPFILE, O_TMPFILE);
#elif O_TMPFILE >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_INT60(posix_O_TMPFILE, O_TMPFILE);
#else
#define OBJ_posix_O_TMPFILE ((DeeObject *)&posix_O_TMPFILE)
PRIVATE DEFINE_INT75(posix_O_TMPFILE, O_TMPFILE);
#endif
#endif /* O_TMPFILE < 0 */
#else /* CONFIG_HAVE_O_TMPFILE */
#define POSIX_O_TMPFILE_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TMPFILE */
#ifdef CONFIG_HAVE_O_CLOFORK
#define POSIX_O_CLOFORK_DEF \
	{ "O_CLOFORK", OBJ_posix_O_CLOFORK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Close the handle when the file descriptors are unshared" },
#if DeeInt_IsSmallInt(O_CLOFORK)
#define OBJ_posix_O_CLOFORK DeeInt_ForSmallInt(O_CLOFORK)
#elif O_CLOFORK >= 0
#if O_CLOFORK <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_UINT15(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_UINT30(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_UINT45(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_UINT60(posix_O_CLOFORK, O_CLOFORK);
#else
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_UINT75(posix_O_CLOFORK, O_CLOFORK);
#endif
#else /* O_CLOFORK >= 0 */
#if O_CLOFORK >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_INT15(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_INT30(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_INT45(posix_O_CLOFORK, O_CLOFORK);
#elif O_CLOFORK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_INT60(posix_O_CLOFORK, O_CLOFORK);
#else
#define OBJ_posix_O_CLOFORK ((DeeObject *)&posix_O_CLOFORK)
PRIVATE DEFINE_INT75(posix_O_CLOFORK, O_CLOFORK);
#endif
#endif /* O_CLOFORK < 0 */
#else /* CONFIG_HAVE_O_CLOFORK */
#define POSIX_O_CLOFORK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_CLOFORK */
#ifdef CONFIG_HAVE_O_SYMLINK
#define POSIX_O_SYMLINK_DEF \
	{ "O_SYMLINK", OBJ_posix_O_SYMLINK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Open a symlink itself, rather than dereferencing it" },
#if DeeInt_IsSmallInt(O_SYMLINK)
#define OBJ_posix_O_SYMLINK DeeInt_ForSmallInt(O_SYMLINK)
#elif O_SYMLINK >= 0
#if O_SYMLINK <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_UINT15(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_UINT30(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_UINT45(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_UINT60(posix_O_SYMLINK, O_SYMLINK);
#else
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_UINT75(posix_O_SYMLINK, O_SYMLINK);
#endif
#else /* O_SYMLINK >= 0 */
#if O_SYMLINK >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_INT15(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_INT30(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_INT45(posix_O_SYMLINK, O_SYMLINK);
#elif O_SYMLINK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_INT60(posix_O_SYMLINK, O_SYMLINK);
#else
#define OBJ_posix_O_SYMLINK ((DeeObject *)&posix_O_SYMLINK)
PRIVATE DEFINE_INT75(posix_O_SYMLINK, O_SYMLINK);
#endif
#endif /* O_SYMLINK < 0 */
#else /* CONFIG_HAVE_O_SYMLINK */
#define POSIX_O_SYMLINK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SYMLINK */
#ifdef CONFIG_HAVE_O_DOSPATH
#define POSIX_O_DOSPATH_DEF \
	{ "O_DOSPATH", OBJ_posix_O_DOSPATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interpret $\"\\\" as $\"/\", and ignore casing during path resolution. Additionally, recognize DOS mounting points, and interpret leading slashes as relative to the closest DOS mounting point" },
#if DeeInt_IsSmallInt(O_DOSPATH)
#define OBJ_posix_O_DOSPATH DeeInt_ForSmallInt(O_DOSPATH)
#elif O_DOSPATH >= 0
#if O_DOSPATH <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_UINT15(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_UINT30(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_UINT45(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_UINT60(posix_O_DOSPATH, O_DOSPATH);
#else
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_UINT75(posix_O_DOSPATH, O_DOSPATH);
#endif
#else /* O_DOSPATH >= 0 */
#if O_DOSPATH >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_INT15(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_INT30(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_INT45(posix_O_DOSPATH, O_DOSPATH);
#elif O_DOSPATH >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_INT60(posix_O_DOSPATH, O_DOSPATH);
#else
#define OBJ_posix_O_DOSPATH ((DeeObject *)&posix_O_DOSPATH)
PRIVATE DEFINE_INT75(posix_O_DOSPATH, O_DOSPATH);
#endif
#endif /* O_DOSPATH < 0 */
#else /* CONFIG_HAVE_O_DOSPATH */
#define POSIX_O_DOSPATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_DOSPATH */
#ifdef CONFIG_HAVE_O_SHLOCK
#define POSIX_O_SHLOCK_DEF \
	{ "O_SHLOCK", OBJ_posix_O_SHLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_SHLOCK)
#define OBJ_posix_O_SHLOCK DeeInt_ForSmallInt(O_SHLOCK)
#elif O_SHLOCK >= 0
#if O_SHLOCK <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_UINT15(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_UINT30(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_UINT45(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_UINT60(posix_O_SHLOCK, O_SHLOCK);
#else
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_UINT75(posix_O_SHLOCK, O_SHLOCK);
#endif
#else /* O_SHLOCK >= 0 */
#if O_SHLOCK >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_INT15(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_INT30(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_INT45(posix_O_SHLOCK, O_SHLOCK);
#elif O_SHLOCK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_INT60(posix_O_SHLOCK, O_SHLOCK);
#else
#define OBJ_posix_O_SHLOCK ((DeeObject *)&posix_O_SHLOCK)
PRIVATE DEFINE_INT75(posix_O_SHLOCK, O_SHLOCK);
#endif
#endif /* O_SHLOCK < 0 */
#else /* CONFIG_HAVE_O_SHLOCK */
#define POSIX_O_SHLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SHLOCK */
#ifdef CONFIG_HAVE_O_EXLOCK
#define POSIX_O_EXLOCK_DEF \
	{ "O_EXLOCK", OBJ_posix_O_EXLOCK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_EXLOCK)
#define OBJ_posix_O_EXLOCK DeeInt_ForSmallInt(O_EXLOCK)
#elif O_EXLOCK >= 0
#if O_EXLOCK <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_UINT15(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_UINT30(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_UINT45(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_UINT60(posix_O_EXLOCK, O_EXLOCK);
#else
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_UINT75(posix_O_EXLOCK, O_EXLOCK);
#endif
#else /* O_EXLOCK >= 0 */
#if O_EXLOCK >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_INT15(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_INT30(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_INT45(posix_O_EXLOCK, O_EXLOCK);
#elif O_EXLOCK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_INT60(posix_O_EXLOCK, O_EXLOCK);
#else
#define OBJ_posix_O_EXLOCK ((DeeObject *)&posix_O_EXLOCK)
PRIVATE DEFINE_INT75(posix_O_EXLOCK, O_EXLOCK);
#endif
#endif /* O_EXLOCK < 0 */
#else /* CONFIG_HAVE_O_EXLOCK */
#define POSIX_O_EXLOCK_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXLOCK */
#ifdef CONFIG_HAVE_O_XATTR
#define POSIX_O_XATTR_DEF \
	{ "O_XATTR", OBJ_posix_O_XATTR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_XATTR)
#define OBJ_posix_O_XATTR DeeInt_ForSmallInt(O_XATTR)
#elif O_XATTR >= 0
#if O_XATTR <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_UINT15(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_UINT30(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_UINT45(posix_O_XATTR, O_XATTR);
#elif O_XATTR <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_UINT60(posix_O_XATTR, O_XATTR);
#else
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_UINT75(posix_O_XATTR, O_XATTR);
#endif
#else /* O_XATTR >= 0 */
#if O_XATTR >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_INT15(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_INT30(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_INT45(posix_O_XATTR, O_XATTR);
#elif O_XATTR >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_INT60(posix_O_XATTR, O_XATTR);
#else
#define OBJ_posix_O_XATTR ((DeeObject *)&posix_O_XATTR)
PRIVATE DEFINE_INT75(posix_O_XATTR, O_XATTR);
#endif
#endif /* O_XATTR < 0 */
#else /* CONFIG_HAVE_O_XATTR */
#define POSIX_O_XATTR_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_XATTR */
#ifdef CONFIG_HAVE_O_EXEC
#define POSIX_O_EXEC_DEF \
	{ "O_EXEC", OBJ_posix_O_EXEC, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_EXEC)
#define OBJ_posix_O_EXEC DeeInt_ForSmallInt(O_EXEC)
#elif O_EXEC >= 0
#if O_EXEC <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_UINT15(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_UINT30(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_UINT45(posix_O_EXEC, O_EXEC);
#elif O_EXEC <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_UINT60(posix_O_EXEC, O_EXEC);
#else
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_UINT75(posix_O_EXEC, O_EXEC);
#endif
#else /* O_EXEC >= 0 */
#if O_EXEC >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_INT15(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_INT30(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_INT45(posix_O_EXEC, O_EXEC);
#elif O_EXEC >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_INT60(posix_O_EXEC, O_EXEC);
#else
#define OBJ_posix_O_EXEC ((DeeObject *)&posix_O_EXEC)
PRIVATE DEFINE_INT75(posix_O_EXEC, O_EXEC);
#endif
#endif /* O_EXEC < 0 */
#else /* CONFIG_HAVE_O_EXEC */
#define POSIX_O_EXEC_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_EXEC */
#ifdef CONFIG_HAVE_O_SEARCH
#define POSIX_O_SEARCH_DEF \
	{ "O_SEARCH", OBJ_posix_O_SEARCH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_SEARCH)
#define OBJ_posix_O_SEARCH DeeInt_ForSmallInt(O_SEARCH)
#elif O_SEARCH >= 0
#if O_SEARCH <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_UINT15(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_UINT30(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_UINT45(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_UINT60(posix_O_SEARCH, O_SEARCH);
#else
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_UINT75(posix_O_SEARCH, O_SEARCH);
#endif
#else /* O_SEARCH >= 0 */
#if O_SEARCH >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_INT15(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_INT30(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_INT45(posix_O_SEARCH, O_SEARCH);
#elif O_SEARCH >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_INT60(posix_O_SEARCH, O_SEARCH);
#else
#define OBJ_posix_O_SEARCH ((DeeObject *)&posix_O_SEARCH)
PRIVATE DEFINE_INT75(posix_O_SEARCH, O_SEARCH);
#endif
#endif /* O_SEARCH < 0 */
#else /* CONFIG_HAVE_O_SEARCH */
#define POSIX_O_SEARCH_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_SEARCH */
#ifdef CONFIG_HAVE_O_TTY_INIT
#define POSIX_O_TTY_INIT_DEF \
	{ "O_TTY_INIT", OBJ_posix_O_TTY_INIT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_TTY_INIT)
#define OBJ_posix_O_TTY_INIT DeeInt_ForSmallInt(O_TTY_INIT)
#elif O_TTY_INIT >= 0
#if O_TTY_INIT <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_UINT15(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_UINT30(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_UINT45(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_UINT60(posix_O_TTY_INIT, O_TTY_INIT);
#else
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_UINT75(posix_O_TTY_INIT, O_TTY_INIT);
#endif
#else /* O_TTY_INIT >= 0 */
#if O_TTY_INIT >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_INT15(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_INT30(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_INT45(posix_O_TTY_INIT, O_TTY_INIT);
#elif O_TTY_INIT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_INT60(posix_O_TTY_INIT, O_TTY_INIT);
#else
#define OBJ_posix_O_TTY_INIT ((DeeObject *)&posix_O_TTY_INIT)
PRIVATE DEFINE_INT75(posix_O_TTY_INIT, O_TTY_INIT);
#endif
#endif /* O_TTY_INIT < 0 */
#else /* CONFIG_HAVE_O_TTY_INIT */
#define POSIX_O_TTY_INIT_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_TTY_INIT */
#ifdef CONFIG_HAVE_O_NOLINKS
#define POSIX_O_NOLINKS_DEF \
	{ "O_NOLINKS", OBJ_posix_O_NOLINKS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(O_NOLINKS)
#define OBJ_posix_O_NOLINKS DeeInt_ForSmallInt(O_NOLINKS)
#elif O_NOLINKS >= 0
#if O_NOLINKS <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_UINT15(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_UINT30(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_UINT45(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_UINT60(posix_O_NOLINKS, O_NOLINKS);
#else
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_UINT75(posix_O_NOLINKS, O_NOLINKS);
#endif
#else /* O_NOLINKS >= 0 */
#if O_NOLINKS >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_INT15(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_INT30(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_INT45(posix_O_NOLINKS, O_NOLINKS);
#elif O_NOLINKS >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_INT60(posix_O_NOLINKS, O_NOLINKS);
#else
#define OBJ_posix_O_NOLINKS ((DeeObject *)&posix_O_NOLINKS)
PRIVATE DEFINE_INT75(posix_O_NOLINKS, O_NOLINKS);
#endif
#endif /* O_NOLINKS < 0 */
#else /* CONFIG_HAVE_O_NOLINKS */
#define POSIX_O_NOLINKS_DEF /* nothing */
#endif /* !CONFIG_HAVE_O_NOLINKS */
#ifdef O_HIDDEN
#define POSIX_O_HIDDEN_DEF \
	{ "O_HIDDEN", OBJ_posix_O_HIDDEN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "When creating a new file, mark it with the DOS HIDDEN attribute" },
#if DeeInt_IsSmallInt(O_HIDDEN)
#define OBJ_posix_O_HIDDEN DeeInt_ForSmallInt(O_HIDDEN)
#elif O_HIDDEN >= 0
#if O_HIDDEN <= 0x7fffull /* 15-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_UINT15(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_UINT30(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_UINT45(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_UINT60(posix_O_HIDDEN, O_HIDDEN);
#else
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_UINT75(posix_O_HIDDEN, O_HIDDEN);
#endif
#else /* O_HIDDEN >= 0 */
#if O_HIDDEN >= -0x4000ll /* 15-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_INT15(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN >= -0x20000000ll /* 30-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_INT30(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_INT45(posix_O_HIDDEN, O_HIDDEN);
#elif O_HIDDEN >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_INT60(posix_O_HIDDEN, O_HIDDEN);
#else
#define OBJ_posix_O_HIDDEN ((DeeObject *)&posix_O_HIDDEN)
PRIVATE DEFINE_INT75(posix_O_HIDDEN, O_HIDDEN);
#endif
#endif /* O_HIDDEN < 0 */
#else /* O_HIDDEN */
#define POSIX_O_HIDDEN_DEF /* nothing */
#endif /* !O_HIDDEN */
#define POSIX_AT_FDCWD_DEF \
	{ "AT_FDCWD", OBJ_posix_AT_FDCWD, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Special value used to indicate the *at functions should use the current working directory" },
#if DeeInt_IsSmallInt(AT_FDCWD)
#define OBJ_posix_AT_FDCWD DeeInt_ForSmallInt(AT_FDCWD)
#elif AT_FDCWD >= 0
#if AT_FDCWD <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_UINT15(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_UINT30(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_UINT45(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_UINT60(posix_AT_FDCWD, AT_FDCWD);
#else
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_UINT75(posix_AT_FDCWD, AT_FDCWD);
#endif
#else /* AT_FDCWD >= 0 */
#if AT_FDCWD >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_INT15(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_INT30(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_INT45(posix_AT_FDCWD, AT_FDCWD);
#elif AT_FDCWD >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_INT60(posix_AT_FDCWD, AT_FDCWD);
#else
#define OBJ_posix_AT_FDCWD ((DeeObject *)&posix_AT_FDCWD)
PRIVATE DEFINE_INT75(posix_AT_FDCWD, AT_FDCWD);
#endif
#endif /* AT_FDCWD < 0 */
#define POSIX_AT_SYMLINK_NOFOLLOW_DEF \
	{ "AT_SYMLINK_NOFOLLOW", OBJ_posix_AT_SYMLINK_NOFOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Do not follow symbolic links" },
#if DeeInt_IsSmallInt(AT_SYMLINK_NOFOLLOW)
#define OBJ_posix_AT_SYMLINK_NOFOLLOW DeeInt_ForSmallInt(AT_SYMLINK_NOFOLLOW)
#elif AT_SYMLINK_NOFOLLOW >= 0
#if AT_SYMLINK_NOFOLLOW <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_UINT15(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_UINT30(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_UINT45(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_UINT60(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#else
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_UINT75(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#endif
#else /* AT_SYMLINK_NOFOLLOW >= 0 */
#if AT_SYMLINK_NOFOLLOW >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_INT15(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_INT30(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_INT45(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#elif AT_SYMLINK_NOFOLLOW >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_INT60(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#else
#define OBJ_posix_AT_SYMLINK_NOFOLLOW ((DeeObject *)&posix_AT_SYMLINK_NOFOLLOW)
PRIVATE DEFINE_INT75(posix_AT_SYMLINK_NOFOLLOW, AT_SYMLINK_NOFOLLOW);
#endif
#endif /* AT_SYMLINK_NOFOLLOW < 0 */
#define POSIX_AT_REMOVEDIR_DEF \
	{ "AT_REMOVEDIR", OBJ_posix_AT_REMOVEDIR, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Remove directory instead of unlinking file" },
#if DeeInt_IsSmallInt(AT_REMOVEDIR)
#define OBJ_posix_AT_REMOVEDIR DeeInt_ForSmallInt(AT_REMOVEDIR)
#elif AT_REMOVEDIR >= 0
#if AT_REMOVEDIR <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_UINT15(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_UINT30(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_UINT45(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_UINT60(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#else
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_UINT75(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#endif
#else /* AT_REMOVEDIR >= 0 */
#if AT_REMOVEDIR >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_INT15(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_INT30(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_INT45(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#elif AT_REMOVEDIR >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_INT60(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#else
#define OBJ_posix_AT_REMOVEDIR ((DeeObject *)&posix_AT_REMOVEDIR)
PRIVATE DEFINE_INT75(posix_AT_REMOVEDIR, AT_REMOVEDIR);
#endif
#endif /* AT_REMOVEDIR < 0 */
#ifdef CONFIG_HAVE_AT_SYMLINK_FOLLOW
#define POSIX_AT_SYMLINK_FOLLOW_DEF \
	{ "AT_SYMLINK_FOLLOW", OBJ_posix_AT_SYMLINK_FOLLOW, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Follow symbolic links" },
#if DeeInt_IsSmallInt(AT_SYMLINK_FOLLOW)
#define OBJ_posix_AT_SYMLINK_FOLLOW DeeInt_ForSmallInt(AT_SYMLINK_FOLLOW)
#elif AT_SYMLINK_FOLLOW >= 0
#if AT_SYMLINK_FOLLOW <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_UINT15(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_UINT30(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_UINT45(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_UINT60(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#else
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_UINT75(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#endif
#else /* AT_SYMLINK_FOLLOW >= 0 */
#if AT_SYMLINK_FOLLOW >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_INT15(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_INT30(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_INT45(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#elif AT_SYMLINK_FOLLOW >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_INT60(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#else
#define OBJ_posix_AT_SYMLINK_FOLLOW ((DeeObject *)&posix_AT_SYMLINK_FOLLOW)
PRIVATE DEFINE_INT75(posix_AT_SYMLINK_FOLLOW, AT_SYMLINK_FOLLOW);
#endif
#endif /* AT_SYMLINK_FOLLOW < 0 */
#else /* CONFIG_HAVE_AT_SYMLINK_FOLLOW */
#define POSIX_AT_SYMLINK_FOLLOW_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_SYMLINK_FOLLOW */
#ifdef CONFIG_HAVE_AT_NO_AUTOMOUNT
#define POSIX_AT_NO_AUTOMOUNT_DEF \
	{ "AT_NO_AUTOMOUNT", OBJ_posix_AT_NO_AUTOMOUNT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Suppress terminal automount traversal" },
#if DeeInt_IsSmallInt(AT_NO_AUTOMOUNT)
#define OBJ_posix_AT_NO_AUTOMOUNT DeeInt_ForSmallInt(AT_NO_AUTOMOUNT)
#elif AT_NO_AUTOMOUNT >= 0
#if AT_NO_AUTOMOUNT <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_UINT15(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_UINT30(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_UINT45(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_UINT60(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#else
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_UINT75(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#endif
#else /* AT_NO_AUTOMOUNT >= 0 */
#if AT_NO_AUTOMOUNT >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_INT15(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_INT30(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_INT45(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#elif AT_NO_AUTOMOUNT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_INT60(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#else
#define OBJ_posix_AT_NO_AUTOMOUNT ((DeeObject *)&posix_AT_NO_AUTOMOUNT)
PRIVATE DEFINE_INT75(posix_AT_NO_AUTOMOUNT, AT_NO_AUTOMOUNT);
#endif
#endif /* AT_NO_AUTOMOUNT < 0 */
#else /* CONFIG_HAVE_AT_NO_AUTOMOUNT */
#define POSIX_AT_NO_AUTOMOUNT_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_NO_AUTOMOUNT */
#define POSIX_AT_EMPTY_PATH_DEF \
	{ "AT_EMPTY_PATH", OBJ_posix_AT_EMPTY_PATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Allow empty relative pathname" },
#if DeeInt_IsSmallInt(AT_EMPTY_PATH)
#define OBJ_posix_AT_EMPTY_PATH DeeInt_ForSmallInt(AT_EMPTY_PATH)
#elif AT_EMPTY_PATH >= 0
#if AT_EMPTY_PATH <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_UINT15(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_UINT30(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_UINT45(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_UINT60(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#else
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_UINT75(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#endif
#else /* AT_EMPTY_PATH >= 0 */
#if AT_EMPTY_PATH >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_INT15(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_INT30(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_INT45(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#elif AT_EMPTY_PATH >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_INT60(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#else
#define OBJ_posix_AT_EMPTY_PATH ((DeeObject *)&posix_AT_EMPTY_PATH)
PRIVATE DEFINE_INT75(posix_AT_EMPTY_PATH, AT_EMPTY_PATH);
#endif
#endif /* AT_EMPTY_PATH < 0 */
#ifdef CONFIG_HAVE_AT_EACCESS
#define POSIX_AT_EACCESS_DEF \
	{ "AT_EACCESS", OBJ_posix_AT_EACCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Test access permitted for effective IDs, not real IDs" },
#if DeeInt_IsSmallInt(AT_EACCESS)
#define OBJ_posix_AT_EACCESS DeeInt_ForSmallInt(AT_EACCESS)
#elif AT_EACCESS >= 0
#if AT_EACCESS <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_UINT15(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_UINT30(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_UINT45(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_UINT60(posix_AT_EACCESS, AT_EACCESS);
#else
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_UINT75(posix_AT_EACCESS, AT_EACCESS);
#endif
#else /* AT_EACCESS >= 0 */
#if AT_EACCESS >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_INT15(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_INT30(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_INT45(posix_AT_EACCESS, AT_EACCESS);
#elif AT_EACCESS >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_INT60(posix_AT_EACCESS, AT_EACCESS);
#else
#define OBJ_posix_AT_EACCESS ((DeeObject *)&posix_AT_EACCESS)
PRIVATE DEFINE_INT75(posix_AT_EACCESS, AT_EACCESS);
#endif
#endif /* AT_EACCESS < 0 */
#else /* CONFIG_HAVE_AT_EACCESS */
#define POSIX_AT_EACCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_EACCESS */
#define POSIX_AT_REMOVEREG_DEF \
	{ "AT_REMOVEREG", OBJ_posix_AT_REMOVEREG, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Explicitly allow removing anything that unlink() removes. (Default; Set in addition to ?GAT_REMOVEDIR to implement ?Gremove semantics)" },
#if DeeInt_IsSmallInt(AT_REMOVEREG)
#define OBJ_posix_AT_REMOVEREG DeeInt_ForSmallInt(AT_REMOVEREG)
#elif AT_REMOVEREG >= 0
#if AT_REMOVEREG <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_UINT15(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_UINT30(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_UINT45(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_UINT60(posix_AT_REMOVEREG, AT_REMOVEREG);
#else
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_UINT75(posix_AT_REMOVEREG, AT_REMOVEREG);
#endif
#else /* AT_REMOVEREG >= 0 */
#if AT_REMOVEREG >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_INT15(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_INT30(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_INT45(posix_AT_REMOVEREG, AT_REMOVEREG);
#elif AT_REMOVEREG >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_INT60(posix_AT_REMOVEREG, AT_REMOVEREG);
#else
#define OBJ_posix_AT_REMOVEREG ((DeeObject *)&posix_AT_REMOVEREG)
PRIVATE DEFINE_INT75(posix_AT_REMOVEREG, AT_REMOVEREG);
#endif
#endif /* AT_REMOVEREG < 0 */
#ifdef CONFIG_HAVE_AT_DOSPATH
#define POSIX_AT_DOSPATH_DEF \
	{ "AT_DOSPATH", OBJ_posix_AT_DOSPATH, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Interpret $\"\\\" as $\"/\", and ignore casing during path resolution" },
#if DeeInt_IsSmallInt(AT_DOSPATH)
#define OBJ_posix_AT_DOSPATH DeeInt_ForSmallInt(AT_DOSPATH)
#elif AT_DOSPATH >= 0
#if AT_DOSPATH <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_UINT15(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_UINT30(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_UINT45(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_UINT60(posix_AT_DOSPATH, AT_DOSPATH);
#else
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_UINT75(posix_AT_DOSPATH, AT_DOSPATH);
#endif
#else /* AT_DOSPATH >= 0 */
#if AT_DOSPATH >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_INT15(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_INT30(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_INT45(posix_AT_DOSPATH, AT_DOSPATH);
#elif AT_DOSPATH >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_INT60(posix_AT_DOSPATH, AT_DOSPATH);
#else
#define OBJ_posix_AT_DOSPATH ((DeeObject *)&posix_AT_DOSPATH)
PRIVATE DEFINE_INT75(posix_AT_DOSPATH, AT_DOSPATH);
#endif
#endif /* AT_DOSPATH < 0 */
#else /* CONFIG_HAVE_AT_DOSPATH */
#define POSIX_AT_DOSPATH_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOSPATH */
#ifdef CONFIG_HAVE_AT_FDROOT
#define POSIX_AT_FDROOT_DEF \
	{ "AT_FDROOT", OBJ_posix_AT_FDROOT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Same as ?GAT_FDCWD but sets the filesystem root (using this, you can ?Gchroot with ?Gdup2)" },
#if DeeInt_IsSmallInt(AT_FDROOT)
#define OBJ_posix_AT_FDROOT DeeInt_ForSmallInt(AT_FDROOT)
#elif AT_FDROOT >= 0
#if AT_FDROOT <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_UINT15(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_UINT30(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_UINT45(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_UINT60(posix_AT_FDROOT, AT_FDROOT);
#else
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_UINT75(posix_AT_FDROOT, AT_FDROOT);
#endif
#else /* AT_FDROOT >= 0 */
#if AT_FDROOT >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_INT15(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_INT30(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_INT45(posix_AT_FDROOT, AT_FDROOT);
#elif AT_FDROOT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_INT60(posix_AT_FDROOT, AT_FDROOT);
#else
#define OBJ_posix_AT_FDROOT ((DeeObject *)&posix_AT_FDROOT)
PRIVATE DEFINE_INT75(posix_AT_FDROOT, AT_FDROOT);
#endif
#endif /* AT_FDROOT < 0 */
#else /* CONFIG_HAVE_AT_FDROOT */
#define POSIX_AT_FDROOT_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_FDROOT */
#ifdef CONFIG_HAVE_AT_THIS_TASK
#define POSIX_AT_THIS_TASK_DEF \
	{ "AT_THIS_TASK", OBJ_posix_AT_THIS_TASK, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_THIS_TASK)
#define OBJ_posix_AT_THIS_TASK DeeInt_ForSmallInt(AT_THIS_TASK)
#elif AT_THIS_TASK >= 0
#if AT_THIS_TASK <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_UINT15(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_UINT30(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_UINT45(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_UINT60(posix_AT_THIS_TASK, AT_THIS_TASK);
#else
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_UINT75(posix_AT_THIS_TASK, AT_THIS_TASK);
#endif
#else /* AT_THIS_TASK >= 0 */
#if AT_THIS_TASK >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_INT15(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_INT30(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_INT45(posix_AT_THIS_TASK, AT_THIS_TASK);
#elif AT_THIS_TASK >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_INT60(posix_AT_THIS_TASK, AT_THIS_TASK);
#else
#define OBJ_posix_AT_THIS_TASK ((DeeObject *)&posix_AT_THIS_TASK)
PRIVATE DEFINE_INT75(posix_AT_THIS_TASK, AT_THIS_TASK);
#endif
#endif /* AT_THIS_TASK < 0 */
#else /* CONFIG_HAVE_AT_THIS_TASK */
#define POSIX_AT_THIS_TASK_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_THIS_TASK */
#ifdef CONFIG_HAVE_AT_THIS_PROCESS
#define POSIX_AT_THIS_PROCESS_DEF \
	{ "AT_THIS_PROCESS", OBJ_posix_AT_THIS_PROCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_THIS_PROCESS)
#define OBJ_posix_AT_THIS_PROCESS DeeInt_ForSmallInt(AT_THIS_PROCESS)
#elif AT_THIS_PROCESS >= 0
#if AT_THIS_PROCESS <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_UINT15(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_UINT30(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_UINT45(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_UINT60(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#else
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_UINT75(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#endif
#else /* AT_THIS_PROCESS >= 0 */
#if AT_THIS_PROCESS >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_INT15(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_INT30(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_INT45(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#elif AT_THIS_PROCESS >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_INT60(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#else
#define OBJ_posix_AT_THIS_PROCESS ((DeeObject *)&posix_AT_THIS_PROCESS)
PRIVATE DEFINE_INT75(posix_AT_THIS_PROCESS, AT_THIS_PROCESS);
#endif
#endif /* AT_THIS_PROCESS < 0 */
#else /* CONFIG_HAVE_AT_THIS_PROCESS */
#define POSIX_AT_THIS_PROCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_THIS_PROCESS */
#ifdef CONFIG_HAVE_AT_PARENT_PROCESS
#define POSIX_AT_PARENT_PROCESS_DEF \
	{ "AT_PARENT_PROCESS", OBJ_posix_AT_PARENT_PROCESS, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_PARENT_PROCESS)
#define OBJ_posix_AT_PARENT_PROCESS DeeInt_ForSmallInt(AT_PARENT_PROCESS)
#elif AT_PARENT_PROCESS >= 0
#if AT_PARENT_PROCESS <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_UINT15(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_UINT30(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_UINT45(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_UINT60(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#else
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_UINT75(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#endif
#else /* AT_PARENT_PROCESS >= 0 */
#if AT_PARENT_PROCESS >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_INT15(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_INT30(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_INT45(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#elif AT_PARENT_PROCESS >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_INT60(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#else
#define OBJ_posix_AT_PARENT_PROCESS ((DeeObject *)&posix_AT_PARENT_PROCESS)
PRIVATE DEFINE_INT75(posix_AT_PARENT_PROCESS, AT_PARENT_PROCESS);
#endif
#endif /* AT_PARENT_PROCESS < 0 */
#else /* CONFIG_HAVE_AT_PARENT_PROCESS */
#define POSIX_AT_PARENT_PROCESS_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_PARENT_PROCESS */
#ifdef CONFIG_HAVE_AT_GROUP_LEADER
#define POSIX_AT_GROUP_LEADER_DEF \
	{ "AT_GROUP_LEADER", OBJ_posix_AT_GROUP_LEADER, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_GROUP_LEADER)
#define OBJ_posix_AT_GROUP_LEADER DeeInt_ForSmallInt(AT_GROUP_LEADER)
#elif AT_GROUP_LEADER >= 0
#if AT_GROUP_LEADER <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_UINT15(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_UINT30(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_UINT45(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_UINT60(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#else
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_UINT75(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#endif
#else /* AT_GROUP_LEADER >= 0 */
#if AT_GROUP_LEADER >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_INT15(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_INT30(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_INT45(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#elif AT_GROUP_LEADER >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_INT60(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#else
#define OBJ_posix_AT_GROUP_LEADER ((DeeObject *)&posix_AT_GROUP_LEADER)
PRIVATE DEFINE_INT75(posix_AT_GROUP_LEADER, AT_GROUP_LEADER);
#endif
#endif /* AT_GROUP_LEADER < 0 */
#else /* CONFIG_HAVE_AT_GROUP_LEADER */
#define POSIX_AT_GROUP_LEADER_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_GROUP_LEADER */
#ifdef CONFIG_HAVE_AT_SESSION_LEADER
#define POSIX_AT_SESSION_LEADER_DEF \
	{ "AT_SESSION_LEADER", OBJ_posix_AT_SESSION_LEADER, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_SESSION_LEADER)
#define OBJ_posix_AT_SESSION_LEADER DeeInt_ForSmallInt(AT_SESSION_LEADER)
#elif AT_SESSION_LEADER >= 0
#if AT_SESSION_LEADER <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_UINT15(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_UINT30(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_UINT45(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_UINT60(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#else
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_UINT75(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#endif
#else /* AT_SESSION_LEADER >= 0 */
#if AT_SESSION_LEADER >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_INT15(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_INT30(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_INT45(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#elif AT_SESSION_LEADER >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_INT60(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#else
#define OBJ_posix_AT_SESSION_LEADER ((DeeObject *)&posix_AT_SESSION_LEADER)
PRIVATE DEFINE_INT75(posix_AT_SESSION_LEADER, AT_SESSION_LEADER);
#endif
#endif /* AT_SESSION_LEADER < 0 */
#else /* CONFIG_HAVE_AT_SESSION_LEADER */
#define POSIX_AT_SESSION_LEADER_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_SESSION_LEADER */
#ifdef CONFIG_HAVE_AT_DOS_DRIVEMIN
#define POSIX_AT_DOS_DRIVEMIN_DEF \
	{ "AT_DOS_DRIVEMIN", OBJ_posix_AT_DOS_DRIVEMIN, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_DOS_DRIVEMIN)
#define OBJ_posix_AT_DOS_DRIVEMIN DeeInt_ForSmallInt(AT_DOS_DRIVEMIN)
#elif AT_DOS_DRIVEMIN >= 0
#if AT_DOS_DRIVEMIN <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_UINT15(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_UINT30(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_UINT45(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_UINT60(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#else
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_UINT75(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#endif
#else /* AT_DOS_DRIVEMIN >= 0 */
#if AT_DOS_DRIVEMIN >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_INT15(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_INT30(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_INT45(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#elif AT_DOS_DRIVEMIN >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_INT60(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#else
#define OBJ_posix_AT_DOS_DRIVEMIN ((DeeObject *)&posix_AT_DOS_DRIVEMIN)
PRIVATE DEFINE_INT75(posix_AT_DOS_DRIVEMIN, AT_DOS_DRIVEMIN);
#endif
#endif /* AT_DOS_DRIVEMIN < 0 */
#else /* CONFIG_HAVE_AT_DOS_DRIVEMIN */
#define POSIX_AT_DOS_DRIVEMIN_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOS_DRIVEMIN */
#ifdef CONFIG_HAVE_AT_DOS_DRIVEMAX
#define POSIX_AT_DOS_DRIVEMAX_DEF \
	{ "AT_DOS_DRIVEMAX", OBJ_posix_AT_DOS_DRIVEMAX, MODSYM_FREADONLY | MODSYM_FCONSTEXPR },
#if DeeInt_IsSmallInt(AT_DOS_DRIVEMAX)
#define OBJ_posix_AT_DOS_DRIVEMAX DeeInt_ForSmallInt(AT_DOS_DRIVEMAX)
#elif AT_DOS_DRIVEMAX >= 0
#if AT_DOS_DRIVEMAX <= 0x7fffull /* 15-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_UINT15(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_UINT30(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_UINT45(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_UINT60(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#else
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_UINT75(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#endif
#else /* AT_DOS_DRIVEMAX >= 0 */
#if AT_DOS_DRIVEMAX >= -0x4000ll /* 15-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_INT15(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x20000000ll /* 30-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_INT30(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_INT45(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#elif AT_DOS_DRIVEMAX >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_INT60(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#else
#define OBJ_posix_AT_DOS_DRIVEMAX ((DeeObject *)&posix_AT_DOS_DRIVEMAX)
PRIVATE DEFINE_INT75(posix_AT_DOS_DRIVEMAX, AT_DOS_DRIVEMAX);
#endif
#endif /* AT_DOS_DRIVEMAX < 0 */
#else /* CONFIG_HAVE_AT_DOS_DRIVEMAX */
#define POSIX_AT_DOS_DRIVEMAX_DEF /* nothing */
#endif /* !CONFIG_HAVE_AT_DOS_DRIVEMAX */
#ifdef RENAME_NOREPLACE
#define POSIX_RENAME_NOREPLACE_DEF \
	{ "RENAME_NOREPLACE", OBJ_posix_RENAME_NOREPLACE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Don\'t overwrite target" },
#if DeeInt_IsSmallInt(RENAME_NOREPLACE)
#define OBJ_posix_RENAME_NOREPLACE DeeInt_ForSmallInt(RENAME_NOREPLACE)
#elif RENAME_NOREPLACE >= 0
#if RENAME_NOREPLACE <= 0x7fffull /* 15-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_UINT15(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_UINT30(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_UINT45(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_UINT60(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#else
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_UINT75(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#endif
#else /* RENAME_NOREPLACE >= 0 */
#if RENAME_NOREPLACE >= -0x4000ll /* 15-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_INT15(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x20000000ll /* 30-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_INT30(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_INT45(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#elif RENAME_NOREPLACE >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_INT60(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#else
#define OBJ_posix_RENAME_NOREPLACE ((DeeObject *)&posix_RENAME_NOREPLACE)
PRIVATE DEFINE_INT75(posix_RENAME_NOREPLACE, RENAME_NOREPLACE);
#endif
#endif /* RENAME_NOREPLACE < 0 */
#else /* RENAME_NOREPLACE */
#define POSIX_RENAME_NOREPLACE_DEF /* nothing */
#endif /* !RENAME_NOREPLACE */
#ifdef CONFIG_HAVE_RENAME_EXCHANGE
#define POSIX_RENAME_EXCHANGE_DEF \
	{ "RENAME_EXCHANGE", OBJ_posix_RENAME_EXCHANGE, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Exchange source and dest" },
#if DeeInt_IsSmallInt(RENAME_EXCHANGE)
#define OBJ_posix_RENAME_EXCHANGE DeeInt_ForSmallInt(RENAME_EXCHANGE)
#elif RENAME_EXCHANGE >= 0
#if RENAME_EXCHANGE <= 0x7fffull /* 15-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_UINT15(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_UINT30(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_UINT45(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_UINT60(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#else
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_UINT75(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#endif
#else /* RENAME_EXCHANGE >= 0 */
#if RENAME_EXCHANGE >= -0x4000ll /* 15-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_INT15(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x20000000ll /* 30-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_INT30(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_INT45(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#elif RENAME_EXCHANGE >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_INT60(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#else
#define OBJ_posix_RENAME_EXCHANGE ((DeeObject *)&posix_RENAME_EXCHANGE)
PRIVATE DEFINE_INT75(posix_RENAME_EXCHANGE, RENAME_EXCHANGE);
#endif
#endif /* RENAME_EXCHANGE < 0 */
#else /* CONFIG_HAVE_RENAME_EXCHANGE */
#define POSIX_RENAME_EXCHANGE_DEF /* nothing */
#endif /* !CONFIG_HAVE_RENAME_EXCHANGE */
#ifdef CONFIG_HAVE_RENAME_WHITEOUT
#define POSIX_RENAME_WHITEOUT_DEF \
	{ "RENAME_WHITEOUT", OBJ_posix_RENAME_WHITEOUT, MODSYM_FREADONLY | MODSYM_FCONSTEXPR, "Whiteout source" },
#if DeeInt_IsSmallInt(RENAME_WHITEOUT)
#define OBJ_posix_RENAME_WHITEOUT DeeInt_ForSmallInt(RENAME_WHITEOUT)
#elif RENAME_WHITEOUT >= 0
#if RENAME_WHITEOUT <= 0x7fffull /* 15-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_UINT15(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0x3fffffffull /* 30-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_UINT30(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0x1fffffffffffull /* 45-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_UINT45(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT <= 0xfffffffffffffffull /* 60-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_UINT60(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#else
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_UINT75(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#endif
#else /* RENAME_WHITEOUT >= 0 */
#if RENAME_WHITEOUT >= -0x4000ll /* 15-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_INT15(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x20000000ll /* 30-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_INT30(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x100000000000ll /* 45-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_INT45(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#elif RENAME_WHITEOUT >= -0x800000000000000ll /* 60-bit */
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_INT60(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#else
#define OBJ_posix_RENAME_WHITEOUT ((DeeObject *)&posix_RENAME_WHITEOUT)
PRIVATE DEFINE_INT75(posix_RENAME_WHITEOUT, RENAME_WHITEOUT);
#endif
#endif /* RENAME_WHITEOUT < 0 */
#else /* CONFIG_HAVE_RENAME_WHITEOUT */
#define POSIX_RENAME_WHITEOUT_DEF /* nothing */
#endif /* !CONFIG_HAVE_RENAME_WHITEOUT */
