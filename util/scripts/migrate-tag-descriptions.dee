/* Copyright (c) 2018-2024 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2024 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;
import * from posix;

function fixFile(n: string) {
	local a = File.open(n).readall().decode("utf-8");
	local b = a;
	local b = b.rereplace(r'"@throws? (\w+) ' r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)\\n"', r'"#t\1{\2}"');
	local b = b.rereplace(r'"@param (\w+) '   r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)\\n"', r'"#p\1{\2}"');
	local b = b.rereplace(r'"@returns? '      r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)\\n"', r'"#r{\1}"');
	local b = b.rereplace(r'"@throws? (\w+) ' r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)"\)', r'"#t\1{\2}")');
	local b = b.rereplace(r'"@param (\w+) '   r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)"\)', r'"#p\1{\2}")');
	local b = b.rereplace(r'"@returns? '      r'(([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)"\)', r'"#r{\1}")');
	local b = b.rereplace(r'"@throws? (\w+)\.(\w+) (([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)\\n"', r'"#t{?A\2?G\1}{\3}"');
	local b = b.rereplace(r'"@throws? (\w+)\.(\w+) (([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)"\)', r'"#t{?A\2?G\1}{\3}")');
	local b = b.rereplace(r'"@throws? (\w+)\.(\w+)\.(\w+) (([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)\\n"', r'"#t{?A\3?A\2?G\1}{\4}"');
	local b = b.rereplace(r'"@throws? (\w+)\.(\w+)\.(\w+) (([^"]|[^n]"([ 	\n]|/\*[^\*]*\*/)*"|\\")*)"\)', r'"#t{?A\3?A\2?G\1}{\4}")');
	local b = b.replace(r'"@interrupt\n"', r'"#t{:Interrupt}"');
	local b = b.replace(r'"@interrupt"', r'"#t{:Interrupt}"');
	local b = b.encode("utf-8");
	if (a != b) {
		print "Fixed:", repr n;
		File.open(n, "w").write(b);
	}
}

function fixTree(path: string) {
	for (local ent: opendir(path)) {
		if (ent.d_type == DT_DIR) {
			fixTree(ent.d_fullname);
		} else if (ent.d_type == DT_REG) {
			fixFile(ent.d_fullname);
		}
	}
}

fixTree("src/deemon");
fixTree("src/dex");
