/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;
import * from time;

@@Plain old fib, implemented in deemon
function fib1(n) {
	if (n < 2) {
		return n;
	} else {
		return fib(n - 1) + fib(n - 2);
	}
}

@@Same as @fib1, but compiled & executed as JIT code
global final fib2 = exec(r'function fib(n) {
	if (n < 2) {
		return n;
	} else {
		return fib(n - 1) + fib(n - 2);
	}
}');

@@Same as @fib2, but compressed to minimize source-size
@@Since JIT is executed from-source, this *does* actually make a difference
global final fib3 = exec(r'function f(n)->n<2?n:f(n-1)+f(n-2)');


@@Helper function to test how long a given @fib function takes to execute
function testFib(fib: Callable) {
	local start = gmtime();
	local r = fib(36);
	local end = gmtime();
	assert r == 14930352;
	return end - start;
}

/* Measurements:
 * - fib1 (Release)   6_132_016_600
 * - fib1 (Debug)     13_521_947_400
 * - fib2 (Release)   29_401_147_100
 * - fib3 (Release)   28_482_650_700
 */
