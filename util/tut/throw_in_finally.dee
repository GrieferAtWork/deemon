#!/usr/bin/deemon
/* Copyright (c) 2018 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

#if !__has_feature(__exceptions__)
#error Your distribution of deemon seems to have exceptions disabled \
       Without them, this file won't work, so don't even bother... \
       To fix this, set 'DEE_CONFIG_LANGUAGE_HAVE_EXCEPTIONS' in <deemon/__conf.inl>
#endif

#include <error>

#define handle

function func_01(a_,b_,c_) {
#ifdef handle
	try {try {try {try {try {try {
#endif
	// Using throw in finally, we can raise multiple errors at once!
	try {
		print "#1";
		throw "a";
	} finally {
		try {
			print "#2";
			throw "b";
		} finally {
			try {
				print "#3";
				throw "c";
			} finally {
				try {
					print "#4";
					throw "d";
				} finally {
					try {
						print "#5";
						throw "e";
					} finally {
						print "#6";
						throw list("f");
					}
				}
			}
		}
	}
#ifdef handle
	} catch (a...) { try { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; } finally {
		print a;
		throw a; // Commenting this out allows all exceptions to be handled
	} }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
#endif
}

func_01(10,20,30);
func_01(30,20,10);

