#!/usr/bin/deemon
/* Copyright (c) 2018-2024 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2024 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

/* When executed, the base source file has the preprocessor
 * macro __MAIN__ defined. - This macro is not defined for
 * modules.
 * Secondly, the preprocessor has been extended to support
 * strings in expressions, allowing you to easily check if
 * the current __FILE__ is the __BASE_FILE__, to figure out
 * if your source file was included from somewhere else, or
 * is being executed directly.
 * Note however that deemon source files that both serve as
 * a module, and as a stand-alone executable should simply
 * check if `__MAIN__' has been defined:
 * >> function my_awesome_function() {
 * >>     print "Now doing something wasesome";
 * >> }
 * >>
 * >> #ifdef __MAIN__
 * >> // Execute our awesome function if we are being executed directly
 * >> // The python equivalent would be `if __name__ == '__main__':'
 * >> my_awesome_function();
 * >> #endif
 */

#ifdef __MAIN__

#if __FILE__ == __BASE_FILE__
print "Main file!";
#else
print "File included from the main file";
#endif

#else

#if __FILE__ == __BASE_FILE__
print "Module file!";
#else
print "File included by a module";
#endif

#endif







