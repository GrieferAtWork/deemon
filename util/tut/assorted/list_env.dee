#!/usr/bin/deemon
/* Copyright (c) 2018-2022 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2022 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

/* A simple application that lists all environment variables and their
 * values As a bonus, we iterate the %PATH% environment variable. */

import * from fs;

/* `environ from fs' is a mapping-like singleton that can be used used to
 * access the environment variables set for the calling process.
 * A similar functionality is also provided through the `ipc' module,
 * using `(process from ipc).self().environ'.
 * However, while the two objects share the same meaning, it is
 * implementation-specific if they actually are the exact same object.
 * However, it is guarantied that they can be used interchangably. */
for (local name, value: environ) {
	print repr name, "-->", repr value;
}

for (local p: environ["PATH"].split(DELIM))
	print p;


