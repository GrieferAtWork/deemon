#!/usr/bin/deemon
/* Copyright (c) 2018-2023 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2023 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

// Not much to say here. We simply enumerate all attributes of the 'fs' module

import * from deemon;

local mod = import("fs");
for (local attr: enumattr(mod)) {
	if (attr.decl !== mod) /* compare-object-ids */
		break; /* Only enumerate exported symbols, excluding
		        * the ones defined by base-classes */
	local perm = "";
	if (attr.canget)
		perm += "R";
	if (attr.candel)
		perm += "D";
	if (attr.canset)
		perm += "W";
	if (attr.cancall)
		perm += "C";
	if (attr.isprivate)
		perm += "P";
	if (attr.isinstance)
		perm += "I";
	print "{}Attribute: {}.{} is {} (perm: {})".format({
		attr.isinstance ? "Instance-" : 
		attr.isclass ? "Class-" : "",
		attr.decl,
		attr.name,
		attr.attrtype,
		perm
	});
	//print "DOC:", repr attr.doc; /* Too much spam for this demo... */
}



