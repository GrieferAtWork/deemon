#!/usr/bin/deemon
/* Copyright (c) 2018 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from net;
import * from fs;
import * from deemon;

local sockfile = "/tmp/my_sockfile";
local sa = sockaddr("AF_UNIX",sockfile);

if (stat.exists(sockfile)) {
	/* Client */
	sock = socket("AF_UNIX");
	sock.connect(sa);
	sock.send("Hello!");
	print repr sock;
	sock.close();
} else {
	/* Server */
	try remove(sockfile); catch (...);
	sock = socket("AF_UNIX");
	sock.bind(sa);
	sock.listen();
	ac_thread = thread([]{
		for (;;) {
			thread([](client){
				print "New connection:",client;
				for (local l: client.recv())
					print repr l;
				client.close();
			},sock.accept()).start();
		}
	});
	ac_thread.start();
	print "Server up. Press [RETURN] to exit:",repr sock;
	file.stdin.readline();
	ac_thread.interrupt();
	sock.close();
	ac_thread.join();
	remove(sockfile);
}














