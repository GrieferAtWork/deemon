#!/usr/bin/deemon
/* Copyright (c) 2018-2021 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2021 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

assert "foobar" == 'foobar';
assert "foobar" == r'foobar';
assert r"foobar" == 'foobar';
assert r"foobar" == r'foobar';

/* Assert string search functions. */
assert "{abc{}abc}".index("{") == 0;
assert "{abc{}abc}".rindex("{") == 4;
assert "{abc{}abc}".index("}") == 5;
assert "{abc{}abc}".rindex("}") == 9;
assert "{abc{}abc}".index("abc") == 1;
assert "{abc{}abc}".rindex("abc") == 6;
assert "abc{{}}abc".index("abc") == 0;
assert "abc{{}}abc".rindex("abc") == 7;
assert "abc".index("abc") == 0;
assert "abc".rindex("abc") == 0;

/* Assert string split functions */
assert "".split("/")        == [];
assert "/".split("/")       == ["", ""];
assert "foo".split("/")     == ["foo"];
assert "foo/".split("/")    == ["foo", ""];
assert "foo/bar".split("/") == ["foo", "bar"];
assert "/bar".split("/")    == ["", "bar"];


assert "".replace("", "42")                     == "42";
assert "".replace(" ", "42")                    == "";
assert "".replace("", "")                       == "";
assert " ".replace("", "")                      == " ";
assert " ".replace(" ", "42")                   == "42";
assert " ".replace(" ", "42 ")                  == "42 ";
assert " ".replace(" ", " 42")                  == " 42";
assert " ".replace(" ", " 42 ")                 == " 42 ";
assert ",foo,bar,".replace(",", "-,-")          == "-,-foo-,-bar-,-";
assert "foo\r\nbar\r\nfoobar".splitlines(true)  == ["foo\r\n", "bar\r\n", "foobar"];
assert "foo\rbar\rfoobar".splitlines(true)      == ["foo\r", "bar\r", "foobar"];
assert "foo\nbar\nfoobar".splitlines(true)      == ["foo\n", "bar\n", "foobar"];
assert "foo\r\nbar\r\nfoobar".splitlines(false) == ["foo", "bar", "foobar"];
assert "foo\rbar\rfoobar".splitlines(false)     == ["foo", "bar", "foobar"];
assert "foo\nbar\nfoobar".splitlines(false)     == ["foo", "bar", "foobar"];
assert [pack(10, 20, 30)...] == [10, 20, 30];



