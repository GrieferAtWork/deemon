#!/usr/bin/deemon
/* Copyright (c) 2018 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

/* Test exception handler order, as well as statement result-from-handlers.
 * The whole result-from-handlers part might not seem too important here,
 * but it is very much so, and immensly used by try-expressions:
 * >> local message = try get_message() catch (...) "No message available";
 */
function get_except_val(err) -> ({
	try {
		__stack local inner_stack = 7;
		__asm__("" : "+x" (inner_stack)); /* Prevent optimizations */
		try {
			if (err !is none)
				throw err;
			inner_stack+1;
		} catch (string from deemon) {
			inner_stack+2;
		}
	} catch (...) {
		3;
	}
});

/* Test the 3 possible branches the function above can take. */
assert get_except_val(none) == 8, "Handler wasn't meant to be executed";
assert get_except_val("")   == 9, "Inner handler not executed";
assert get_except_val(1)    == 3, "Catch-all not reached";

