#!/usr/bin/deemon
/* Copyright (c) 2018-2025 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2018-2025 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
import * from deemon;

function _hide(x) {
	local result = x;
	__asm__("" : "+X" (result));
	return result;
}

local a = { _hide("foo"), _hide((10, 20)) };

/* This used to break because it was compiled as "_hide(a) as Sequence",
 * which then meant that the resulting object didn't implement its own
 * `operator iter()' */
local b = { _hide(a)... };

local it = b.operator iter();
assert it.operator next() == "foo";
assert it.operator next() == (10, 20);
